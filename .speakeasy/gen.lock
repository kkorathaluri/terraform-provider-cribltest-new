lockVersion: 2.0.0
id: b2744b7e-1ce3-478a-8c1f-0348b936141a
management:
  docChecksum: 3bd5759622b767560b30a6d95d2ed425
  docVersion: 1.0.0
  speakeasyVersion: 1.540.1
  generationVersion: 2.593.4
  releaseVersion: 0.11.10
  configChecksum: e7c76a2f4286e41a086f36a3a206818e
  published: true
features:
  terraform:
    additionalDependencies: 0.1.0
    additionalProperties: 0.1.2
    constsAndDefaults: 0.2.1
    core: 3.41.6
    deprecations: 2.82.0
    envVarSecurityUsage: 0.1.0
    globalSecurity: 2.81.10
    globalServerURLs: 2.82.1
    ignores: 2.81.1
    inputOutputModels: 2.83.0
    methodServerURLs: 2.82.1
    nullables: 0.0.0
    oauth2ClientCredentials: 0.1.5
    serverIDs: 2.81.1
    unions: 2.81.17
generatedFiles:
  - .gitattributes
  - USAGE.md
  - examples/README.md
  - examples/data-sources/cribl-terraform_pack/data-source.tf
  - examples/provider/provider.tf
  - examples/resources/cribl-terraform_destination/resource.tf
  - examples/resources/cribl-terraform_group/resource.tf
  - examples/resources/cribl-terraform_pack/resource.tf
  - examples/resources/cribl-terraform_source/resource.tf
  - go.mod
  - go.sum
  - internal/planmodifiers/boolplanmodifier/suppress_diff.go
  - internal/planmodifiers/float32planmodifier/suppress_diff.go
  - internal/planmodifiers/float64planmodifier/suppress_diff.go
  - internal/planmodifiers/int32planmodifier/suppress_diff.go
  - internal/planmodifiers/int64planmodifier/suppress_diff.go
  - internal/planmodifiers/listplanmodifier/suppress_diff.go
  - internal/planmodifiers/mapplanmodifier/suppress_diff.go
  - internal/planmodifiers/numberplanmodifier/suppress_diff.go
  - internal/planmodifiers/objectplanmodifier/suppress_diff.go
  - internal/planmodifiers/setplanmodifier/suppress_diff.go
  - internal/planmodifiers/stringplanmodifier/suppress_diff.go
  - internal/planmodifiers/utils/state_check.go
  - internal/provider/destination_resource.go
  - internal/provider/destination_resource_sdk.go
  - internal/provider/group_resource.go
  - internal/provider/group_resource_sdk.go
  - internal/provider/pack_data_source.go
  - internal/provider/pack_data_source_sdk.go
  - internal/provider/pack_resource.go
  - internal/provider/pack_resource_sdk.go
  - internal/provider/provider.go
  - internal/provider/reflect/diags.go
  - internal/provider/reflect/doc.go
  - internal/provider/reflect/generic_attr_value.go
  - internal/provider/reflect/helpers.go
  - internal/provider/reflect/interfaces.go
  - internal/provider/reflect/into.go
  - internal/provider/reflect/map.go
  - internal/provider/reflect/number.go
  - internal/provider/reflect/options.go
  - internal/provider/reflect/outof.go
  - internal/provider/reflect/pointer.go
  - internal/provider/reflect/primitive.go
  - internal/provider/reflect/slice.go
  - internal/provider/reflect/struct.go
  - internal/provider/source_resource.go
  - internal/provider/source_resource_sdk.go
  - internal/provider/typeconvert/date.go
  - internal/provider/typeconvert/datetime.go
  - internal/provider/typeconvert/int32.go
  - internal/provider/types/additional_properties.go
  - internal/provider/types/allow.go
  - internal/provider/types/auth.go
  - internal/provider/types/auth_tokens.go
  - internal/provider/types/auth_tokens_ext.go
  - internal/provider/types/authentication.go
  - internal/provider/types/cert_options.go
  - internal/provider/types/checkpointing.go
  - internal/provider/types/collectors.go
  - internal/provider/types/column_mappings.go
  - internal/provider/types/commit.go
  - internal/provider/types/config_group_cloud.go
  - internal/provider/types/connections.go
  - internal/provider/types/content_config.go
  - internal/provider/types/cpu.go
  - internal/provider/types/custom.go
  - internal/provider/types/custom_labels.go
  - internal/provider/types/disk.go
  - internal/provider/types/disk_spooling.go
  - internal/provider/types/disks_and_file_systems.go
  - internal/provider/types/dns.go
  - internal/provider/types/endpoint_headers.go
  - internal/provider/types/endpoint_params.go
  - internal/provider/types/extent_tags.go
  - internal/provider/types/extra_http_headers.go
  - internal/provider/types/extra_log_types.go
  - internal/provider/types/extra_params.go
  - internal/provider/types/filter.go
  - internal/provider/types/filters.go
  - internal/provider/types/firewall.go
  - internal/provider/types/git.go
  - internal/provider/types/host.go
  - internal/provider/types/host_info.go
  - internal/provider/types/hosts.go
  - internal/provider/types/hosts_file.go
  - internal/provider/types/indexer_discovery_configs.go
  - internal/provider/types/ingest_if_not_exists.go
  - internal/provider/types/input_appscope.go
  - internal/provider/types/input_appscope_connections.go
  - internal/provider/types/input_appscope_metadata.go
  - internal/provider/types/input_appscope_persistence.go
  - internal/provider/types/input_appscope_pq.go
  - internal/provider/types/input_appscope_tls_settings_server_side.go
  - internal/provider/types/input_azure_blob.go
  - internal/provider/types/input_azure_blob_certificate.go
  - internal/provider/types/input_azure_blob_connections.go
  - internal/provider/types/input_azure_blob_metadata.go
  - internal/provider/types/input_azure_blob_pq.go
  - internal/provider/types/input_collection.go
  - internal/provider/types/input_collection_metadata.go
  - internal/provider/types/input_confluent_cloud.go
  - internal/provider/types/input_confluent_cloud_auth.go
  - internal/provider/types/input_confluent_cloud_authentication.go
  - internal/provider/types/input_confluent_cloud_connections.go
  - internal/provider/types/input_confluent_cloud_kafka_schema_registry_authentication.go
  - internal/provider/types/input_confluent_cloud_kafka_schema_registry_tls_settings_client_side.go
  - internal/provider/types/input_confluent_cloud_metadata.go
  - internal/provider/types/input_confluent_cloud_pq.go
  - internal/provider/types/input_confluent_cloud_tls_settings_client_side.go
  - internal/provider/types/input_cribl.go
  - internal/provider/types/input_cribl_connections.go
  - internal/provider/types/input_cribl_http.go
  - internal/provider/types/input_cribl_http_connections.go
  - internal/provider/types/input_cribl_http_metadata.go
  - internal/provider/types/input_cribl_http_pq.go
  - internal/provider/types/input_cribl_httptls_settings_server_side.go
  - internal/provider/types/input_cribl_metadata.go
  - internal/provider/types/input_cribl_pq.go
  - internal/provider/types/input_cribl_tcp.go
  - internal/provider/types/input_cribl_tcp_connections.go
  - internal/provider/types/input_cribl_tcp_metadata.go
  - internal/provider/types/input_cribl_tcp_pq.go
  - internal/provider/types/input_cribl_tcptls_settings_server_side.go
  - internal/provider/types/input_criblmetrics.go
  - internal/provider/types/input_criblmetrics_connections.go
  - internal/provider/types/input_criblmetrics_metadata.go
  - internal/provider/types/input_criblmetrics_pq.go
  - internal/provider/types/input_crowdstrike.go
  - internal/provider/types/input_crowdstrike_connections.go
  - internal/provider/types/input_crowdstrike_metadata.go
  - internal/provider/types/input_crowdstrike_pq.go
  - internal/provider/types/input_crowdstrike_preprocess.go
  - internal/provider/types/input_datadog_agent.go
  - internal/provider/types/input_datadog_agent_connections.go
  - internal/provider/types/input_datadog_agent_metadata.go
  - internal/provider/types/input_datadog_agent_pq.go
  - internal/provider/types/input_datadog_agent_proxy_mode.go
  - internal/provider/types/input_datadog_agent_tls_settings_server_side.go
  - internal/provider/types/input_datagen.go
  - internal/provider/types/input_datagen_connections.go
  - internal/provider/types/input_datagen_metadata.go
  - internal/provider/types/input_datagen_pq.go
  - internal/provider/types/input_edge_prometheus.go
  - internal/provider/types/input_edge_prometheus_connections.go
  - internal/provider/types/input_edge_prometheus_metadata.go
  - internal/provider/types/input_edge_prometheus_pq.go
  - internal/provider/types/input_edge_prometheus_search_filter.go
  - internal/provider/types/input_elastic.go
  - internal/provider/types/input_elastic_connections.go
  - internal/provider/types/input_elastic_metadata.go
  - internal/provider/types/input_elastic_pq.go
  - internal/provider/types/input_elastic_tls_settings_server_side.go
  - internal/provider/types/input_eventhub.go
  - internal/provider/types/input_eventhub_authentication.go
  - internal/provider/types/input_eventhub_connections.go
  - internal/provider/types/input_eventhub_metadata.go
  - internal/provider/types/input_eventhub_pq.go
  - internal/provider/types/input_eventhub_tls_settings_client_side.go
  - internal/provider/types/input_exec.go
  - internal/provider/types/input_exec_connections.go
  - internal/provider/types/input_exec_metadata.go
  - internal/provider/types/input_exec_pq.go
  - internal/provider/types/input_file.go
  - internal/provider/types/input_file_connections.go
  - internal/provider/types/input_file_metadata.go
  - internal/provider/types/input_file_pq.go
  - internal/provider/types/input_firehose.go
  - internal/provider/types/input_firehose_connections.go
  - internal/provider/types/input_firehose_metadata.go
  - internal/provider/types/input_firehose_pq.go
  - internal/provider/types/input_firehose_tls_settings_server_side.go
  - internal/provider/types/input_google_pubsub.go
  - internal/provider/types/input_google_pubsub_connections.go
  - internal/provider/types/input_google_pubsub_metadata.go
  - internal/provider/types/input_google_pubsub_pq.go
  - internal/provider/types/input_grafana.go
  - internal/provider/types/input_grafana1.go
  - internal/provider/types/input_grafana1_oauth_headers.go
  - internal/provider/types/input_grafana1_oauth_params.go
  - internal/provider/types/input_grafana2.go
  - internal/provider/types/input_grafana2_connections.go
  - internal/provider/types/input_grafana2_loki_auth_oauth_headers.go
  - internal/provider/types/input_grafana2_loki_auth_oauth_params.go
  - internal/provider/types/input_grafana2_metadata.go
  - internal/provider/types/input_grafana2_oauth_headers.go
  - internal/provider/types/input_grafana2_oauth_params.go
  - internal/provider/types/input_grafana2_pq.go
  - internal/provider/types/input_grafana2_tls_settings_server_side.go
  - internal/provider/types/input_grafana_connections.go
  - internal/provider/types/input_grafana_loki_auth.go
  - internal/provider/types/input_grafana_metadata.go
  - internal/provider/types/input_grafana_oauth_headers.go
  - internal/provider/types/input_grafana_oauth_params.go
  - internal/provider/types/input_grafana_pq.go
  - internal/provider/types/input_grafana_prometheus_auth.go
  - internal/provider/types/input_grafana_tls_settings_server_side.go
  - internal/provider/types/input_http.go
  - internal/provider/types/input_http_auth_tokens_ext_metadata.go
  - internal/provider/types/input_http_connections.go
  - internal/provider/types/input_http_metadata.go
  - internal/provider/types/input_http_pq.go
  - internal/provider/types/input_http_raw.go
  - internal/provider/types/input_http_raw_auth_tokens_ext.go
  - internal/provider/types/input_http_raw_auth_tokens_ext_metadata.go
  - internal/provider/types/input_http_raw_connections.go
  - internal/provider/types/input_http_raw_metadata.go
  - internal/provider/types/input_http_raw_pq.go
  - internal/provider/types/input_http_raw_tls_settings_server_side.go
  - internal/provider/types/input_journal_files.go
  - internal/provider/types/input_journal_files_connections.go
  - internal/provider/types/input_journal_files_metadata.go
  - internal/provider/types/input_journal_files_pq.go
  - internal/provider/types/input_journal_files_rules.go
  - internal/provider/types/input_kafka.go
  - internal/provider/types/input_kafka_auth.go
  - internal/provider/types/input_kafka_connections.go
  - internal/provider/types/input_kafka_metadata.go
  - internal/provider/types/input_kafka_pq.go
  - internal/provider/types/input_kafka_tls_settings_client_side.go
  - internal/provider/types/input_kinesis.go
  - internal/provider/types/input_kinesis_connections.go
  - internal/provider/types/input_kinesis_metadata.go
  - internal/provider/types/input_kinesis_pq.go
  - internal/provider/types/input_kube_events.go
  - internal/provider/types/input_kube_events_connections.go
  - internal/provider/types/input_kube_events_metadata.go
  - internal/provider/types/input_kube_events_pq.go
  - internal/provider/types/input_kube_events_rules.go
  - internal/provider/types/input_kube_logs.go
  - internal/provider/types/input_kube_logs_connections.go
  - internal/provider/types/input_kube_logs_disk_spooling.go
  - internal/provider/types/input_kube_logs_metadata.go
  - internal/provider/types/input_kube_logs_pq.go
  - internal/provider/types/input_kube_logs_rules.go
  - internal/provider/types/input_kube_metrics.go
  - internal/provider/types/input_kube_metrics_connections.go
  - internal/provider/types/input_kube_metrics_metadata.go
  - internal/provider/types/input_kube_metrics_persistence.go
  - internal/provider/types/input_kube_metrics_pq.go
  - internal/provider/types/input_kube_metrics_rules.go
  - internal/provider/types/input_loki.go
  - internal/provider/types/input_loki_connections.go
  - internal/provider/types/input_loki_metadata.go
  - internal/provider/types/input_loki_oauth_headers.go
  - internal/provider/types/input_loki_oauth_params.go
  - internal/provider/types/input_loki_pq.go
  - internal/provider/types/input_loki_tls_settings_server_side.go
  - internal/provider/types/input_metrics.go
  - internal/provider/types/input_metrics_connections.go
  - internal/provider/types/input_metrics_metadata.go
  - internal/provider/types/input_metrics_pq.go
  - internal/provider/types/input_metrics_tls_settings_server_side.go
  - internal/provider/types/input_model_driven_telemetry.go
  - internal/provider/types/input_model_driven_telemetry_connections.go
  - internal/provider/types/input_model_driven_telemetry_metadata.go
  - internal/provider/types/input_model_driven_telemetry_pq.go
  - internal/provider/types/input_model_driven_telemetry_tls_settings_server_side.go
  - internal/provider/types/input_msk.go
  - internal/provider/types/input_msk_auth.go
  - internal/provider/types/input_msk_connections.go
  - internal/provider/types/input_msk_kafka_schema_registry_authentication.go
  - internal/provider/types/input_msk_kafka_schema_registry_tls_settings_client_side.go
  - internal/provider/types/input_msk_metadata.go
  - internal/provider/types/input_msk_pq.go
  - internal/provider/types/input_msk_tls_settings_client_side.go
  - internal/provider/types/input_netflow.go
  - internal/provider/types/input_netflow_connections.go
  - internal/provider/types/input_netflow_metadata.go
  - internal/provider/types/input_netflow_pq.go
  - internal/provider/types/input_office365_mgmt.go
  - internal/provider/types/input_office365_mgmt_connections.go
  - internal/provider/types/input_office365_mgmt_metadata.go
  - internal/provider/types/input_office365_mgmt_pq.go
  - internal/provider/types/input_office365_mgmt_retry_rules.go
  - internal/provider/types/input_office365_msg_trace.go
  - internal/provider/types/input_office365_msg_trace_connections.go
  - internal/provider/types/input_office365_msg_trace_metadata.go
  - internal/provider/types/input_office365_msg_trace_pq.go
  - internal/provider/types/input_office365_msg_trace_retry_rules.go
  - internal/provider/types/input_office365_service.go
  - internal/provider/types/input_office365_service_connections.go
  - internal/provider/types/input_office365_service_content_config.go
  - internal/provider/types/input_office365_service_metadata.go
  - internal/provider/types/input_office365_service_pq.go
  - internal/provider/types/input_office365_service_retry_rules.go
  - internal/provider/types/input_open_telemetry.go
  - internal/provider/types/input_open_telemetry_connections.go
  - internal/provider/types/input_open_telemetry_metadata.go
  - internal/provider/types/input_open_telemetry_oauth_headers.go
  - internal/provider/types/input_open_telemetry_oauth_params.go
  - internal/provider/types/input_open_telemetry_pq.go
  - internal/provider/types/input_open_telemetry_tls_settings_server_side.go
  - internal/provider/types/input_prometheus.go
  - internal/provider/types/input_prometheus_connections.go
  - internal/provider/types/input_prometheus_metadata.go
  - internal/provider/types/input_prometheus_pq.go
  - internal/provider/types/input_prometheus_rw.go
  - internal/provider/types/input_prometheus_rw_connections.go
  - internal/provider/types/input_prometheus_rw_metadata.go
  - internal/provider/types/input_prometheus_rw_oauth_headers.go
  - internal/provider/types/input_prometheus_rw_oauth_params.go
  - internal/provider/types/input_prometheus_rw_pq.go
  - internal/provider/types/input_prometheus_rw_tls_settings_server_side.go
  - internal/provider/types/input_raw_udp.go
  - internal/provider/types/input_raw_udp_connections.go
  - internal/provider/types/input_raw_udp_metadata.go
  - internal/provider/types/input_raw_udp_pq.go
  - internal/provider/types/input_s3.go
  - internal/provider/types/input_s3_checkpointing.go
  - internal/provider/types/input_s3_connections.go
  - internal/provider/types/input_s3_inventory.go
  - internal/provider/types/input_s3_inventory_checkpointing.go
  - internal/provider/types/input_s3_inventory_connections.go
  - internal/provider/types/input_s3_inventory_metadata.go
  - internal/provider/types/input_s3_inventory_pq.go
  - internal/provider/types/input_s3_inventory_preprocess.go
  - internal/provider/types/input_s3_metadata.go
  - internal/provider/types/input_s3_pq.go
  - internal/provider/types/input_s3_preprocess.go
  - internal/provider/types/input_security_lake.go
  - internal/provider/types/input_security_lake_checkpointing.go
  - internal/provider/types/input_security_lake_connections.go
  - internal/provider/types/input_security_lake_metadata.go
  - internal/provider/types/input_security_lake_pq.go
  - internal/provider/types/input_security_lake_preprocess.go
  - internal/provider/types/input_snmp.go
  - internal/provider/types/input_snmp_connections.go
  - internal/provider/types/input_snmp_metadata.go
  - internal/provider/types/input_snmp_pq.go
  - internal/provider/types/input_splunk.go
  - internal/provider/types/input_splunk_connections.go
  - internal/provider/types/input_splunk_hec.go
  - internal/provider/types/input_splunk_hec_auth_tokens.go
  - internal/provider/types/input_splunk_hec_auth_tokens_metadata.go
  - internal/provider/types/input_splunk_hec_connections.go
  - internal/provider/types/input_splunk_hec_metadata.go
  - internal/provider/types/input_splunk_hec_pq.go
  - internal/provider/types/input_splunk_hec_tls_settings_server_side.go
  - internal/provider/types/input_splunk_metadata.go
  - internal/provider/types/input_splunk_pq.go
  - internal/provider/types/input_splunk_search.go
  - internal/provider/types/input_splunk_search_connections.go
  - internal/provider/types/input_splunk_search_metadata.go
  - internal/provider/types/input_splunk_search_pq.go
  - internal/provider/types/input_splunk_tls_settings_server_side.go
  - internal/provider/types/input_sqs.go
  - internal/provider/types/input_sqs_connections.go
  - internal/provider/types/input_sqs_metadata.go
  - internal/provider/types/input_sqs_pq.go
  - internal/provider/types/input_syslog.go
  - internal/provider/types/input_syslog1.go
  - internal/provider/types/input_syslog2.go
  - internal/provider/types/input_syslog2_connections.go
  - internal/provider/types/input_syslog2_metadata.go
  - internal/provider/types/input_syslog2_pq.go
  - internal/provider/types/input_syslog2_tls_settings_server_side.go
  - internal/provider/types/input_syslog_connections.go
  - internal/provider/types/input_syslog_metadata.go
  - internal/provider/types/input_syslog_pq.go
  - internal/provider/types/input_syslog_tls_settings_server_side.go
  - internal/provider/types/input_system_metrics.go
  - internal/provider/types/input_system_metrics_connections.go
  - internal/provider/types/input_system_metrics_container.go
  - internal/provider/types/input_system_metrics_memory.go
  - internal/provider/types/input_system_metrics_metadata.go
  - internal/provider/types/input_system_metrics_persistence.go
  - internal/provider/types/input_system_metrics_pq.go
  - internal/provider/types/input_system_metrics_process.go
  - internal/provider/types/input_system_metrics_system.go
  - internal/provider/types/input_system_state.go
  - internal/provider/types/input_system_state_connections.go
  - internal/provider/types/input_system_state_interfaces.go
  - internal/provider/types/input_system_state_metadata.go
  - internal/provider/types/input_system_state_pq.go
  - internal/provider/types/input_system_state_routes.go
  - internal/provider/types/input_tcp.go
  - internal/provider/types/input_tcp_connections.go
  - internal/provider/types/input_tcp_metadata.go
  - internal/provider/types/input_tcp_pq.go
  - internal/provider/types/input_tcp_preprocess.go
  - internal/provider/types/input_tcpjson.go
  - internal/provider/types/input_tcpjson_connections.go
  - internal/provider/types/input_tcpjson_metadata.go
  - internal/provider/types/input_tcpjson_pq.go
  - internal/provider/types/input_tcpjson_tls_settings_server_side.go
  - internal/provider/types/input_tcptls_settings_server_side.go
  - internal/provider/types/input_wef.go
  - internal/provider/types/input_wef_connections.go
  - internal/provider/types/input_wef_metadata.go
  - internal/provider/types/input_wef_pq.go
  - internal/provider/types/input_wef_subscriptions_metadata.go
  - internal/provider/types/input_win_event_logs.go
  - internal/provider/types/input_win_event_logs_connections.go
  - internal/provider/types/input_win_event_logs_metadata.go
  - internal/provider/types/input_win_event_logs_pq.go
  - internal/provider/types/input_windows_metrics.go
  - internal/provider/types/input_windows_metrics_connections.go
  - internal/provider/types/input_windows_metrics_cpu.go
  - internal/provider/types/input_windows_metrics_custom.go
  - internal/provider/types/input_windows_metrics_disk.go
  - internal/provider/types/input_windows_metrics_host.go
  - internal/provider/types/input_windows_metrics_memory.go
  - internal/provider/types/input_windows_metrics_metadata.go
  - internal/provider/types/input_windows_metrics_network.go
  - internal/provider/types/input_windows_metrics_persistence.go
  - internal/provider/types/input_windows_metrics_pq.go
  - internal/provider/types/input_windows_metrics_process.go
  - internal/provider/types/input_windows_metrics_sets.go
  - internal/provider/types/input_windows_metrics_system.go
  - internal/provider/types/input_wiz.go
  - internal/provider/types/input_wiz_connections.go
  - internal/provider/types/input_wiz_content_config.go
  - internal/provider/types/input_wiz_metadata.go
  - internal/provider/types/input_wiz_pq.go
  - internal/provider/types/input_wiz_retry_rules.go
  - internal/provider/types/input_zscaler_hec.go
  - internal/provider/types/input_zscaler_hec_auth_tokens.go
  - internal/provider/types/input_zscaler_hec_auth_tokens_metadata.go
  - internal/provider/types/input_zscaler_hec_connections.go
  - internal/provider/types/input_zscaler_hec_metadata.go
  - internal/provider/types/input_zscaler_hec_pq.go
  - internal/provider/types/input_zscaler_hec_tls_settings_server_side.go
  - internal/provider/types/kafka_schema_registry_authentication.go
  - internal/provider/types/key_value_metadata.go
  - internal/provider/types/labels.go
  - internal/provider/types/listening_ports.go
  - internal/provider/types/log_labels.go
  - internal/provider/types/logged_in_users.go
  - internal/provider/types/loki_auth.go
  - internal/provider/types/mtls_settings.go
  - internal/provider/types/network.go
  - internal/provider/types/oauth_headers.go
  - internal/provider/types/oauth_params.go
  - internal/provider/types/output_azure_blob.go
  - internal/provider/types/output_azure_blob_certificate.go
  - internal/provider/types/output_azure_blob_key_value_metadata.go
  - internal/provider/types/output_azure_data_explorer.go
  - internal/provider/types/output_azure_data_explorer_certificate.go
  - internal/provider/types/output_azure_data_explorer_pq_controls.go
  - internal/provider/types/output_azure_data_explorer_response_retry_settings.go
  - internal/provider/types/output_azure_data_explorer_timeout_retry_settings.go
  - internal/provider/types/output_azure_eventhub.go
  - internal/provider/types/output_azure_eventhub_authentication.go
  - internal/provider/types/output_azure_eventhub_pq_controls.go
  - internal/provider/types/output_azure_eventhub_tls_settings_client_side.go
  - internal/provider/types/output_azure_logs.go
  - internal/provider/types/output_azure_logs_extra_http_headers.go
  - internal/provider/types/output_azure_logs_pq_controls.go
  - internal/provider/types/output_azure_logs_response_retry_settings.go
  - internal/provider/types/output_azure_logs_timeout_retry_settings.go
  - internal/provider/types/output_click_house.go
  - internal/provider/types/output_click_house_extra_http_headers.go
  - internal/provider/types/output_click_house_oauth_headers.go
  - internal/provider/types/output_click_house_oauth_params.go
  - internal/provider/types/output_click_house_pq_controls.go
  - internal/provider/types/output_click_house_response_retry_settings.go
  - internal/provider/types/output_click_house_timeout_retry_settings.go
  - internal/provider/types/output_click_house_tls_settings_client_side.go
  - internal/provider/types/output_cloudwatch.go
  - internal/provider/types/output_cloudwatch_pq_controls.go
  - internal/provider/types/output_confluent_cloud.go
  - internal/provider/types/output_confluent_cloud_auth.go
  - internal/provider/types/output_confluent_cloud_authentication.go
  - internal/provider/types/output_confluent_cloud_kafka_schema_registry_authentication.go
  - internal/provider/types/output_confluent_cloud_kafka_schema_registry_tls_settings_client_side.go
  - internal/provider/types/output_confluent_cloud_pq_controls.go
  - internal/provider/types/output_confluent_cloud_tls_settings_client_side.go
  - internal/provider/types/output_cribl_http.go
  - internal/provider/types/output_cribl_http_extra_http_headers.go
  - internal/provider/types/output_cribl_http_pq_controls.go
  - internal/provider/types/output_cribl_http_response_retry_settings.go
  - internal/provider/types/output_cribl_http_status.go
  - internal/provider/types/output_cribl_http_timeout_retry_settings.go
  - internal/provider/types/output_cribl_http_urls.go
  - internal/provider/types/output_cribl_httptls_settings_client_side.go
  - internal/provider/types/output_cribl_lake.go
  - internal/provider/types/output_cribl_tcp.go
  - internal/provider/types/output_cribl_tcp_hosts.go
  - internal/provider/types/output_cribl_tcp_pq_controls.go
  - internal/provider/types/output_cribl_tcptls_settings_client_side.go
  - internal/provider/types/output_crowdstrike_next_gen_siem.go
  - internal/provider/types/output_crowdstrike_next_gen_siem_extra_http_headers.go
  - internal/provider/types/output_crowdstrike_next_gen_siem_pq_controls.go
  - internal/provider/types/output_crowdstrike_next_gen_siem_response_retry_settings.go
  - internal/provider/types/output_crowdstrike_next_gen_siem_timeout_retry_settings.go
  - internal/provider/types/output_datadog.go
  - internal/provider/types/output_datadog_extra_http_headers.go
  - internal/provider/types/output_datadog_pq_controls.go
  - internal/provider/types/output_datadog_response_retry_settings.go
  - internal/provider/types/output_datadog_timeout_retry_settings.go
  - internal/provider/types/output_dataset.go
  - internal/provider/types/output_dataset_extra_http_headers.go
  - internal/provider/types/output_dataset_pq_controls.go
  - internal/provider/types/output_dataset_response_retry_settings.go
  - internal/provider/types/output_dataset_timeout_retry_settings.go
  - internal/provider/types/output_default.go
  - internal/provider/types/output_devnull.go
  - internal/provider/types/output_disk_spool.go
  - internal/provider/types/output_dl_s3.go
  - internal/provider/types/output_dl_s3_key_value_metadata.go
  - internal/provider/types/output_dynatrace_http.go
  - internal/provider/types/output_dynatrace_http_extra_http_headers.go
  - internal/provider/types/output_dynatrace_http_pq_controls.go
  - internal/provider/types/output_dynatrace_http_response_retry_settings.go
  - internal/provider/types/output_dynatrace_http_timeout_retry_settings.go
  - internal/provider/types/output_dynatrace_otlp.go
  - internal/provider/types/output_dynatrace_otlp_extra_http_headers.go
  - internal/provider/types/output_dynatrace_otlp_metadata.go
  - internal/provider/types/output_dynatrace_otlp_pq_controls.go
  - internal/provider/types/output_dynatrace_otlp_response_retry_settings.go
  - internal/provider/types/output_dynatrace_otlp_timeout_retry_settings.go
  - internal/provider/types/output_elastic.go
  - internal/provider/types/output_elastic_cloud.go
  - internal/provider/types/output_elastic_cloud_auth.go
  - internal/provider/types/output_elastic_cloud_extra_http_headers.go
  - internal/provider/types/output_elastic_cloud_extra_params.go
  - internal/provider/types/output_elastic_cloud_pq_controls.go
  - internal/provider/types/output_elastic_cloud_response_retry_settings.go
  - internal/provider/types/output_elastic_cloud_timeout_retry_settings.go
  - internal/provider/types/output_elastic_extra_http_headers.go
  - internal/provider/types/output_elastic_pq_controls.go
  - internal/provider/types/output_elastic_response_retry_settings.go
  - internal/provider/types/output_elastic_timeout_retry_settings.go
  - internal/provider/types/output_elastic_urls.go
  - internal/provider/types/output_exabeam.go
  - internal/provider/types/output_filesystem.go
  - internal/provider/types/output_google_chronicle.go
  - internal/provider/types/output_google_chronicle_extra_http_headers.go
  - internal/provider/types/output_google_chronicle_pq_controls.go
  - internal/provider/types/output_google_chronicle_response_retry_settings.go
  - internal/provider/types/output_google_chronicle_timeout_retry_settings.go
  - internal/provider/types/output_google_cloud_logging.go
  - internal/provider/types/output_google_cloud_logging_pq_controls.go
  - internal/provider/types/output_google_cloud_storage.go
  - internal/provider/types/output_google_cloud_storage_key_value_metadata.go
  - internal/provider/types/output_google_pubsub.go
  - internal/provider/types/output_google_pubsub_pq_controls.go
  - internal/provider/types/output_grafana_cloud.go
  - internal/provider/types/output_grafana_cloud1.go
  - internal/provider/types/output_grafana_cloud1_labels.go
  - internal/provider/types/output_grafana_cloud2.go
  - internal/provider/types/output_grafana_cloud2_extra_http_headers.go
  - internal/provider/types/output_grafana_cloud2_loki_auth.go
  - internal/provider/types/output_grafana_cloud2_pq_controls.go
  - internal/provider/types/output_grafana_cloud2_prometheus_auth.go
  - internal/provider/types/output_grafana_cloud2_response_retry_settings.go
  - internal/provider/types/output_grafana_cloud2_timeout_retry_settings.go
  - internal/provider/types/output_grafana_cloud_extra_http_headers.go
  - internal/provider/types/output_grafana_cloud_labels.go
  - internal/provider/types/output_grafana_cloud_loki_auth.go
  - internal/provider/types/output_grafana_cloud_pq_controls.go
  - internal/provider/types/output_grafana_cloud_prometheus_auth.go
  - internal/provider/types/output_grafana_cloud_response_retry_settings.go
  - internal/provider/types/output_grafana_cloud_timeout_retry_settings.go
  - internal/provider/types/output_graphite.go
  - internal/provider/types/output_graphite_pq_controls.go
  - internal/provider/types/output_honeycomb.go
  - internal/provider/types/output_honeycomb_extra_http_headers.go
  - internal/provider/types/output_honeycomb_pq_controls.go
  - internal/provider/types/output_honeycomb_response_retry_settings.go
  - internal/provider/types/output_honeycomb_timeout_retry_settings.go
  - internal/provider/types/output_humio_hec.go
  - internal/provider/types/output_humio_hec_extra_http_headers.go
  - internal/provider/types/output_humio_hec_pq_controls.go
  - internal/provider/types/output_humio_hec_response_retry_settings.go
  - internal/provider/types/output_humio_hec_timeout_retry_settings.go
  - internal/provider/types/output_influxdb.go
  - internal/provider/types/output_influxdb_extra_http_headers.go
  - internal/provider/types/output_influxdb_oauth_headers.go
  - internal/provider/types/output_influxdb_oauth_params.go
  - internal/provider/types/output_influxdb_pq_controls.go
  - internal/provider/types/output_influxdb_response_retry_settings.go
  - internal/provider/types/output_influxdb_timeout_retry_settings.go
  - internal/provider/types/output_kafka.go
  - internal/provider/types/output_kafka_auth.go
  - internal/provider/types/output_kafka_authentication.go
  - internal/provider/types/output_kafka_kafka_schema_registry_authentication.go
  - internal/provider/types/output_kafka_kafka_schema_registry_tls_settings_client_side.go
  - internal/provider/types/output_kafka_pq_controls.go
  - internal/provider/types/output_kafka_tls_settings_client_side.go
  - internal/provider/types/output_kinesis.go
  - internal/provider/types/output_kinesis_pq_controls.go
  - internal/provider/types/output_loki.go
  - internal/provider/types/output_loki_extra_http_headers.go
  - internal/provider/types/output_loki_pq_controls.go
  - internal/provider/types/output_loki_response_retry_settings.go
  - internal/provider/types/output_loki_timeout_retry_settings.go
  - internal/provider/types/output_minio.go
  - internal/provider/types/output_minio_key_value_metadata.go
  - internal/provider/types/output_msk.go
  - internal/provider/types/output_msk_auth.go
  - internal/provider/types/output_msk_kafka_schema_registry_authentication.go
  - internal/provider/types/output_msk_kafka_schema_registry_tls_settings_client_side.go
  - internal/provider/types/output_msk_pq_controls.go
  - internal/provider/types/output_msk_tls_settings_client_side.go
  - internal/provider/types/output_netflow.go
  - internal/provider/types/output_netflow_hosts.go
  - internal/provider/types/output_newrelic.go
  - internal/provider/types/output_newrelic_events.go
  - internal/provider/types/output_newrelic_events_extra_http_headers.go
  - internal/provider/types/output_newrelic_events_pq_controls.go
  - internal/provider/types/output_newrelic_events_response_retry_settings.go
  - internal/provider/types/output_newrelic_events_timeout_retry_settings.go
  - internal/provider/types/output_newrelic_extra_http_headers.go
  - internal/provider/types/output_newrelic_metadata.go
  - internal/provider/types/output_newrelic_pq_controls.go
  - internal/provider/types/output_newrelic_response_retry_settings.go
  - internal/provider/types/output_newrelic_timeout_retry_settings.go
  - internal/provider/types/output_open_telemetry.go
  - internal/provider/types/output_open_telemetry_extra_http_headers.go
  - internal/provider/types/output_open_telemetry_metadata.go
  - internal/provider/types/output_open_telemetry_oauth_headers.go
  - internal/provider/types/output_open_telemetry_oauth_params.go
  - internal/provider/types/output_open_telemetry_pq_controls.go
  - internal/provider/types/output_open_telemetry_response_retry_settings.go
  - internal/provider/types/output_open_telemetry_timeout_retry_settings.go
  - internal/provider/types/output_open_telemetry_tls_settings_client_side.go
  - internal/provider/types/output_prometheus.go
  - internal/provider/types/output_prometheus_extra_http_headers.go
  - internal/provider/types/output_prometheus_oauth_headers.go
  - internal/provider/types/output_prometheus_oauth_params.go
  - internal/provider/types/output_prometheus_pq_controls.go
  - internal/provider/types/output_prometheus_response_retry_settings.go
  - internal/provider/types/output_prometheus_timeout_retry_settings.go
  - internal/provider/types/output_ring.go
  - internal/provider/types/output_router.go
  - internal/provider/types/output_router_rules.go
  - internal/provider/types/output_s3.go
  - internal/provider/types/output_s3_key_value_metadata.go
  - internal/provider/types/output_security_lake.go
  - internal/provider/types/output_security_lake_key_value_metadata.go
  - internal/provider/types/output_sentinel.go
  - internal/provider/types/output_sentinel_extra_http_headers.go
  - internal/provider/types/output_sentinel_pq_controls.go
  - internal/provider/types/output_sentinel_response_retry_settings.go
  - internal/provider/types/output_sentinel_timeout_retry_settings.go
  - internal/provider/types/output_service_now.go
  - internal/provider/types/output_service_now_extra_http_headers.go
  - internal/provider/types/output_service_now_metadata.go
  - internal/provider/types/output_service_now_pq_controls.go
  - internal/provider/types/output_service_now_response_retry_settings.go
  - internal/provider/types/output_service_now_timeout_retry_settings.go
  - internal/provider/types/output_service_now_tls_settings_client_side.go
  - internal/provider/types/output_signalfx.go
  - internal/provider/types/output_signalfx_extra_http_headers.go
  - internal/provider/types/output_signalfx_pq_controls.go
  - internal/provider/types/output_signalfx_response_retry_settings.go
  - internal/provider/types/output_signalfx_timeout_retry_settings.go
  - internal/provider/types/output_snmp.go
  - internal/provider/types/output_snmp_hosts.go
  - internal/provider/types/output_sns.go
  - internal/provider/types/output_sns_pq_controls.go
  - internal/provider/types/output_splunk.go
  - internal/provider/types/output_splunk_hec.go
  - internal/provider/types/output_splunk_hec_extra_http_headers.go
  - internal/provider/types/output_splunk_hec_pq_controls.go
  - internal/provider/types/output_splunk_hec_response_retry_settings.go
  - internal/provider/types/output_splunk_hec_timeout_retry_settings.go
  - internal/provider/types/output_splunk_hec_urls.go
  - internal/provider/types/output_splunk_lb.go
  - internal/provider/types/output_splunk_lb_auth_tokens.go
  - internal/provider/types/output_splunk_lb_pq_controls.go
  - internal/provider/types/output_splunk_lb_tls_settings_client_side.go
  - internal/provider/types/output_splunk_pq_controls.go
  - internal/provider/types/output_splunk_tls_settings_client_side.go
  - internal/provider/types/output_sqs.go
  - internal/provider/types/output_sqs_pq_controls.go
  - internal/provider/types/output_statsd.go
  - internal/provider/types/output_statsd_ext.go
  - internal/provider/types/output_statsd_ext_pq_controls.go
  - internal/provider/types/output_statsd_pq_controls.go
  - internal/provider/types/output_sumo_logic.go
  - internal/provider/types/output_sumo_logic_extra_http_headers.go
  - internal/provider/types/output_sumo_logic_pq_controls.go
  - internal/provider/types/output_sumo_logic_response_retry_settings.go
  - internal/provider/types/output_sumo_logic_timeout_retry_settings.go
  - internal/provider/types/output_syslog.go
  - internal/provider/types/output_syslog_pq_controls.go
  - internal/provider/types/output_syslog_tls_settings_client_side.go
  - internal/provider/types/output_tcpjson.go
  - internal/provider/types/output_tcpjson_hosts.go
  - internal/provider/types/output_tcpjson_pq_controls.go
  - internal/provider/types/output_tcpjson_tls_settings_client_side.go
  - internal/provider/types/output_wavefront.go
  - internal/provider/types/output_wavefront_extra_http_headers.go
  - internal/provider/types/output_wavefront_pq_controls.go
  - internal/provider/types/output_wavefront_response_retry_settings.go
  - internal/provider/types/output_wavefront_timeout_retry_settings.go
  - internal/provider/types/output_webhook.go
  - internal/provider/types/output_webhook_extra_http_headers.go
  - internal/provider/types/output_webhook_oauth_headers.go
  - internal/provider/types/output_webhook_oauth_params.go
  - internal/provider/types/output_webhook_tls_settings_client_side.go
  - internal/provider/types/output_xsiam.go
  - internal/provider/types/output_xsiam_extra_http_headers.go
  - internal/provider/types/output_xsiam_pq_controls.go
  - internal/provider/types/output_xsiam_response_retry_settings.go
  - internal/provider/types/output_xsiam_timeout_retry_settings.go
  - internal/provider/types/output_xsiam_urls.go
  - internal/provider/types/pack_info.go
  - internal/provider/types/pack_info1.go
  - internal/provider/types/pack_info_tags.go
  - internal/provider/types/persistence.go
  - internal/provider/types/pod_filter.go
  - internal/provider/types/pq.go
  - internal/provider/types/pq_controls.go
  - internal/provider/types/preprocess.go
  - internal/provider/types/prometheus_auth.go
  - internal/provider/types/proxy_mode.go
  - internal/provider/types/resource_type_labels.go
  - internal/provider/types/response_retry_settings.go
  - internal/provider/types/retry_rules.go
  - internal/provider/types/samples.go
  - internal/provider/types/search_filter.go
  - internal/provider/types/services.go
  - internal/provider/types/sets.go
  - internal/provider/types/snm_pv3_authentication.go
  - internal/provider/types/subscriptions.go
  - internal/provider/types/targets.go
  - internal/provider/types/timeout_retry_settings.go
  - internal/provider/types/tls_settings_client_side.go
  - internal/provider/types/tls_settings_server_side.go
  - internal/provider/types/urls.go
  - internal/provider/types/users_and_groups.go
  - internal/provider/types/v3_users.go
  - internal/provider/utils.go
  - internal/sdk/.gitattributes
  - internal/sdk/appscopeconfigs.go
  - internal/sdk/auth.go
  - internal/sdk/authorize.go
  - internal/sdk/banners.go
  - internal/sdk/billing.go
  - internal/sdk/certificates.go
  - internal/sdk/changelog.go
  - internal/sdk/clickhouse.go
  - internal/sdk/clui.go
  - internal/sdk/collectors.go
  - internal/sdk/conditions.go
  - internal/sdk/consent.go
  - internal/sdk/consumption.go
  - internal/sdk/criblterraform.go
  - internal/sdk/criblterraformbilling.go
  - internal/sdk/dashboardcategories.go
  - internal/sdk/dashboards.go
  - internal/sdk/databaseconnections.go
  - internal/sdk/datasets.go
  - internal/sdk/diag.go
  - internal/sdk/distributed.go
  - internal/sdk/docs/models/operations/option.md
  - internal/sdk/edge.go
  - internal/sdk/edgeappscopeprocesses.go
  - internal/sdk/edgecontainers.go
  - internal/sdk/edgeevents.go
  - internal/sdk/edgefiles.go
  - internal/sdk/edgels.go
  - internal/sdk/edgeprocesses.go
  - internal/sdk/eventbreakerrules.go
  - internal/sdk/events.go
  - internal/sdk/executors.go
  - internal/sdk/expressions.go
  - internal/sdk/features.go
  - internal/sdk/file.go
  - internal/sdk/filesampler.go
  - internal/sdk/functions.go
  - internal/sdk/git.go
  - internal/sdk/globalvariables.go
  - internal/sdk/grokfiles.go
  - internal/sdk/groups.go
  - internal/sdk/health.go
  - internal/sdk/hmacfunctions.go
  - internal/sdk/ingest.go
  - internal/sdk/inputs.go
  - internal/sdk/internal/hooks/clientcredentials.go
  - internal/sdk/internal/hooks/hooks.go
  - internal/sdk/internal/utils/contenttype.go
  - internal/sdk/internal/utils/env.go
  - internal/sdk/internal/utils/form.go
  - internal/sdk/internal/utils/headers.go
  - internal/sdk/internal/utils/json.go
  - internal/sdk/internal/utils/pathparams.go
  - internal/sdk/internal/utils/queryparams.go
  - internal/sdk/internal/utils/requestbody.go
  - internal/sdk/internal/utils/retries.go
  - internal/sdk/internal/utils/security.go
  - internal/sdk/internal/utils/utils.go
  - internal/sdk/invoices.go
  - internal/sdk/jobs.go
  - internal/sdk/keys.go
  - internal/sdk/kubelogs.go
  - internal/sdk/kubeproxy.go
  - internal/sdk/lake.go
  - internal/sdk/licenses.go
  - internal/sdk/logger.go
  - internal/sdk/logging.go
  - internal/sdk/lookups.go
  - internal/sdk/macros.go
  - internal/sdk/messages.go
  - internal/sdk/metrics.go
  - internal/sdk/models/errors/apierror.go
  - internal/sdk/models/operations/assignsandboxworkspacetouser.go
  - internal/sdk/models/operations/createaiconsent.go
  - internal/sdk/models/operations/createappscopelibentry.go
  - internal/sdk/models/operations/createauthslocallback.go
  - internal/sdk/models/operations/createauthssocallback.go
  - internal/sdk/models/operations/createbannermessage.go
  - internal/sdk/models/operations/createbulletinmessage.go
  - internal/sdk/models/operations/createcertificate.go
  - internal/sdk/models/operations/createcribllakedatasetbylakeid.go
  - internal/sdk/models/operations/createdashboardcategory.go
  - internal/sdk/models/operations/createdatabaseconnectionconfig.go
  - internal/sdk/models/operations/createdatasample.go
  - internal/sdk/models/operations/createdataset.go
  - internal/sdk/models/operations/createdatasetaclapplybyid.go
  - internal/sdk/models/operations/createdatasetaclteamsapplybyid.go
  - internal/sdk/models/operations/createdatasetprovider.go
  - internal/sdk/models/operations/createdatasetprovidertype.go
  - internal/sdk/models/operations/createedgeappscopeprocesses.go
  - internal/sdk/models/operations/createedgefileingest.go
  - internal/sdk/models/operations/createedgekubelogs.go
  - internal/sdk/models/operations/createeventbreakerruleset.go
  - internal/sdk/models/operations/createglobalvariable.go
  - internal/sdk/models/operations/createglobalvariablelibvarsbypack.go
  - internal/sdk/models/operations/creategrokfile.go
  - internal/sdk/models/operations/createhmacfunction.go
  - internal/sdk/models/operations/createinput.go
  - internal/sdk/models/operations/createinputhectokenbyid.go
  - internal/sdk/models/operations/createjobs.go
  - internal/sdk/models/operations/createkeymetadataentity.go
  - internal/sdk/models/operations/createlibdatabaseconnectionstest.go
  - internal/sdk/models/operations/createlibexpression.go
  - internal/sdk/models/operations/createlibschemas.go
  - internal/sdk/models/operations/createlicense.go
  - internal/sdk/models/operations/createlookupfile.go
  - internal/sdk/models/operations/createnotification.go
  - internal/sdk/models/operations/createnotificationtarget.go
  - internal/sdk/models/operations/createoutput.go
  - internal/sdk/models/operations/createoutputclickhousedescribetable.go
  - internal/sdk/models/operations/createoutputtestbyid.go
  - internal/sdk/models/operations/createpacks.go
  - internal/sdk/models/operations/createpacksclone.go
  - internal/sdk/models/operations/createparser.go
  - internal/sdk/models/operations/createpipeline.go
  - internal/sdk/models/operations/createpipelinebypack.go
  - internal/sdk/models/operations/createpolicyrule.go
  - internal/sdk/models/operations/createpreview.go
  - internal/sdk/models/operations/createproductsedgemapquery.go
  - internal/sdk/models/operations/createproductsgroupsbyproduct.go
  - internal/sdk/models/operations/createprofileritem.go
  - internal/sdk/models/operations/createproject.go
  - internal/sdk/models/operations/createprojectaclapplybyid.go
  - internal/sdk/models/operations/createprojectaclteamsapplybyid.go
  - internal/sdk/models/operations/createregexlibentry.go
  - internal/sdk/models/operations/createrestsecret.go
  - internal/sdk/models/operations/createrole.go
  - internal/sdk/models/operations/createroutesappendbyid.go
  - internal/sdk/models/operations/createroutesappendbypackandid.go
  - internal/sdk/models/operations/createsavedjob.go
  - internal/sdk/models/operations/createsavedquery.go
  - internal/sdk/models/operations/createschema.go
  - internal/sdk/models/operations/createschemalibbypack.go
  - internal/sdk/models/operations/createscript.go
  - internal/sdk/models/operations/createsearchdashboard.go
  - internal/sdk/models/operations/createsearchdashboardaclapplybyid.go
  - internal/sdk/models/operations/createsearchdashboardaclteamsapplybyid.go
  - internal/sdk/models/operations/createsearcheventbreakerpreview.go
  - internal/sdk/models/operations/createsearchjob.go
  - internal/sdk/models/operations/createsearchjobdispatchexecutorsbyid.go
  - internal/sdk/models/operations/createsearchmacro.go
  - internal/sdk/models/operations/createsearchpreview.go
  - internal/sdk/models/operations/createsubscription.go
  - internal/sdk/models/operations/createsystemcapture.go
  - internal/sdk/models/operations/createsystemdiagsend.go
  - internal/sdk/models/operations/createsystemdistributedupgradebygroup.go
  - internal/sdk/models/operations/createsystemdistributedupgradecancelbygroup.go
  - internal/sdk/models/operations/createsystemdistributedupgradestagebygroup.go
  - internal/sdk/models/operations/createsystemmetricsenum.go
  - internal/sdk/models/operations/createsystemmetricsquery.go
  - internal/sdk/models/operations/createsystemprojectscapturebygroupidandprojectid.go
  - internal/sdk/models/operations/createsystemprojectscapturebyprojectid.go
  - internal/sdk/models/operations/createsystemprojectspipelinesbygroupidandprojectid.go
  - internal/sdk/models/operations/createsystemprojectspreviewbygroupidandprojectid.go
  - internal/sdk/models/operations/createsystemprojectssubscriptionscapturebygroupidandsubscriptionid.go
  - internal/sdk/models/operations/createsystemprojectssubscriptionscapturebyprojectidandsubscriptionid.go
  - internal/sdk/models/operations/createsystemprojectsversioncommitbygroupidandprojectid.go
  - internal/sdk/models/operations/createsystemprojectsversioncommitbyprojectid.go
  - internal/sdk/models/operations/createsystemprojectsversionrevertbyprojectid.go
  - internal/sdk/models/operations/createsystemsettingsupgradebyversion.go
  - internal/sdk/models/operations/createsystemsettingsupgradefrompackage.go
  - internal/sdk/models/operations/createteam.go
  - internal/sdk/models/operations/createteamusersbyid.go
  - internal/sdk/models/operations/createusagegroup.go
  - internal/sdk/models/operations/createuser.go
  - internal/sdk/models/operations/createversioncommit.go
  - internal/sdk/models/operations/createversionpush.go
  - internal/sdk/models/operations/createversionrevert.go
  - internal/sdk/models/operations/createversionsync.go
  - internal/sdk/models/operations/deleteappscopelibentrybyid.go
  - internal/sdk/models/operations/deleteauthuserstokenbyid.go
  - internal/sdk/models/operations/deletebannermessagebyid.go
  - internal/sdk/models/operations/deletebulletinmessagebyid.go
  - internal/sdk/models/operations/deletecertificatebyid.go
  - internal/sdk/models/operations/deletecribllakedatasetbylakeidandid.go
  - internal/sdk/models/operations/deletedashboardcategorybyid.go
  - internal/sdk/models/operations/deletedatabaseconnectionconfigbyid.go
  - internal/sdk/models/operations/deletedatasamplebyid.go
  - internal/sdk/models/operations/deletedatasetbyid.go
  - internal/sdk/models/operations/deletedatasetproviderbyid.go
  - internal/sdk/models/operations/deletedatasetprovidertypebyid.go
  - internal/sdk/models/operations/deleteedgeappscopeprocessesbypid.go
  - internal/sdk/models/operations/deleteeventbreakerrulesetbyid.go
  - internal/sdk/models/operations/deleteglobalvariablebyid.go
  - internal/sdk/models/operations/deleteglobalvariablelibvarsbypackandid.go
  - internal/sdk/models/operations/deletegrokfilebyid.go
  - internal/sdk/models/operations/deletehmacfunctionbyid.go
  - internal/sdk/models/operations/deleteinputbyid.go
  - internal/sdk/models/operations/deletejobsbyid.go
  - internal/sdk/models/operations/deletekeymetadataentitybyid.go
  - internal/sdk/models/operations/deletelibschemasbyid.go
  - internal/sdk/models/operations/deletelicensebyid.go
  - internal/sdk/models/operations/deleteloggerconfigbyid.go
  - internal/sdk/models/operations/deletelookupfilebyid.go
  - internal/sdk/models/operations/deletenotificationbyid.go
  - internal/sdk/models/operations/deletenotificationtargetbyid.go
  - internal/sdk/models/operations/deleteoutputbyid.go
  - internal/sdk/models/operations/deleteoutputpqbyid.go
  - internal/sdk/models/operations/deletepacksbyid.go
  - internal/sdk/models/operations/deleteparserbyid.go
  - internal/sdk/models/operations/deletepipelinebyid.go
  - internal/sdk/models/operations/deletepipelinebypackandid.go
  - internal/sdk/models/operations/deletepolicyrulebyid.go
  - internal/sdk/models/operations/deleteproductsuserscachebyproduct.go
  - internal/sdk/models/operations/deleteprofileritembyid.go
  - internal/sdk/models/operations/deleteprojectbyid.go
  - internal/sdk/models/operations/deleteregexlibentrybyid.go
  - internal/sdk/models/operations/deleterestsecretbyid.go
  - internal/sdk/models/operations/deleterolebyid.go
  - internal/sdk/models/operations/deletesavedjobbyid.go
  - internal/sdk/models/operations/deletesavedquerybyid.go
  - internal/sdk/models/operations/deleteschemabyid.go
  - internal/sdk/models/operations/deleteschemalibbypackandid.go
  - internal/sdk/models/operations/deletescriptbyid.go
  - internal/sdk/models/operations/deletesearchdashboardbyid.go
  - internal/sdk/models/operations/deletesearchjobbyid.go
  - internal/sdk/models/operations/deletesearchmacrobyid.go
  - internal/sdk/models/operations/deletesubscriptionbyid.go
  - internal/sdk/models/operations/deletesystemdiag.go
  - internal/sdk/models/operations/deletesystemprojectspipelinesbygroupidandprojectidandpipelineid.go
  - internal/sdk/models/operations/deleteteambyid.go
  - internal/sdk/models/operations/deleteusagegroupbyid.go
  - internal/sdk/models/operations/deleteuserbyid.go
  - internal/sdk/models/operations/getaiconsent.go
  - internal/sdk/models/operations/getappscopelibentrybyid.go
  - internal/sdk/models/operations/getassignments.go
  - internal/sdk/models/operations/getauthauthorizationcodecallback.go
  - internal/sdk/models/operations/getauthgroups.go
  - internal/sdk/models/operations/getauthmetadata.go
  - internal/sdk/models/operations/getauthmultifactor.go
  - internal/sdk/models/operations/getauthorizepolicy.go
  - internal/sdk/models/operations/getauthorizeroles.go
  - internal/sdk/models/operations/getauthslo.go
  - internal/sdk/models/operations/getauthslocallback.go
  - internal/sdk/models/operations/getauthsso.go
  - internal/sdk/models/operations/getauthssocallback.go
  - internal/sdk/models/operations/getbannermessagebyid.go
  - internal/sdk/models/operations/getbulletinmessagebyid.go
  - internal/sdk/models/operations/getcertificatebyid.go
  - internal/sdk/models/operations/getchangelogviewed.go
  - internal/sdk/models/operations/getclui.go
  - internal/sdk/models/operations/getcollectorbyid.go
  - internal/sdk/models/operations/getconditionbyid.go
  - internal/sdk/models/operations/getconfigbundlesbygroupandversion.go
  - internal/sdk/models/operations/getcosts.go
  - internal/sdk/models/operations/getcredits.go
  - internal/sdk/models/operations/getcribllakedatasetbylakeid.go
  - internal/sdk/models/operations/getcribllakedatasetbylakeidandid.go
  - internal/sdk/models/operations/getdashboardcategorybyid.go
  - internal/sdk/models/operations/getdatabaseconnectionconfig.go
  - internal/sdk/models/operations/getdatabaseconnectionconfigbyid.go
  - internal/sdk/models/operations/getdatasamplebyid.go
  - internal/sdk/models/operations/getdatasamplecontentbyid.go
  - internal/sdk/models/operations/getdatasetaclbyid.go
  - internal/sdk/models/operations/getdatasetaclteamsbyid.go
  - internal/sdk/models/operations/getdatasetbyid.go
  - internal/sdk/models/operations/getdatasetproviderbyid.go
  - internal/sdk/models/operations/getdatasetprovidertypebyid.go
  - internal/sdk/models/operations/getdiagbundle.go
  - internal/sdk/models/operations/getedgeappscopeprocesses.go
  - internal/sdk/models/operations/getedgeappscopeprocessesbypid.go
  - internal/sdk/models/operations/getedgecontainers.go
  - internal/sdk/models/operations/getedgecontainersbyid.go
  - internal/sdk/models/operations/getedgeeventscollectors.go
  - internal/sdk/models/operations/getedgeeventsquery.go
  - internal/sdk/models/operations/getedgefileinspect.go
  - internal/sdk/models/operations/getedgefilesample.go
  - internal/sdk/models/operations/getedgekubeproxy.go
  - internal/sdk/models/operations/getedgelogs.go
  - internal/sdk/models/operations/getedgelsbypath.go
  - internal/sdk/models/operations/getedgemetadata.go
  - internal/sdk/models/operations/getedgeprocesses.go
  - internal/sdk/models/operations/getedgeprocessesbypid.go
  - internal/sdk/models/operations/geteventbreakerrulesetbyid.go
  - internal/sdk/models/operations/getexecutorbyid.go
  - internal/sdk/models/operations/getfeaturesentry.go
  - internal/sdk/models/operations/getfeaturesentrybyid.go
  - internal/sdk/models/operations/getfunctionbyid.go
  - internal/sdk/models/operations/getfunctionbypack.go
  - internal/sdk/models/operations/getfunctionbypackandid.go
  - internal/sdk/models/operations/getglobalvariable.go
  - internal/sdk/models/operations/getglobalvariablebyid.go
  - internal/sdk/models/operations/getglobalvariablelibvarsbypack.go
  - internal/sdk/models/operations/getglobalvariablelibvarsbypackandid.go
  - internal/sdk/models/operations/getgrokfilebyid.go
  - internal/sdk/models/operations/getgroupsaclbyid.go
  - internal/sdk/models/operations/getgroupsbyid.go
  - internal/sdk/models/operations/getgroupsconfigversionbyid.go
  - internal/sdk/models/operations/gethealthinfo.go
  - internal/sdk/models/operations/gethmacfunctionbyid.go
  - internal/sdk/models/operations/getinputbyid.go
  - internal/sdk/models/operations/getinputstatusbyid.go
  - internal/sdk/models/operations/getinvoice.go
  - internal/sdk/models/operations/getinvoices.go
  - internal/sdk/models/operations/getjobresultsbyid.go
  - internal/sdk/models/operations/getjobs.go
  - internal/sdk/models/operations/getjobsbyid.go
  - internal/sdk/models/operations/getjobserrorsbyid.go
  - internal/sdk/models/operations/getjobserrorsbyidandgroup.go
  - internal/sdk/models/operations/getjobsresultsbyidandgroup.go
  - internal/sdk/models/operations/getkeymetadataentitybyid.go
  - internal/sdk/models/operations/getlibschemasbyid.go
  - internal/sdk/models/operations/getlicense.go
  - internal/sdk/models/operations/getlicensebyid.go
  - internal/sdk/models/operations/getloggerconfigbyid.go
  - internal/sdk/models/operations/getlookupfilebyid.go
  - internal/sdk/models/operations/getnotificationbyid.go
  - internal/sdk/models/operations/getnotificationtargetbyid.go
  - internal/sdk/models/operations/getoutputbyid.go
  - internal/sdk/models/operations/getoutputpqbyid.go
  - internal/sdk/models/operations/getoutputsamplesbyid.go
  - internal/sdk/models/operations/getoutputstatusbyid.go
  - internal/sdk/models/operations/getpacks.go
  - internal/sdk/models/operations/getpacksexportbyid.go
  - internal/sdk/models/operations/getparserbyid.go
  - internal/sdk/models/operations/getpipelinebyid.go
  - internal/sdk/models/operations/getpipelinebypack.go
  - internal/sdk/models/operations/getpipelinebypackandid.go
  - internal/sdk/models/operations/getplan.go
  - internal/sdk/models/operations/getpolicyrulebyid.go
  - internal/sdk/models/operations/getproductsgroupsaclteamsbyproductandid.go
  - internal/sdk/models/operations/getproductsgroupsbyproduct.go
  - internal/sdk/models/operations/getproductsusersaclbyproductandid.go
  - internal/sdk/models/operations/getproductsusersbyproduct.go
  - internal/sdk/models/operations/getprofileritembyid.go
  - internal/sdk/models/operations/getprojectaclbyid.go
  - internal/sdk/models/operations/getprojectaclteamsbyid.go
  - internal/sdk/models/operations/getprojectbyid.go
  - internal/sdk/models/operations/getprojectdestinationsbyprojectid.go
  - internal/sdk/models/operations/getprotobuflibraryconfig.go
  - internal/sdk/models/operations/getprotobuflibraryconfigbyid.go
  - internal/sdk/models/operations/getprotobuflibraryconfigencodingsbyid.go
  - internal/sdk/models/operations/getprotobuflibraryconfigencodingsbyidandencid.go
  - internal/sdk/models/operations/getregexlibentrybyid.go
  - internal/sdk/models/operations/getrestsecretbyid.go
  - internal/sdk/models/operations/getrolebyid.go
  - internal/sdk/models/operations/getroutesbyid.go
  - internal/sdk/models/operations/getroutesbypack.go
  - internal/sdk/models/operations/getroutesbypackandid.go
  - internal/sdk/models/operations/getsavedjobbyid.go
  - internal/sdk/models/operations/getsavedquerybyid.go
  - internal/sdk/models/operations/getschemabyid.go
  - internal/sdk/models/operations/getschemalibbypack.go
  - internal/sdk/models/operations/getschemalibbypackandid.go
  - internal/sdk/models/operations/getscriptbyid.go
  - internal/sdk/models/operations/getsearchdashboardaclbyid.go
  - internal/sdk/models/operations/getsearchdashboardaclteamsbyid.go
  - internal/sdk/models/operations/getsearchdashboardbyid.go
  - internal/sdk/models/operations/getsearchhealthcheck.go
  - internal/sdk/models/operations/getsearchjobbyid.go
  - internal/sdk/models/operations/getsearchjoblogsbyid.go
  - internal/sdk/models/operations/getsearchjobmetrics.go
  - internal/sdk/models/operations/getsearchjobsmetricsbyid.go
  - internal/sdk/models/operations/getsearchjobsresultspollbyid.go
  - internal/sdk/models/operations/getsearchjobsstagesresultsbyidandstageid.go
  - internal/sdk/models/operations/getsearchmacrobyid.go
  - internal/sdk/models/operations/getsecuritykmsconfig.go
  - internal/sdk/models/operations/getsecuritykmshealth.go
  - internal/sdk/models/operations/getsubscriptionbyid.go
  - internal/sdk/models/operations/getsubscriptionbyprojectid.go
  - internal/sdk/models/operations/getsummary.go
  - internal/sdk/models/operations/getsummaryworkers.go
  - internal/sdk/models/operations/getsystemdiag.go
  - internal/sdk/models/operations/getsystemdistributedupgradedownloadbyfile.go
  - internal/sdk/models/operations/getsysteminfo.go
  - internal/sdk/models/operations/getsystemjobslogsbyidandgroupid.go
  - internal/sdk/models/operations/getsystemlogs.go
  - internal/sdk/models/operations/getsystemlogsbyid.go
  - internal/sdk/models/operations/getsystemlogssearch.go
  - internal/sdk/models/operations/getsystemmetrics.go
  - internal/sdk/models/operations/getsystemprocesses.go
  - internal/sdk/models/operations/getsystemprojectspipelinesbygroupidandprojectid.go
  - internal/sdk/models/operations/getsystemprojectspipelinesbygroupidandprojectidandpipelineid.go
  - internal/sdk/models/operations/getsystemprojectssubscriptionsbygroupidbyandprojectid.go
  - internal/sdk/models/operations/getsystemprojectsversioncountbygroupidandprojectid.go
  - internal/sdk/models/operations/getsystemprojectsversioncountbyprojectid.go
  - internal/sdk/models/operations/getsystemprojectsversiondiffbygroupidandprojectid.go
  - internal/sdk/models/operations/getsystemprojectsversiondiffbyprojectid.go
  - internal/sdk/models/operations/getsystemprojectsversionfilesbygroupidandprojectid.go
  - internal/sdk/models/operations/getsystemprojectsversionfilesbyprojectid.go
  - internal/sdk/models/operations/getsystemprojectsversionshowbyprojectid.go
  - internal/sdk/models/operations/getsystemsettings.go
  - internal/sdk/models/operations/getsystemsettingsauth.go
  - internal/sdk/models/operations/getsystemsettingsconf.go
  - internal/sdk/models/operations/getsystemsettingscribl.go
  - internal/sdk/models/operations/getsystemsettingsgitsettings.go
  - internal/sdk/models/operations/getsystemsettingssearchlimits.go
  - internal/sdk/models/operations/getsystemsettingsupgrade.go
  - internal/sdk/models/operations/getteam.go
  - internal/sdk/models/operations/getteamaclbyid.go
  - internal/sdk/models/operations/getteambyid.go
  - internal/sdk/models/operations/getteamrolesbyid.go
  - internal/sdk/models/operations/getteamusersbyid.go
  - internal/sdk/models/operations/getuibykey.go
  - internal/sdk/models/operations/getusage.go
  - internal/sdk/models/operations/getusagegroupbyid.go
  - internal/sdk/models/operations/getuserbyid.go
  - internal/sdk/models/operations/getversionbranch.go
  - internal/sdk/models/operations/getversioncount.go
  - internal/sdk/models/operations/getversioncurrentbranch.go
  - internal/sdk/models/operations/getversiondiff.go
  - internal/sdk/models/operations/getversionfiles.go
  - internal/sdk/models/operations/getversioninfo.go
  - internal/sdk/models/operations/getversionshow.go
  - internal/sdk/models/operations/getversionstatus.go
  - internal/sdk/models/operations/getworkers.go
  - internal/sdk/models/operations/listappscopelibentry.go
  - internal/sdk/models/operations/listbannermessage.go
  - internal/sdk/models/operations/listbulletinmessage.go
  - internal/sdk/models/operations/listcertificate.go
  - internal/sdk/models/operations/listcollector.go
  - internal/sdk/models/operations/listcondition.go
  - internal/sdk/models/operations/listdashboardcategory.go
  - internal/sdk/models/operations/listdatasample.go
  - internal/sdk/models/operations/listdataset.go
  - internal/sdk/models/operations/listdatasetprovider.go
  - internal/sdk/models/operations/listdatasetprovidertype.go
  - internal/sdk/models/operations/listeventbreakerruleset.go
  - internal/sdk/models/operations/listexecutor.go
  - internal/sdk/models/operations/listfunction.go
  - internal/sdk/models/operations/listgrokfile.go
  - internal/sdk/models/operations/listhmacfunction.go
  - internal/sdk/models/operations/listinput.go
  - internal/sdk/models/operations/listinputstatus.go
  - internal/sdk/models/operations/listkeymetadataentity.go
  - internal/sdk/models/operations/listlibschemas.go
  - internal/sdk/models/operations/listlicense.go
  - internal/sdk/models/operations/listloggerconfig.go
  - internal/sdk/models/operations/listlookupfile.go
  - internal/sdk/models/operations/listnotification.go
  - internal/sdk/models/operations/listnotificationtarget.go
  - internal/sdk/models/operations/listoutput.go
  - internal/sdk/models/operations/listoutputstatus.go
  - internal/sdk/models/operations/listparser.go
  - internal/sdk/models/operations/listpipeline.go
  - internal/sdk/models/operations/listpolicyrule.go
  - internal/sdk/models/operations/listprofileritem.go
  - internal/sdk/models/operations/listproject.go
  - internal/sdk/models/operations/listregexlibentry.go
  - internal/sdk/models/operations/listrestsecret.go
  - internal/sdk/models/operations/listrole.go
  - internal/sdk/models/operations/listroutes.go
  - internal/sdk/models/operations/listsavedjob.go
  - internal/sdk/models/operations/listsavedquery.go
  - internal/sdk/models/operations/listschema.go
  - internal/sdk/models/operations/listscript.go
  - internal/sdk/models/operations/listsearchdashboard.go
  - internal/sdk/models/operations/listsearchjob.go
  - internal/sdk/models/operations/listsearchmacro.go
  - internal/sdk/models/operations/listsubscription.go
  - internal/sdk/models/operations/listtrustpolicy.go
  - internal/sdk/models/operations/listusagegroup.go
  - internal/sdk/models/operations/listuser.go
  - internal/sdk/models/operations/login.go
  - internal/sdk/models/operations/logout.go
  - internal/sdk/models/operations/options.go
  - internal/sdk/models/operations/reloadsettings.go
  - internal/sdk/models/operations/triggerrestart.go
  - internal/sdk/models/operations/undolastcommit.go
  - internal/sdk/models/operations/updateappscopelibentrybyid.go
  - internal/sdk/models/operations/updatebannermessagebyid.go
  - internal/sdk/models/operations/updatecertificatebyid.go
  - internal/sdk/models/operations/updatechangelogviewed.go
  - internal/sdk/models/operations/updatecribllakedatasetbylakeidandid.go
  - internal/sdk/models/operations/updatedashboardcategorybyid.go
  - internal/sdk/models/operations/updatedatabaseconnectionconfigbyid.go
  - internal/sdk/models/operations/updatedatasamplebyid.go
  - internal/sdk/models/operations/updatedatasetbyid.go
  - internal/sdk/models/operations/updatedatasetproviderbyid.go
  - internal/sdk/models/operations/updatedatasetprovidertypebyid.go
  - internal/sdk/models/operations/updateedgeappscopeprocessesbypid.go
  - internal/sdk/models/operations/updateeventbreakerrulesetbyid.go
  - internal/sdk/models/operations/updateglobalvariablebyid.go
  - internal/sdk/models/operations/updateglobalvariablelibvarsbypackandid.go
  - internal/sdk/models/operations/updategrokfilebyid.go
  - internal/sdk/models/operations/updategroupsdeploybyid.go
  - internal/sdk/models/operations/updatehmacfunctionbyid.go
  - internal/sdk/models/operations/updateinputbyid.go
  - internal/sdk/models/operations/updateinputhectokenbyidandtoken.go
  - internal/sdk/models/operations/updatejobscancelbyid.go
  - internal/sdk/models/operations/updatejobskeepbyid.go
  - internal/sdk/models/operations/updatejobspausebyid.go
  - internal/sdk/models/operations/updatejobsresumebyid.go
  - internal/sdk/models/operations/updatekeymetadataentitybyid.go
  - internal/sdk/models/operations/updatelibschemasbyid.go
  - internal/sdk/models/operations/updateloggerconfigbyid.go
  - internal/sdk/models/operations/updatelookupfile.go
  - internal/sdk/models/operations/updatelookupfilebyid.go
  - internal/sdk/models/operations/updatenotificationbyid.go
  - internal/sdk/models/operations/updatenotificationtargetbyid.go
  - internal/sdk/models/operations/updateoutputbyid.go
  - internal/sdk/models/operations/updatepacks.go
  - internal/sdk/models/operations/updatepacksbyid.go
  - internal/sdk/models/operations/updateparserbyid.go
  - internal/sdk/models/operations/updatepipelinebyid.go
  - internal/sdk/models/operations/updatepipelinebypackandid.go
  - internal/sdk/models/operations/updatepolicyrulebyid.go
  - internal/sdk/models/operations/updateprofileritembyid.go
  - internal/sdk/models/operations/updateprojectbyid.go
  - internal/sdk/models/operations/updateregexlibentrybyid.go
  - internal/sdk/models/operations/updaterestsecretbyid.go
  - internal/sdk/models/operations/updaterolebyid.go
  - internal/sdk/models/operations/updateroutesbyid.go
  - internal/sdk/models/operations/updateroutesbypackandid.go
  - internal/sdk/models/operations/updatesavedjobbyid.go
  - internal/sdk/models/operations/updatesavedquerybyid.go
  - internal/sdk/models/operations/updateschemabyid.go
  - internal/sdk/models/operations/updateschemalibbypackandid.go
  - internal/sdk/models/operations/updatescriptbyid.go
  - internal/sdk/models/operations/updatesearchdashboardbyid.go
  - internal/sdk/models/operations/updatesearchjobbyid.go
  - internal/sdk/models/operations/updatesearchmacrobyid.go
  - internal/sdk/models/operations/updatesecuritykmsconfig.go
  - internal/sdk/models/operations/updatesubscriptionbyid.go
  - internal/sdk/models/operations/updatesystemprojectspipelinesbygroupidandprojectidandpipelineid.go
  - internal/sdk/models/operations/updatesystemsettings.go
  - internal/sdk/models/operations/updatesystemsettingsauth.go
  - internal/sdk/models/operations/updatesystemsettingsconf.go
  - internal/sdk/models/operations/updatesystemsettingsgitsettings.go
  - internal/sdk/models/operations/updateteambyid.go
  - internal/sdk/models/operations/updateuibykey.go
  - internal/sdk/models/operations/updateusagegroupbyid.go
  - internal/sdk/models/operations/updateuserbyid.go
  - internal/sdk/models/operations/updateuserinfobyid.go
  - internal/sdk/models/operations/updateworkersrestart.go
  - internal/sdk/models/operations/v5billingconsumptiongetcreditssummary.go
  - internal/sdk/models/operations/v5billingconsumptiongetcumulativeconsumption.go
  - internal/sdk/models/operations/v5billingconsumptiongetproductsbreakdown.go
  - internal/sdk/models/operations/v5billingconsumptiongetproductsconsumptionstats.go
  - internal/sdk/models/operations/v5billingconsumptiongetsingleproductusagebreakdown.go
  - internal/sdk/models/operations/v5billinginvoicesgetinvoice.go
  - internal/sdk/models/operations/v5billinginvoicesgetinvoices.go
  - internal/sdk/models/operations/workspacescontrollercreateworkspace.go
  - internal/sdk/models/operations/workspacescontrollerdeleteworkspace.go
  - internal/sdk/models/operations/workspacescontrollergetworkspace.go
  - internal/sdk/models/operations/workspacescontrollerlistworkspaces.go
  - internal/sdk/models/operations/workspacescontrollerpatchworkspace.go
  - internal/sdk/models/shared/accesscontrol.go
  - internal/sdk/models/shared/accesscontrolschema.go
  - internal/sdk/models/shared/addhectokenrequest.go
  - internal/sdk/models/shared/aggregationmgroptions.go
  - internal/sdk/models/shared/amtrustpolicy.go
  - internal/sdk/models/shared/appmode.go
  - internal/sdk/models/shared/appscopeconfig.go
  - internal/sdk/models/shared/appscopeconfigwithcustom.go
  - internal/sdk/models/shared/appscopecustom.go
  - internal/sdk/models/shared/appscopelibentry.go
  - internal/sdk/models/shared/appscopeprocess.go
  - internal/sdk/models/shared/appscopeprocessingstatus.go
  - internal/sdk/models/shared/appscopeprocessstatus.go
  - internal/sdk/models/shared/appscopetransport.go
  - internal/sdk/models/shared/assignedsandboxassignmentdto.go
  - internal/sdk/models/shared/authconfig.go
  - internal/sdk/models/shared/authpolicyentry.go
  - internal/sdk/models/shared/authprovider.go
  - internal/sdk/models/shared/authtoken.go
  - internal/sdk/models/shared/awskmsserviceconfig.go
  - internal/sdk/models/shared/awsmetadata.go
  - internal/sdk/models/shared/bannermessage.go
  - internal/sdk/models/shared/breakdown.go
  - internal/sdk/models/shared/bulletinmessage.go
  - internal/sdk/models/shared/cacheconnection.go
  - internal/sdk/models/shared/captureparams.go
  - internal/sdk/models/shared/certificate.go
  - internal/sdk/models/shared/changelogstate.go
  - internal/sdk/models/shared/chargegroupkeyv5.go
  - internal/sdk/models/shared/chargegroupv5.go
  - internal/sdk/models/shared/chartconfig.go
  - internal/sdk/models/shared/chartdata.go
  - internal/sdk/models/shared/chartseries.go
  - internal/sdk/models/shared/charttype.go
  - internal/sdk/models/shared/choutconfig.go
  - internal/sdk/models/shared/clickhousedescriptioncolumn.go
  - internal/sdk/models/shared/clickhousedescriptionresult.go
  - internal/sdk/models/shared/cloudprovider.go
  - internal/sdk/models/shared/cluiitem.go
  - internal/sdk/models/shared/cluitype.go
  - internal/sdk/models/shared/collector.go
  - internal/sdk/models/shared/columnfiltersettings.go
  - internal/sdk/models/shared/columnformatsettings.go
  - internal/sdk/models/shared/columnordersettings.go
  - internal/sdk/models/shared/columnsortsettings.go
  - internal/sdk/models/shared/commit.go
  - internal/sdk/models/shared/commonservicelimitconfigs.go
  - internal/sdk/models/shared/condition.go
  - internal/sdk/models/shared/configgroup.go
  - internal/sdk/models/shared/configgroupcloud.go
  - internal/sdk/models/shared/connection.go
  - internal/sdk/models/shared/consumptionwindowv5.go
  - internal/sdk/models/shared/container.go
  - internal/sdk/models/shared/containerdcontainer.go
  - internal/sdk/models/shared/containerdinfo.go
  - internal/sdk/models/shared/containerdmount.go
  - internal/sdk/models/shared/containerdroot.go
  - internal/sdk/models/shared/containerdtask.go
  - internal/sdk/models/shared/containerport.go
  - internal/sdk/models/shared/costsdata.go
  - internal/sdk/models/shared/cputimemetric.go
  - internal/sdk/models/shared/createworkspacedto.go
  - internal/sdk/models/shared/creditsconsumptionitemv5.go
  - internal/sdk/models/shared/creditssummaryv5.go
  - internal/sdk/models/shared/criblevent.go
  - internal/sdk/models/shared/cribllakedataset.go
  - internal/sdk/models/shared/cribllib.go
  - internal/sdk/models/shared/criblmetadata.go
  - internal/sdk/models/shared/crudentitybase.go
  - internal/sdk/models/shared/dailyusagemetrics.go
  - internal/sdk/models/shared/dashboardcategory.go
  - internal/sdk/models/shared/dashboardelementtype.go
  - internal/sdk/models/shared/dashboardelementvariant.go
  - internal/sdk/models/shared/dashboardlayout.go
  - internal/sdk/models/shared/databaseconnectionconfig.go
  - internal/sdk/models/shared/databaseconnectiontest.go
  - internal/sdk/models/shared/databaseconnectiontestresult.go
  - internal/sdk/models/shared/databaseconnectiontype.go
  - internal/sdk/models/shared/datapoint.go
  - internal/sdk/models/shared/datasample.go
  - internal/sdk/models/shared/datasetmetadata.go
  - internal/sdk/models/shared/datasetmetadataruninfo.go
  - internal/sdk/models/shared/datasetorigin.go
  - internal/sdk/models/shared/datasetprovidertype.go
  - internal/sdk/models/shared/datatypeoverrides.go
  - internal/sdk/models/shared/datatypepreviewinput.go
  - internal/sdk/models/shared/datatypepreviewrequestbody.go
  - internal/sdk/models/shared/deployrequest.go
  - internal/sdk/models/shared/diag.go
  - internal/sdk/models/shared/distributedsummary.go
  - internal/sdk/models/shared/distributedupgraderequest.go
  - internal/sdk/models/shared/dockergraphdriver.go
  - internal/sdk/models/shared/dockergraphdriverdata.go
  - internal/sdk/models/shared/dockerinfo.go
  - internal/sdk/models/shared/dockermount.go
  - internal/sdk/models/shared/edgefile.go
  - internal/sdk/models/shared/edgefileinspectresponse.go
  - internal/sdk/models/shared/edgeheartbeatmetricsmode.go
  - internal/sdk/models/shared/edgemapqueryresult.go
  - internal/sdk/models/shared/envmetadata.go
  - internal/sdk/models/shared/error.go
  - internal/sdk/models/shared/eventbreakerrule.go
  - internal/sdk/models/shared/eventbreakerrulefields.go
  - internal/sdk/models/shared/eventbreakerruleset.go
  - internal/sdk/models/shared/executor.go
  - internal/sdk/models/shared/expression.go
  - internal/sdk/models/shared/exprlibentry.go
  - internal/sdk/models/shared/featuresentry.go
  - internal/sdk/models/shared/fileprocessinfo.go
  - internal/sdk/models/shared/filesystementry.go
  - internal/sdk/models/shared/format.go
  - internal/sdk/models/shared/function.go
  - internal/sdk/models/shared/getactiveplandto.go
  - internal/sdk/models/shared/getcostsdto.go
  - internal/sdk/models/shared/getcreditsdto.go
  - internal/sdk/models/shared/getcreditssummaryresponsev5.go
  - internal/sdk/models/shared/getcumulativeconsumptionresponsev5.go
  - internal/sdk/models/shared/getinvoiceresponsev5.go
  - internal/sdk/models/shared/getinvoicesdto.go
  - internal/sdk/models/shared/getinvoicesresponsev5.go
  - internal/sdk/models/shared/getproductsbreakdownresponsev5.go
  - internal/sdk/models/shared/getproductsconsumptionstatsv5.go
  - internal/sdk/models/shared/getsingleinvoicedto.go
  - internal/sdk/models/shared/getsingleproductusagebreakdownresponsev5.go
  - internal/sdk/models/shared/getusagedto.go
  - internal/sdk/models/shared/gitcommitparams.go
  - internal/sdk/models/shared/gitcommitsummary.go
  - internal/sdk/models/shared/gitfile.go
  - internal/sdk/models/shared/gitfilesresponse.go
  - internal/sdk/models/shared/gitinfo.go
  - internal/sdk/models/shared/gitopstype.go
  - internal/sdk/models/shared/gitrevertparams.go
  - internal/sdk/models/shared/gitrevertresult.go
  - internal/sdk/models/shared/gitsettings.go
  - internal/sdk/models/shared/gitstatusresult.go
  - internal/sdk/models/shared/globalvar.go
  - internal/sdk/models/shared/grokfile.go
  - internal/sdk/models/shared/hbcriblinfo.go
  - internal/sdk/models/shared/hbleaderinfo.go
  - internal/sdk/models/shared/healthstatus.go
  - internal/sdk/models/shared/heartbeatmetadata.go
  - internal/sdk/models/shared/hmacfunction.go
  - internal/sdk/models/shared/httpoutauthconfig.go
  - internal/sdk/models/shared/httpoutextraparamconfig.go
  - internal/sdk/models/shared/httpoutresponseretryconfig.go
  - internal/sdk/models/shared/input.go
  - internal/sdk/models/shared/inputappscope.go
  - internal/sdk/models/shared/inputazureblob.go
  - internal/sdk/models/shared/inputcollection.go
  - internal/sdk/models/shared/inputconfluentcloud.go
  - internal/sdk/models/shared/inputcribl.go
  - internal/sdk/models/shared/inputcriblhttp.go
  - internal/sdk/models/shared/inputcriblmetrics.go
  - internal/sdk/models/shared/inputcribltcp.go
  - internal/sdk/models/shared/inputcrowdstrike.go
  - internal/sdk/models/shared/inputdatadogagent.go
  - internal/sdk/models/shared/inputdatagen.go
  - internal/sdk/models/shared/inputedgeprometheus.go
  - internal/sdk/models/shared/inputelastic.go
  - internal/sdk/models/shared/inputeventhub.go
  - internal/sdk/models/shared/inputexec.go
  - internal/sdk/models/shared/inputfile.go
  - internal/sdk/models/shared/inputfirehose.go
  - internal/sdk/models/shared/inputgooglepubsub.go
  - internal/sdk/models/shared/inputgrafana.go
  - internal/sdk/models/shared/inputhttp.go
  - internal/sdk/models/shared/inputhttpraw.go
  - internal/sdk/models/shared/inputjournalfiles.go
  - internal/sdk/models/shared/inputkafka.go
  - internal/sdk/models/shared/inputkinesis.go
  - internal/sdk/models/shared/inputkubeevents.go
  - internal/sdk/models/shared/inputkubelogs.go
  - internal/sdk/models/shared/inputkubemetrics.go
  - internal/sdk/models/shared/inputloki.go
  - internal/sdk/models/shared/inputmetrics.go
  - internal/sdk/models/shared/inputmodeldriventelemetry.go
  - internal/sdk/models/shared/inputmsk.go
  - internal/sdk/models/shared/inputnetflow.go
  - internal/sdk/models/shared/inputoffice365mgmt.go
  - internal/sdk/models/shared/inputoffice365msgtrace.go
  - internal/sdk/models/shared/inputoffice365service.go
  - internal/sdk/models/shared/inputopentelemetry.go
  - internal/sdk/models/shared/inputprometheus.go
  - internal/sdk/models/shared/inputprometheusrw.go
  - internal/sdk/models/shared/inputrawudp.go
  - internal/sdk/models/shared/inputs3.go
  - internal/sdk/models/shared/inputs3inventory.go
  - internal/sdk/models/shared/inputsecuritylake.go
  - internal/sdk/models/shared/inputsnmp.go
  - internal/sdk/models/shared/inputsplunk.go
  - internal/sdk/models/shared/inputsplunkhec.go
  - internal/sdk/models/shared/inputsplunksearch.go
  - internal/sdk/models/shared/inputsqs.go
  - internal/sdk/models/shared/inputstatus.go
  - internal/sdk/models/shared/inputsyslog.go
  - internal/sdk/models/shared/inputsystemmetrics.go
  - internal/sdk/models/shared/inputsystemstate.go
  - internal/sdk/models/shared/inputtcp.go
  - internal/sdk/models/shared/inputtcpjson.go
  - internal/sdk/models/shared/inputwef.go
  - internal/sdk/models/shared/inputwindowsmetrics.go
  - internal/sdk/models/shared/inputwineventlogs.go
  - internal/sdk/models/shared/inputwiz.go
  - internal/sdk/models/shared/inputzscalerhec.go
  - internal/sdk/models/shared/invoice.go
  - internal/sdk/models/shared/invoicegroupedlineitem.go
  - internal/sdk/models/shared/invoicelineitem.go
  - internal/sdk/models/shared/invoiceproduct.go
  - internal/sdk/models/shared/invoiceproductv5.go
  - internal/sdk/models/shared/invoicev5.go
  - internal/sdk/models/shared/jobexecutionwarning.go
  - internal/sdk/models/shared/jobinfo.go
  - internal/sdk/models/shared/jobsettings.go
  - internal/sdk/models/shared/jobstate.go
  - internal/sdk/models/shared/jobstatus.go
  - internal/sdk/models/shared/keymetadataentity.go
  - internal/sdk/models/shared/kmshealth.go
  - internal/sdk/models/shared/kmshealthstatus.go
  - internal/sdk/models/shared/kmshealthtest.go
  - internal/sdk/models/shared/kmsproviderconfig.go
  - internal/sdk/models/shared/kubemetadata.go
  - internal/sdk/models/shared/lakedatasetsearchconfig.go
  - internal/sdk/models/shared/license.go
  - internal/sdk/models/shared/licenseinfo.go
  - internal/sdk/models/shared/licenselimits.go
  - internal/sdk/models/shared/licenserequest.go
  - internal/sdk/models/shared/limits.go
  - internal/sdk/models/shared/lineitemv5.go
  - internal/sdk/models/shared/logfileinfo.go
  - internal/sdk/models/shared/loggerconfig.go
  - internal/sdk/models/shared/loggerentry.go
  - internal/sdk/models/shared/logininfo.go
  - internal/sdk/models/shared/lookupfile.go
  - internal/sdk/models/shared/lookupfileinforesponse.go
  - internal/sdk/models/shared/lookupversions.go
  - internal/sdk/models/shared/mappingtype.go
  - internal/sdk/models/shared/marketplacetype.go
  - internal/sdk/models/shared/masterworkerentry.go
  - internal/sdk/models/shared/membershipschema.go
  - internal/sdk/models/shared/metadata.go
  - internal/sdk/models/shared/metricnameinfo.go
  - internal/sdk/models/shared/metricsaggopts.go
  - internal/sdk/models/shared/metricsstore.go
  - internal/sdk/models/shared/metrictype.go
  - internal/sdk/models/shared/multifactorauthschema.go
  - internal/sdk/models/shared/namevalue.go
  - internal/sdk/models/shared/networkinterfaces.go
  - internal/sdk/models/shared/nodeactiveupgradestatus.go
  - internal/sdk/models/shared/nodefailedupgradestatus.go
  - internal/sdk/models/shared/nodeprovidedinfo.go
  - internal/sdk/models/shared/nodeskippedupgradestatus.go
  - internal/sdk/models/shared/nodeupgradestate.go
  - internal/sdk/models/shared/nodeupgradestatus.go
  - internal/sdk/models/shared/notification.go
  - internal/sdk/models/shared/notificationtarget.go
  - internal/sdk/models/shared/originconfig.go
  - internal/sdk/models/shared/osmetadata.go
  - internal/sdk/models/shared/output.go
  - internal/sdk/models/shared/outputazureblob.go
  - internal/sdk/models/shared/outputazuredataexplorer.go
  - internal/sdk/models/shared/outputazureeventhub.go
  - internal/sdk/models/shared/outputazurelogs.go
  - internal/sdk/models/shared/outputclickhouse.go
  - internal/sdk/models/shared/outputcloudwatch.go
  - internal/sdk/models/shared/outputconfluentcloud.go
  - internal/sdk/models/shared/outputcriblhttp.go
  - internal/sdk/models/shared/outputcribllake.go
  - internal/sdk/models/shared/outputcribltcp.go
  - internal/sdk/models/shared/outputcrowdstrikenextgensiem.go
  - internal/sdk/models/shared/outputdatadog.go
  - internal/sdk/models/shared/outputdataset.go
  - internal/sdk/models/shared/outputdefault.go
  - internal/sdk/models/shared/outputdevnull.go
  - internal/sdk/models/shared/outputdiskspool.go
  - internal/sdk/models/shared/outputdls3.go
  - internal/sdk/models/shared/outputdynatracehttp.go
  - internal/sdk/models/shared/outputdynatraceotlp.go
  - internal/sdk/models/shared/outputelastic.go
  - internal/sdk/models/shared/outputelasticcloud.go
  - internal/sdk/models/shared/outputexabeam.go
  - internal/sdk/models/shared/outputfilesystem.go
  - internal/sdk/models/shared/outputgooglechronicle.go
  - internal/sdk/models/shared/outputgooglecloudlogging.go
  - internal/sdk/models/shared/outputgooglecloudstorage.go
  - internal/sdk/models/shared/outputgooglepubsub.go
  - internal/sdk/models/shared/outputgrafanacloud.go
  - internal/sdk/models/shared/outputgraphite.go
  - internal/sdk/models/shared/outputhoneycomb.go
  - internal/sdk/models/shared/outputhumiohec.go
  - internal/sdk/models/shared/outputinfluxdb.go
  - internal/sdk/models/shared/outputkafka.go
  - internal/sdk/models/shared/outputkinesis.go
  - internal/sdk/models/shared/outputloki.go
  - internal/sdk/models/shared/outputminio.go
  - internal/sdk/models/shared/outputmsk.go
  - internal/sdk/models/shared/outputnetflow.go
  - internal/sdk/models/shared/outputnewrelic.go
  - internal/sdk/models/shared/outputnewrelicevents.go
  - internal/sdk/models/shared/outputopentelemetry.go
  - internal/sdk/models/shared/outputprometheus.go
  - internal/sdk/models/shared/outputring.go
  - internal/sdk/models/shared/outputrouter.go
  - internal/sdk/models/shared/outputs3.go
  - internal/sdk/models/shared/outputsamplesresponse.go
  - internal/sdk/models/shared/outputsecuritylake.go
  - internal/sdk/models/shared/outputsentinel.go
  - internal/sdk/models/shared/outputservicenow.go
  - internal/sdk/models/shared/outputsignalfx.go
  - internal/sdk/models/shared/outputsnmp.go
  - internal/sdk/models/shared/outputsns.go
  - internal/sdk/models/shared/outputsplunk.go
  - internal/sdk/models/shared/outputsplunkhec.go
  - internal/sdk/models/shared/outputsplunklb.go
  - internal/sdk/models/shared/outputsqs.go
  - internal/sdk/models/shared/outputstatsd.go
  - internal/sdk/models/shared/outputstatsdext.go
  - internal/sdk/models/shared/outputstatus.go
  - internal/sdk/models/shared/outputsumologic.go
  - internal/sdk/models/shared/outputsyslog.go
  - internal/sdk/models/shared/outputtcpjson.go
  - internal/sdk/models/shared/outputtestrequest.go
  - internal/sdk/models/shared/outputtestresponse.go
  - internal/sdk/models/shared/outputwavefront.go
  - internal/sdk/models/shared/outputwebhook.go
  - internal/sdk/models/shared/outputxsiam.go
  - internal/sdk/models/shared/packclone.go
  - internal/sdk/models/shared/packinfo.go
  - internal/sdk/models/shared/packinstallinfo.go
  - internal/sdk/models/shared/parserlibentry.go
  - internal/sdk/models/shared/parsermode.go
  - internal/sdk/models/shared/patchworkspacedto.go
  - internal/sdk/models/shared/pipeline.go
  - internal/sdk/models/shared/pipelinefunctionconf.go
  - internal/sdk/models/shared/policyrule.go
  - internal/sdk/models/shared/previewdataparams.go
  - internal/sdk/models/shared/previewoptions.go
  - internal/sdk/models/shared/previewrequestbody.go
  - internal/sdk/models/shared/previewresponsebody.go
  - internal/sdk/models/shared/process.go
  - internal/sdk/models/shared/processentry.go
  - internal/sdk/models/shared/productcosts.go
  - internal/sdk/models/shared/productcreditsconsumptionitemv5.go
  - internal/sdk/models/shared/productsbreakdownitemv5.go
  - internal/sdk/models/shared/productslugv5.go
  - internal/sdk/models/shared/productunitstatsv5.go
  - internal/sdk/models/shared/profileritem.go
  - internal/sdk/models/shared/projectconfig.go
  - internal/sdk/models/shared/projectdestination.go
  - internal/sdk/models/shared/projectgitcommitparams.go
  - internal/sdk/models/shared/protobufbytesconversion.go
  - internal/sdk/models/shared/protobufencodingconfig.go
  - internal/sdk/models/shared/protobufenumconversion.go
  - internal/sdk/models/shared/protobuflibraryconfig.go
  - internal/sdk/models/shared/protobuflibraryconversionconfig.go
  - internal/sdk/models/shared/protobuflongconversion.go
  - internal/sdk/models/shared/publicsettings.go
  - internal/sdk/models/shared/rbacresource.go
  - internal/sdk/models/shared/redirectinfo.go
  - internal/sdk/models/shared/rediscachelimits.go
  - internal/sdk/models/shared/redisconnectionlimits.go
  - internal/sdk/models/shared/redislimits.go
  - internal/sdk/models/shared/regexlibentry.go
  - internal/sdk/models/shared/resourcepolicy.go
  - internal/sdk/models/shared/restartresponse.go
  - internal/sdk/models/shared/restsecret.go
  - internal/sdk/models/shared/retrybackoffoptions.go
  - internal/sdk/models/shared/role.go
  - internal/sdk/models/shared/routecloneconf.go
  - internal/sdk/models/shared/routeconf.go
  - internal/sdk/models/shared/routes.go
  - internal/sdk/models/shared/routesroute.go
  - internal/sdk/models/shared/routesrouteinput.go
  - internal/sdk/models/shared/runnablejob.go
  - internal/sdk/models/shared/runnablejobcollection.go
  - internal/sdk/models/shared/runnablejobexecutor.go
  - internal/sdk/models/shared/runnablejobscheduledsearch.go
  - internal/sdk/models/shared/samplefile.go
  - internal/sdk/models/shared/sandboxassignmentdto.go
  - internal/sdk/models/shared/savedjob.go
  - internal/sdk/models/shared/savedjobcollection.go
  - internal/sdk/models/shared/savedjobexecutor.go
  - internal/sdk/models/shared/savedjobscheduledsearch.go
  - internal/sdk/models/shared/savedquery.go
  - internal/sdk/models/shared/savedqueryschedule.go
  - internal/sdk/models/shared/savessearchrunmode.go
  - internal/sdk/models/shared/schemalibentry.go
  - internal/sdk/models/shared/schemeclientoauth.go
  - internal/sdk/models/shared/scriptlibentry.go
  - internal/sdk/models/shared/searchaggmode.go
  - internal/sdk/models/shared/searchauditmetrics.go
  - internal/sdk/models/shared/searchconfig.go
  - internal/sdk/models/shared/searchdashboard.go
  - internal/sdk/models/shared/searchhealthcheckstatus.go
  - internal/sdk/models/shared/searchjob.go
  - internal/sdk/models/shared/searchjoberrorstateconfig.go
  - internal/sdk/models/shared/searchjobmetadata.go
  - internal/sdk/models/shared/searchjobresults.go
  - internal/sdk/models/shared/searchjobstageconfig.go
  - internal/sdk/models/shared/searchmacro.go
  - internal/sdk/models/shared/searchparameter.go
  - internal/sdk/models/shared/searchparametertype.go
  - internal/sdk/models/shared/searchparametervalue.go
  - internal/sdk/models/shared/searchquery.go
  - internal/sdk/models/shared/searchsettings.go
  - internal/sdk/models/shared/searchterm.go
  - internal/sdk/models/shared/secretprovider.go
  - internal/sdk/models/shared/secrettype.go
  - internal/sdk/models/shared/security.go
  - internal/sdk/models/shared/senddiagbundle.go
  - internal/sdk/models/shared/serviceslimits.go
  - internal/sdk/models/shared/singleproductconsumptionstatsv5.go
  - internal/sdk/models/shared/singleproductusagebreakdownitemv5.go
  - internal/sdk/models/shared/singleproductusagebreakdownperunititemv5.go
  - internal/sdk/models/shared/sortbyfield.go
  - internal/sdk/models/shared/stagedependency.go
  - internal/sdk/models/shared/stagedependencytype.go
  - internal/sdk/models/shared/subscription.go
  - internal/sdk/models/shared/subscriptionconsumer.go
  - internal/sdk/models/shared/symlinkinfo.go
  - internal/sdk/models/shared/systemconf.go
  - internal/sdk/models/shared/systeminfo.go
  - internal/sdk/models/shared/systemmetricsenum.go
  - internal/sdk/models/shared/systemsettings.go
  - internal/sdk/models/shared/systemsettingsconf.go
  - internal/sdk/models/shared/tableviewsettings.go
  - internal/sdk/models/shared/team.go
  - internal/sdk/models/shared/teamaccesscontrollist.go
  - internal/sdk/models/shared/tlsclientparams.go
  - internal/sdk/models/shared/trustpolicy.go
  - internal/sdk/models/shared/uistatepatch.go
  - internal/sdk/models/shared/updatehectokenrequest.go
  - internal/sdk/models/shared/upgradegroupsettings.go
  - internal/sdk/models/shared/upgrademasterrequest.go
  - internal/sdk/models/shared/upgradepackageurls.go
  - internal/sdk/models/shared/upgraderesult.go
  - internal/sdk/models/shared/upgradesettings.go
  - internal/sdk/models/shared/usagedata.go
  - internal/sdk/models/shared/usagegroup.go
  - internal/sdk/models/shared/user.go
  - internal/sdk/models/shared/useraccesscontrollist.go
  - internal/sdk/models/shared/userinfo.go
  - internal/sdk/models/shared/userprofile.go
  - internal/sdk/models/shared/vaultkmstlsclientconfig.go
  - internal/sdk/models/shared/versioninfo.go
  - internal/sdk/models/shared/workspacedto.go
  - internal/sdk/models/shared/workspacesdto.go
  - internal/sdk/notifications.go
  - internal/sdk/notificationtargets.go
  - internal/sdk/outputs.go
  - internal/sdk/packs.go
  - internal/sdk/parquetschemas.go
  - internal/sdk/parsers.go
  - internal/sdk/pipelines.go
  - internal/sdk/policies.go
  - internal/sdk/preview.go
  - internal/sdk/processes.go
  - internal/sdk/profiler.go
  - internal/sdk/projects.go
  - internal/sdk/protobuflibraries.go
  - internal/sdk/regexes.go
  - internal/sdk/retry/config.go
  - internal/sdk/roles.go
  - internal/sdk/routes.go
  - internal/sdk/samples.go
  - internal/sdk/sandboxes.go
  - internal/sdk/savedjobs.go
  - internal/sdk/savedqueries.go
  - internal/sdk/schemas.go
  - internal/sdk/scripts.go
  - internal/sdk/search.go
  - internal/sdk/secrets.go
  - internal/sdk/security.go
  - internal/sdk/subscriptions.go
  - internal/sdk/system.go
  - internal/sdk/teams.go
  - internal/sdk/teamsacl.go
  - internal/sdk/trustpolicies.go
  - internal/sdk/types/bigint.go
  - internal/sdk/types/date.go
  - internal/sdk/types/datetime.go
  - internal/sdk/types/decimal.go
  - internal/sdk/types/pointers.go
  - internal/sdk/uistate.go
  - internal/sdk/usagegroups.go
  - internal/sdk/users.go
  - internal/sdk/usersacl.go
  - internal/sdk/v5.go
  - internal/sdk/versioning.go
  - internal/sdk/workers.go
  - internal/sdk/workspaces.go
  - internal/validators/DateValidator.go
  - internal/validators/ExactlyOneChild.go
  - internal/validators/JSONParseValidator.go
  - internal/validators/RFC3339Validator.go
  - internal/validators/boolvalidators/not_null.go
  - internal/validators/float32validators/not_null.go
  - internal/validators/float64validators/not_null.go
  - internal/validators/int32validators/not_null.go
  - internal/validators/int64validators/not_null.go
  - internal/validators/listvalidators/not_null.go
  - internal/validators/mapvalidators/not_null.go
  - internal/validators/numbervalidators/not_null.go
  - internal/validators/objectvalidators/not_null.go
  - internal/validators/setvalidators/not_null.go
  - internal/validators/stringvalidators/not_null.go
  - main.go
  - terraform-registry-manifest.json
  - tools/tools.go
examples:
  getUsage:
    speakeasy-default-get-usage:
      parameters:
        path:
          organizationId: "<id>"
          metricType: "Hybrid Worker GBs Received"
        query:
          startingOn: "<value>"
          endingBefore: "<value>"
      responses:
        "200":
          application/json: {"startingOn": "<value>", "endingBefore": "<value>", "data": {"sum": 8631.26, "mean": 5674.17, "dataPoints": [{"category": "<value>", "startTimestamp": "<value>", "endTimestamp": "<value>", "value": 3529.09}, {"category": "<value>", "startTimestamp": "<value>", "endTimestamp": "<value>", "value": 9462.3}, {"category": "<value>", "startTimestamp": "<value>", "endTimestamp": "<value>", "value": 9398.67}]}}
  getCredits:
    speakeasy-default-get-credits:
      parameters:
        path:
          organizationId: "<id>"
      responses:
        "200":
          application/json: {"totalCreditsPurchased": 5315.42, "totalCreditsUsed": 817.32, "totalCreditsAvailable": 9659.58}
  getCosts:
    speakeasy-default-get-costs:
      parameters:
        path:
          organizationId: "<id>"
        query:
          startingOn: "<value>"
          endingBefore: "<value>"
      responses:
        "200":
          application/json: {"startingOn": "<value>", "endingBefore": "<value>", "costs": {}}
  getInvoices:
    speakeasy-default-get-invoices:
      parameters:
        path:
          organizationId: "<id>"
      responses:
        "200":
          application/json: {"items": [{"id": "<id>", "fromDate": "<value>", "toDate": "<value>", "totalCredits": 1258.33, "products": [{"productName": "<value>"}, {"productName": "<value>"}, {"productName": "<value>"}], "status": "FINALIZED"}, {"id": "<id>", "fromDate": "<value>", "toDate": "<value>", "totalCredits": 2980.69, "products": [{"productName": "<value>"}], "status": "VOID"}], "count": 2499.92}
  getInvoice:
    speakeasy-default-get-invoice:
      parameters:
        path:
          organizationId: "<id>"
          invoiceId: "<id>"
      responses:
        "200":
          application/json: {"id": "<id>", "fromDate": "<value>", "toDate": "<value>", "totalCredits": 4864.15, "products": [{"productName": "<value>"}, {"productName": "<value>"}, {"productName": "<value>"}], "status": "VOID"}
  getPlan:
    speakeasy-default-get-plan:
      parameters:
        path:
          organizationId: "<id>"
      responses:
        "200":
          application/json: {"id": "<id>", "name": "<value>", "description": "since foolhardy deliberately yowza", "startDate": "<value>", "isActive": false}
  v5.billing.invoices.getInvoices:
    speakeasy-default-v5-billing-invoices-get-invoices:
      parameters:
        path:
          organizationId: "<id>"
      responses:
        "200":
          application/json: {"items": [{"id": "<id>", "fromDate": "2025-12-17T23:32:55.607Z", "toDate": "2023-03-21T13:46:06.143Z", "totalCredits": 4675.86, "status": "VOID", "products": [{"slug": "edge", "name": "<value>", "totalCredits": 6501.9, "lineItems": [{"name": "<value>", "quantity": 4390.04, "credits": 9231.14, "groups": [{"key": "workergroup", "value": "<value>"}, {"key": "workergroup", "value": "<value>"}, {"key": "cluster_id", "value": "<value>"}]}, {"name": "<value>", "quantity": 7770.37, "credits": 4247.21, "groups": [{"key": "cluster_id", "value": "<value>"}, {"key": "workspace", "value": "<value>"}, {"key": "cluster_id", "value": "<value>"}]}]}]}], "count": 8970.43}
  v5.billing.invoices.getInvoice:
    speakeasy-default-v5-billing-invoices-get-invoice:
      parameters:
        path:
          organizationId: "<id>"
          invoiceId: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "<id>", "fromDate": "2023-10-10T03:08:30.176Z", "toDate": "2025-04-28T05:25:31.707Z", "totalCredits": 3432.94, "status": "FINALIZED", "products": [{"slug": "lakehouse", "name": "<value>", "totalCredits": 7045.87, "lineItems": [{"name": "<value>", "quantity": 8733.08, "credits": 4047.21, "groups": [{"key": "deployment_id", "value": "<value>"}, {"key": "deployment_id", "value": "<value>"}]}, {"name": "<value>", "quantity": 2002.85, "credits": 3064.44, "groups": [{"key": "other", "value": "<value>"}]}, {"name": "<value>", "quantity": 4449.5, "credits": 9175.1, "groups": [{"key": "deployment_id", "value": "<value>"}, {"key": "other", "value": "<value>"}]}]}, {"slug": "search", "name": "<value>", "totalCredits": 2523.62, "lineItems": [{"name": "<value>", "quantity": 3842.01, "credits": 6135.62, "groups": []}, {"name": "<value>", "quantity": 1282.4, "credits": 8831.08, "groups": [{"key": "cluster_id", "value": "<value>"}, {"key": "workspace", "value": "<value>"}]}]}]}}
  v5.billing.consumption.getCreditsSummary:
    speakeasy-default-v5-billing-consumption-get-credits-summary:
      parameters:
        path:
          organizationId: "<id>"
        query:
          startingOn: "2023-08-03T02:42:25.343Z"
          endingBefore: "2025-11-07T19:07:23.531Z"
          window: "monthly"
      responses:
        "200":
          application/json: {"data": {"totalCreditsPurchased": 2517.17, "totalCreditsUsed": 2712.35, "averageConsumption": 709.19}}
  v5.billing.consumption.getCumulativeConsumption:
    speakeasy-default-v5-billing-consumption-get-cumulative-consumption:
      parameters:
        path:
          organizationId: "<id>"
        query:
          startingOn: "2025-07-17T06:51:16.318Z"
          endingBefore: "2025-09-28T06:02:59.574Z"
          window: "monthly"
      responses:
        "200":
          application/json: {"items": [{"date": "2023-05-23T00:13:12.158Z", "credits": 9342.93}, {"date": "2023-07-20T00:12:31.015Z", "credits": 581.33}], "count": 7696.21}
  v5.billing.consumption.getProductsBreakdown:
    speakeasy-default-v5-billing-consumption-get-products-breakdown:
      parameters:
        path:
          organizationId: "<id>"
        query:
          startingOn: "2023-01-26T07:15:37.792Z"
          endingBefore: "2023-10-03T12:05:18.738Z"
          window: "monthly"
      responses:
        "200":
          application/json: {"items": [{"date": "2025-03-23T18:17:07.860Z", "products": [{"slug": "<value>", "credits": 2472.44}, {"slug": "<value>", "credits": 8164.35}, {"slug": "<value>", "credits": 1573.58}]}, {"date": "2025-02-22T20:59:05.219Z", "products": []}], "count": 4833.55}
  v5.billing.consumption.getProductsConsumptionStats:
    speakeasy-default-v5-billing-consumption-get-products-consumption-stats:
      parameters:
        path:
          organizationId: "<id>"
        query:
          startingOn: "2023-01-04T00:19:37.899Z"
          endingBefore: "2024-03-07T13:27:22.774Z"
          window: "monthly"
      responses:
        "200":
          application/json: {"items": [{"slug": "stream", "totalCredits": 3008.41, "perUnit": [{"averageQuantity": 3238.26, "recentQuantity": 9001.89, "totalQuantity": 6506.52, "totalCredits": 5721.3, "recentCredits": 8383.78}]}, {"slug": "infrastructure", "totalCredits": 1827.75, "perUnit": [{"averageQuantity": 2168.98, "recentQuantity": 6361.79, "totalQuantity": 1898.97, "totalCredits": 151.18, "recentCredits": 5824.18}]}], "count": 1527.04}
  v5.billing.consumption.getSingleProductUsageBreakdown:
    speakeasy-default-v5-billing-consumption-get-single-product-usage-breakdown:
      parameters:
        path:
          organizationId: "<id>"
          productSlug: "search"
        query:
          startingOn: "2023-11-28T21:49:04.925Z"
          endingBefore: "2025-09-09T13:52:53.788Z"
          window: "monthly"
      responses:
        "200":
          application/json: {"items": [], "count": 8681.5}
  assignSandboxWorkspaceToUser:
    speakeasy-default-assign-sandbox-workspace-to-user:
      parameters:
        path:
          courseId: "<id>"
      responses:
        "200":
          application/json: {"organizationId": "<id>", "workspaceId": "<id>", "state": "ASSIGNED", "userId": "<id>", "courseId": "<id>", "assignedAt": "2024-01-10T03:42:06.753Z", "expiresAt": "2024-03-06T11:54:07.190Z"}
  getAssignments:
    speakeasy-default-get-assignments:
      responses:
        "200":
          application/json: [{"organizationId": "<id>", "workspaceId": "<id>", "state": "AVAILABLE", "createdAt": "2025-08-06T21:53:43.553Z", "updatedAt": "2023-05-13T00:54:00.391Z"}]
  WorkspacesController_listWorkspaces:
    speakeasy-default-workspaces-controller-list-workspaces:
      parameters:
        path:
          organizationId: "<id>"
      responses:
        "200":
          application/json: {"items": [{"workspaceId": "<id>", "region": "<value>", "lastUpdated": "2023-12-06T01:01:29.259Z", "leaderFQDN": "<value>", "state": "Workspace-Provisioning-Failed"}, {"workspaceId": "<id>", "region": "<value>", "lastUpdated": "2023-04-26T02:24:00.165Z", "leaderFQDN": "<value>", "state": "Workspace-Provisioning"}], "count": 240.51}
  WorkspacesController_createWorkspace:
    speakeasy-default-workspaces-controller-create-workspace:
      parameters:
        path:
          organizationId: "<id>"
      requestBody:
        application/json: {"workspaceId": "<id>", "region": "us-west-2"}
      responses:
        "200":
          application/json: {"workspaceId": "<id>", "region": "<value>", "lastUpdated": "2023-03-30T08:08:25.910Z", "leaderFQDN": "<value>", "state": "Workspace-Provisioning-Failed"}
  WorkspacesController_getWorkspace:
    speakeasy-default-workspaces-controller-get-workspace:
      parameters:
        path:
          organizationId: "<id>"
          workspaceId: "<id>"
      responses:
        "200":
          application/json: {"workspaceId": "<id>", "region": "<value>", "lastUpdated": "2024-01-05T17:02:10.046Z", "leaderFQDN": "<value>", "state": "Workspace-Provisioning-Failed"}
  WorkspacesController_deleteWorkspace:
    speakeasy-default-workspaces-controller-delete-workspace:
      parameters:
        path:
          organizationId: "<id>"
          workspaceId: "<id>"
  WorkspacesController_patchWorkspace:
    speakeasy-default-workspaces-controller-patch-workspace:
      parameters:
        path:
          organizationId: "<id>"
          workspaceId: "<id>"
      requestBody:
        application/json: {}
      responses:
        "200":
          application/json: {"workspaceId": "<id>", "region": "<value>", "lastUpdated": "2023-09-01T02:37:46.846Z", "leaderFQDN": "<value>", "state": "Workspace-Provisioned"}
  getSystemProjectsSubscriptionsByGroupIdByAndProjectId:
    speakeasy-default-get-system-projects-subscriptions-by-group-id-by-and-project-id:
      parameters:
        path:
          groupId: "<id>"
          projectId: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getSystemProjectsVersionCountByGroupIdAndProjectId:
    speakeasy-default-get-system-projects-version-count-by-group-id-and-project-id:
      parameters:
        path:
          groupId: "<id>"
          projectId: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getSystemProjectsVersionDiffByGroupIdAndProjectId:
    speakeasy-default-get-system-projects-version-diff-by-group-id-and-project-id:
      parameters:
        path:
          groupId: "<id>"
          projectId: "<id>"
        query: {}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getSystemProjectsVersionFilesByGroupIdAndProjectId:
    speakeasy-default-get-system-projects-version-files-by-group-id-and-project-id:
      parameters:
        path:
          groupId: "<id>"
          projectId: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createSystemProjectsVersionCommitByGroupIdAndProjectId:
    speakeasy-default-create-system-projects-version-commit-by-group-id-and-project-id:
      parameters:
        path:
          groupId: "<id>"
          projectId: "<id>"
      requestBody:
        application/json: {"message": "<value>"}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createSystemProjectsSubscriptionsCaptureByGroupIdAndSubscriptionId:
    speakeasy-default-create-system-projects-subscriptions-capture-by-group-id-and-subscription-id:
      parameters:
        path:
          groupId: "<id>"
          projectId: "<id>"
          subscriptionId: "<id>"
      requestBody:
        application/json: {"duration": 4923.8, "filter": "<value>", "level": 3160.52, "maxEvents": 7440.79}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createSystemProjectsCaptureByGroupIdAndProjectId:
    speakeasy-default-create-system-projects-capture-by-group-id-and-project-id:
      parameters:
        path:
          groupId: "<id>"
          projectId: "<id>"
      requestBody:
        application/json: {"duration": 5838.43, "filter": "<value>", "level": 9104.01, "maxEvents": 8081.96}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createSystemProjectsPreviewByGroupIdAndProjectId:
    speakeasy-default-create-system-projects-preview-by-group-id-and-project-id:
      parameters:
        path:
          groupId: "<id>"
          projectId: "<id>"
      requestBody:
        application/json: {"mode": "routeAndSend", "pipelineId": "<id>", "sampleId": "<id>"}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getSystemProjectsPipelinesByGroupIdAndProjectId:
    speakeasy-default-get-system-projects-pipelines-by-group-id-and-project-id:
      parameters:
        path:
          groupId: "<id>"
          projectId: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createSystemProjectsPipelinesByGroupIdAndProjectId:
    speakeasy-default-create-system-projects-pipelines-by-group-id-and-project-id:
      parameters:
        path:
          groupId: "<id>"
          projectId: "<id>"
      requestBody:
        application/json: {"id": "<id>", "conf": {"output": "default", "streamtags": []}}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getSystemProjectsPipelinesByGroupIdAndProjectIdAndPipelineId:
    speakeasy-default-get-system-projects-pipelines-by-group-id-and-project-id-and-pipeline-id:
      parameters:
        path:
          groupId: "<id>"
          projectId: "<id>"
          pipelineId: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  updateSystemProjectsPipelinesByGroupIdAndProjectIdAndPipelineId:
    speakeasy-default-update-system-projects-pipelines-by-group-id-and-project-id-and-pipeline-id:
      parameters:
        path:
          groupId: "<id>"
          projectId: "<id>"
          pipelineId: "<id>"
      requestBody:
        application/json: {"id": "<id>", "conf": {"output": "default", "streamtags": []}}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  deleteSystemProjectsPipelinesByGroupIdAndProjectIdAndPipelineId:
    speakeasy-default-delete-system-projects-pipelines-by-group-id-and-project-id-and-pipeline-id:
      parameters:
        path:
          groupId: "<id>"
          projectId: "<id>"
          pipelineId: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createSystemProjectsVersionCommitByProjectId:
    speakeasy-default-create-system-projects-version-commit-by-project-id:
      parameters:
        path:
          projectId: "<id>"
      requestBody:
        application/json: {"message": "<value>"}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getSystemProjectsVersionCountByProjectId:
    speakeasy-default-get-system-projects-version-count-by-project-id:
      parameters:
        path:
          projectId: "<id>"
        query: {}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getSystemProjectsVersionDiffByProjectId:
    speakeasy-default-get-system-projects-version-diff-by-project-id:
      parameters:
        path:
          projectId: "<id>"
        query: {}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getSystemProjectsVersionFilesByProjectId:
    speakeasy-default-get-system-projects-version-files-by-project-id:
      parameters:
        path:
          projectId: "<id>"
        query: {}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createSystemProjectsVersionRevertByProjectId:
    speakeasy-default-create-system-projects-version-revert-by-project-id:
      parameters:
        path:
          projectId: "<id>"
      requestBody:
        application/json: {"message": "<value>"}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getSystemProjectsVersionShowByProjectId:
    speakeasy-default-get-system-projects-version-show-by-project-id:
      parameters:
        path:
          projectId: "<id>"
        query: {}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  listProject:
    speakeasy-default-list-project:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createProject:
    speakeasy-default-create-project:
      requestBody:
        application/json: {"destinations": ["<value>", "<value>"], "id": "<id>", "subscriptions": ["<value>", "<value>", "<value>"]}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getProjectById:
    speakeasy-default-get-project-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  updateProjectById:
    speakeasy-default-update-project-by-id:
      parameters:
        path:
          id: "<id>"
      requestBody:
        application/json: {"destinations": [], "id": "<id>", "subscriptions": ["<value>", "<value>"]}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  deleteProjectById:
    speakeasy-default-delete-project-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getProjectAclById:
    speakeasy-default-get-project-acl-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createProjectAclApplyById:
    speakeasy-default-create-project-acl-apply-by-id:
      parameters:
        path:
          id: "<id>"
      requestBody:
        application/json: {}
      responses:
        "500":
          application/json: {}
  getProjectAclTeamsById:
    speakeasy-default-get-project-acl-teams-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createProjectAclTeamsApplyById:
    speakeasy-default-create-project-acl-teams-apply-by-id:
      parameters:
        path:
          id: "<id>"
      requestBody:
        application/json: {}
      responses:
        "500":
          application/json: {}
  getProjectDestinationsByProjectId:
    speakeasy-default-get-project-destinations-by-project-id:
      parameters:
        path:
          projectId: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getSubscriptionByProjectId:
    speakeasy-default-get-subscription-by-project-id:
      parameters:
        path:
          projectId: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  listSubscription:
    speakeasy-default-list-subscription:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createSubscription:
    speakeasy-default-create-subscription:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getSubscriptionById:
    speakeasy-default-get-subscription-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  updateSubscriptionById:
    speakeasy-default-update-subscription-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  deleteSubscriptionById:
    speakeasy-default-delete-subscription-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  undoLastCommit:
    speakeasy-default-undo-last-commit:
      responses:
        "500":
          application/json: {}
  getVersionBranch:
    speakeasy-default-get-version-branch:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createVersionCommit:
    speakeasy-default-create-version-commit:
      requestBody:
        application/json: {"message": "<value>"}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getVersionCount:
    speakeasy-default-get-version-count:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getVersionCurrentBranch:
    speakeasy-default-get-version-current-branch:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getVersionDiff:
    speakeasy-default-get-version-diff:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getVersionFiles:
    speakeasy-default-get-version-files:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getVersionInfo:
    speakeasy-default-get-version-info:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createVersionPush:
    speakeasy-default-create-version-push:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createVersionRevert:
    speakeasy-default-create-version-revert:
      requestBody:
        application/json: {"commit": "<value>", "message": "<value>"}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getVersionShow:
    speakeasy-default-get-version-show:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getVersionStatus:
    speakeasy-default-get-version-status:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createVersionSync:
    speakeasy-default-create-version-sync:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getSystemSettingsGitSettings:
    speakeasy-default-get-system-settings-git-settings:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  updateSystemSettingsGitSettings:
    speakeasy-default-update-system-settings-git-settings:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createSystemCapture:
    speakeasy-default-create-system-capture:
      requestBody:
        application/json: {"duration": 333.16, "filter": "<value>", "level": 584.49, "maxEvents": 4480.84}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createSystemProjectsCaptureByProjectId:
    speakeasy-default-create-system-projects-capture-by-project-id:
      parameters:
        path:
          projectId: "<id>"
      requestBody:
        application/json: {"duration": 5278.59, "filter": "<value>", "level": 3497.32, "maxEvents": 2257.32}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createSystemProjectsSubscriptionsCaptureByProjectIdAndSubscriptionId:
    speakeasy-default-create-system-projects-subscriptions-capture-by-project-id-and-subscription-id:
      parameters:
        path:
          projectId: "<id>"
          subscriptionId: "<id>"
      requestBody:
        application/json: {"duration": 8758.36, "filter": "<value>", "level": 6607.86, "maxEvents": 5813.86}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createPreview:
    speakeasy-default-create-preview:
      requestBody:
        application/json: {"mode": "pipe", "pipelineId": "<id>", "sampleId": "<id>"}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  listDataSample:
    speakeasy-default-list-data-sample:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createDataSample:
    speakeasy-default-create-data-sample:
      requestBody:
        application/json: {"id": "<id>", "sampleName": "<value>"}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getDataSampleById:
    speakeasy-default-get-data-sample-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  updateDataSampleById:
    speakeasy-default-update-data-sample-by-id:
      parameters:
        path:
          id: "<id>"
      requestBody:
        application/json: {"id": "<id>", "sampleName": "<value>"}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  deleteDataSampleById:
    speakeasy-default-delete-data-sample-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getDataSampleContentById:
    speakeasy-default-get-data-sample-content-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  listPipeline:
    speakeasy-default-list-pipeline:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createPipeline:
    speakeasy-default-create-pipeline:
      requestBody:
        application/json: {"id": "<id>", "conf": {"output": "default", "streamtags": []}}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getPipelineById:
    speakeasy-default-get-pipeline-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  updatePipelineById:
    speakeasy-default-update-pipeline-by-id:
      parameters:
        path:
          id: "<id>"
      requestBody:
        application/json: {"id": "<id>", "conf": {"output": "default", "streamtags": []}}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  deletePipelineById:
    speakeasy-default-delete-pipeline-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getPipelineByPack:
    speakeasy-default-get-pipeline-by-pack:
      parameters:
        path:
          pack: "<value>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createPipelineByPack:
    speakeasy-default-create-pipeline-by-pack:
      parameters:
        path:
          pack: "<value>"
      requestBody:
        application/json: {"id": "<id>", "conf": {"output": "default", "streamtags": []}}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getPipelineByPackAndId:
    speakeasy-default-get-pipeline-by-pack-and-id:
      parameters:
        path:
          id: "<id>"
          pack: "<value>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  updatePipelineByPackAndId:
    speakeasy-default-update-pipeline-by-pack-and-id:
      parameters:
        path:
          id: "<id>"
          pack: "<value>"
      requestBody:
        application/json: {"id": "<id>", "conf": {"output": "default", "streamtags": []}}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  deletePipelineByPackAndId:
    speakeasy-default-delete-pipeline-by-pack-and-id:
      parameters:
        path:
          id: "<id>"
          pack: "<value>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  listBannerMessage:
    speakeasy-default-list-banner-message:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createBannerMessage:
    speakeasy-default-create-banner-message:
      requestBody:
        application/json: {"enabled": false, "type": "custom", "theme": "<value>", "message": "<value>"}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getBannerMessageById:
    speakeasy-default-get-banner-message-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  updateBannerMessageById:
    speakeasy-default-update-banner-message-by-id:
      parameters:
        path:
          id: "<id>"
      requestBody:
        application/json: {"enabled": true, "type": "system", "theme": "<value>", "message": "<value>"}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  deleteBannerMessageById:
    speakeasy-default-delete-banner-message-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  listCertificate:
    speakeasy-default-list-certificate:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createCertificate:
    speakeasy-default-create-certificate:
      requestBody:
        application/json: {"id": "<id>", "cert": "<value>", "privKey": "<value>"}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getCertificateById:
    speakeasy-default-get-certificate-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  updateCertificateById:
    speakeasy-default-update-certificate-by-id:
      parameters:
        path:
          id: "<id>"
      requestBody:
        application/json: {"id": "<id>", "cert": "<value>", "privKey": "<value>"}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  deleteCertificateById:
    speakeasy-default-delete-certificate-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getFeaturesEntryById:
    speakeasy-default-get-features-entry-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getFeaturesEntry:
    speakeasy-default-get-features-entry:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  listSavedJob:
    speakeasy-default-list-saved-job:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createSavedJob:
    speakeasy-default-create-saved-job:
      requestBody:
        application/json: {"type": "scheduledSearch", "ttl": "4h", "removeFields": [], "resumeOnBoot": false, "streamtags": [], "workerAffinity": false, "collector": {"type": "<value>", "conf": {}, "destructive": false}}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getSavedJobById:
    speakeasy-default-get-saved-job-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  updateSavedJobById:
    speakeasy-default-update-saved-job-by-id:
      parameters:
        path:
          id: "<id>"
      requestBody:
        application/json: {"type": "scheduledSearch", "ttl": "4h", "removeFields": [], "resumeOnBoot": false, "streamtags": [], "executor": {"type": "<value>", "storeTaskResults": true}}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  deleteSavedJobById:
    speakeasy-default-delete-saved-job-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  listKeyMetadataEntity:
    speakeasy-default-list-key-metadata-entity:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createKeyMetadataEntity:
    speakeasy-default-create-key-metadata-entity:
      requestBody:
        application/json: {"keyId": "<id>", "algorithm": "aes-256-cbc", "kms": "local", "keyclass": 0, "useIV": false, "ivSize": 12}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getKeyMetadataEntityById:
    speakeasy-default-get-key-metadata-entity-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  updateKeyMetadataEntityById:
    speakeasy-default-update-key-metadata-entity-by-id:
      parameters:
        path:
          id: "<id>"
      requestBody:
        application/json: {"keyId": "<id>", "algorithm": "aes-256-cbc", "kms": "local", "keyclass": 0, "useIV": false, "ivSize": 12}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  deleteKeyMetadataEntityById:
    speakeasy-default-delete-key-metadata-entity-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  listBulletinMessage:
    speakeasy-default-list-bulletin-message:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createBulletinMessage:
    speakeasy-default-create-bulletin-message:
      requestBody:
        application/json: {"id": "<id>", "text": "<value>"}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getBulletinMessageById:
    speakeasy-default-get-bulletin-message-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  deleteBulletinMessageById:
    speakeasy-default-delete-bulletin-message-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  listNotificationTarget:
    speakeasy-default-list-notification-target:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createNotificationTarget:
    speakeasy-default-create-notification-target:
      requestBody:
        application/json: {"id": "<id>", "type": "<value>"}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getNotificationTargetById:
    speakeasy-default-get-notification-target-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  updateNotificationTargetById:
    speakeasy-default-update-notification-target-by-id:
      parameters:
        path:
          id: "<id>"
      requestBody:
        application/json: {"id": "<id>", "type": "<value>"}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  deleteNotificationTargetById:
    speakeasy-default-delete-notification-target-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  listNotification:
    speakeasy-default-list-notification:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createNotification:
    speakeasy-default-create-notification:
      requestBody:
        application/json: {"id": "<id>", "disabled": false, "condition": "<value>", "targets": []}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getNotificationById:
    speakeasy-default-get-notification-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  updateNotificationById:
    speakeasy-default-update-notification-by-id:
      parameters:
        path:
          id: "<id>"
      requestBody:
        application/json: {"id": "<id>", "disabled": false, "condition": "<value>", "targets": []}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  deleteNotificationById:
    speakeasy-default-delete-notification-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  listPolicyRule:
    speakeasy-default-list-policy-rule:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createPolicyRule:
    speakeasy-default-create-policy-rule:
      requestBody:
        application/json: {"id": "<id>", "template": ["<value>", "<value>", "<value>"]}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getPolicyRuleById:
    speakeasy-default-get-policy-rule-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  updatePolicyRuleById:
    speakeasy-default-update-policy-rule-by-id:
      parameters:
        path:
          id: "<id>"
      requestBody:
        application/json: {"id": "<id>", "template": ["<value>", "<value>", "<value>"]}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  deletePolicyRuleById:
    speakeasy-default-delete-policy-rule-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  listRole:
    speakeasy-default-list-role:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createRole:
    speakeasy-default-create-role:
      requestBody:
        application/json: {"id": "<id>", "policy": ["<value>"]}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getRoleById:
    speakeasy-default-get-role-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  updateRoleById:
    speakeasy-default-update-role-by-id:
      parameters:
        path:
          id: "<id>"
      requestBody:
        application/json: {"id": "<id>", "policy": ["<value>", "<value>"]}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  deleteRoleById:
    speakeasy-default-delete-role-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  listScript:
    speakeasy-default-list-script:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createScript:
    speakeasy-default-create-script:
      requestBody:
        application/json: {"id": "<id>", "command": "<value>"}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getScriptById:
    speakeasy-default-get-script-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  updateScriptById:
    speakeasy-default-update-script-by-id:
      parameters:
        path:
          id: "<id>"
      requestBody:
        application/json: {"id": "<id>", "command": "<value>"}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  deleteScriptById:
    speakeasy-default-delete-script-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createTeam:
    speakeasy-default-create-team:
      requestBody:
        application/json: {"description": "resource contrail how what afore anxiously lift truly factorize", "id": "<id>", "name": "<value>", "roles": []}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getTeam:
    speakeasy-default-get-team:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getTeamById:
    speakeasy-default-get-team-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  updateTeamById:
    speakeasy-default-update-team-by-id:
      parameters:
        path:
          id: "<id>"
      requestBody:
        application/json: {"description": "certify speedily thankfully yahoo since synergy costume in language gadzooks", "id": "<id>", "name": "<value>", "roles": ["<value>", "<value>", "<value>"]}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  deleteTeamById:
    speakeasy-default-delete-team-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getTeamAclById:
    speakeasy-default-get-team-acl-by-id:
      parameters:
        path:
          id: "<id>"
        query: {}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getTeamRolesById:
    speakeasy-default-get-team-roles-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getTeamUsersById:
    speakeasy-default-get-team-users-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createTeamUsersById:
    speakeasy-default-create-team-users-by-id:
      parameters:
        path:
          id: "<id>"
      requestBody:
        application/json: {}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getProductsGroupsAclTeamsByProductAndId:
    speakeasy-default-get-products-groups-acl-teams-by-product-and-id:
      parameters:
        path:
          product: "edge"
          id: "<id>"
        query: {}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  listUser:
    speakeasy-default-list-user:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createUser:
    speakeasy-default-create-user:
      requestBody:
        application/json: {"disabled": false, "email": "Angela26@gmail.com", "first": "<value>", "id": "<id>", "last": "<value>", "username": "Caleigh.Maggio-Littel24"}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getUserById:
    speakeasy-default-get-user-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  updateUserById:
    speakeasy-default-update-user-by-id:
      parameters:
        path:
          id: "<id>"
      requestBody:
        application/json: {"disabled": false, "email": "Johanna.Kerluke33@yahoo.com", "first": "<value>", "id": "<id>", "last": "<value>", "username": "Janessa73"}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  deleteUserById:
    speakeasy-default-delete-user-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  updateUserInfoById:
    speakeasy-default-update-user-info-by-id:
      parameters:
        path:
          id: "<id>"
      requestBody:
        application/json: {"disabled": false, "email": "Jermey_Paucek18@gmail.com", "first": "<value>", "id": "<id>", "last": "<value>", "username": "Stacy_Nitzsche8"}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getProductsUsersAclByProductAndId:
    speakeasy-default-get-products-users-acl-by-product-and-id:
      parameters:
        path:
          product: "stream"
          id: "<id>"
        query: {}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getProductsUsersByProduct:
    speakeasy-default-get-products-users-by-product:
      parameters:
        path:
          product: "lake"
        query: {}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  deleteProductsUsersCacheByProduct:
    speakeasy-default-delete-products-users-cache-by-product:
      parameters:
        path:
          product: "stream"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createCriblLakeDatasetByLakeId:
    speakeasy-default-create-cribl-lake-dataset-by-lake-id:
      parameters:
        path:
          lakeId: "<id>"
      requestBody:
        application/json: {"bucketName": "<value>", "id": "<id>"}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getCriblLakeDatasetByLakeId:
    speakeasy-default-get-cribl-lake-dataset-by-lake-id:
      parameters:
        path:
          lakeId: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  deleteCriblLakeDatasetByLakeIdAndId:
    speakeasy-default-delete-cribl-lake-dataset-by-lake-id-and-id:
      parameters:
        path:
          lakeId: "<id>"
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getCriblLakeDatasetByLakeIdAndId:
    speakeasy-default-get-cribl-lake-dataset-by-lake-id-and-id:
      parameters:
        path:
          lakeId: "<id>"
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  updateCriblLakeDatasetByLakeIdAndId:
    speakeasy-default-update-cribl-lake-dataset-by-lake-id-and-id:
      parameters:
        path:
          lakeId: "<id>"
          id: "<id>"
      requestBody:
        application/json: {"bucketName": "<value>", "id": "<id>"}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  listDashboardCategory:
    speakeasy-default-list-dashboard-category:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createDashboardCategory:
    speakeasy-default-create-dashboard-category:
      requestBody:
        application/json: {"id": "<id>", "name": "<value>"}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getDashboardCategoryById:
    speakeasy-default-get-dashboard-category-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  updateDashboardCategoryById:
    speakeasy-default-update-dashboard-category-by-id:
      parameters:
        path:
          id: "<id>"
      requestBody:
        application/json: {"id": "<id>", "name": "<value>"}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  deleteDashboardCategoryById:
    speakeasy-default-delete-dashboard-category-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  listUsageGroup:
    speakeasy-default-list-usage-group:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createUsageGroup:
    speakeasy-default-create-usage-group:
      requestBody:
        application/json: {"id": "<id>", "rules": "<value>"}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getUsageGroupById:
    speakeasy-default-get-usage-group-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  updateUsageGroupById:
    speakeasy-default-update-usage-group-by-id:
      parameters:
        path:
          id: "<id>"
      requestBody:
        application/json: {"id": "<id>", "rules": "<value>"}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  deleteUsageGroupById:
    speakeasy-default-delete-usage-group-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  listDatasetProviderType:
    speakeasy-default-list-dataset-provider-type:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createDatasetProviderType:
    speakeasy-default-create-dataset-provider-type:
      requestBody:
        application/json: {"id": "s3"}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getDatasetProviderTypeById:
    speakeasy-default-get-dataset-provider-type-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  updateDatasetProviderTypeById:
    speakeasy-default-update-dataset-provider-type-by-id:
      parameters:
        path:
          id: "<id>"
      requestBody:
        application/json: {"id": "cribl_leader"}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  deleteDatasetProviderTypeById:
    speakeasy-default-delete-dataset-provider-type-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  listDatasetProvider:
    speakeasy-default-list-dataset-provider:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createDatasetProvider:
    speakeasy-default-create-dataset-provider:
      requestBody:
        application/json: "<value>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getDatasetProviderById:
    speakeasy-default-get-dataset-provider-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  updateDatasetProviderById:
    speakeasy-default-update-dataset-provider-by-id:
      parameters:
        path:
          id: "<id>"
      requestBody:
        application/json: "<value>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  deleteDatasetProviderById:
    speakeasy-default-delete-dataset-provider-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  listDataset:
    speakeasy-default-list-dataset:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createDataset:
    speakeasy-default-create-dataset:
      requestBody:
        application/json: "<value>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getDatasetById:
    speakeasy-default-get-dataset-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  updateDatasetById:
    speakeasy-default-update-dataset-by-id:
      parameters:
        path:
          id: "<id>"
      requestBody:
        application/json: "<value>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  deleteDatasetById:
    speakeasy-default-delete-dataset-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getDatasetAclById:
    speakeasy-default-get-dataset-acl-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createDatasetAclApplyById:
    speakeasy-default-create-dataset-acl-apply-by-id:
      parameters:
        path:
          id: "<id>"
      requestBody:
        application/json: {}
      responses:
        "500":
          application/json: {}
  getDatasetAclTeamsById:
    speakeasy-default-get-dataset-acl-teams-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createDatasetAclTeamsApplyById:
    speakeasy-default-create-dataset-acl-teams-apply-by-id:
      parameters:
        path:
          id: "<id>"
      requestBody:
        application/json: {}
      responses:
        "500":
          application/json: {}
  getSearchDashboardAclById:
    speakeasy-default-get-search-dashboard-acl-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createSearchDashboardAclApplyById:
    speakeasy-default-create-search-dashboard-acl-apply-by-id:
      parameters:
        path:
          id: "<id>"
      requestBody:
        application/json: {}
      responses:
        "500":
          application/json: {}
  getGroupsAclById:
    speakeasy-default-get-groups-acl-by-id:
      parameters:
        path:
          id: "<id>"
        query: {}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getSearchDashboardAclTeamsById:
    speakeasy-default-get-search-dashboard-acl-teams-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createSearchDashboardAclTeamsApplyById:
    speakeasy-default-create-search-dashboard-acl-teams-apply-by-id:
      parameters:
        path:
          id: "<id>"
      requestBody:
        application/json: {}
      responses:
        "500":
          application/json: {}
  listAppscopeLibEntry:
    speakeasy-default-list-appscope-lib-entry:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createAppscopeLibEntry:
    speakeasy-default-create-appscope-lib-entry:
      requestBody:
        application/json: {"config": {}, "description": "for sarong profitable hm", "id": "<id>", "lib": "cribl-custom"}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getAppscopeLibEntryById:
    speakeasy-default-get-appscope-lib-entry-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  updateAppscopeLibEntryById:
    speakeasy-default-update-appscope-lib-entry-by-id:
      parameters:
        path:
          id: "<id>"
      requestBody:
        application/json: {"config": {}, "description": "avow tighten zowie ouch", "id": "<id>", "lib": "cribl-custom"}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  deleteAppscopeLibEntryById:
    speakeasy-default-delete-appscope-lib-entry-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  listGrokFile:
    speakeasy-default-list-grok-file:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createGrokFile:
    speakeasy-default-create-grok-file:
      requestBody:
        application/json: {"content": "<value>", "id": "<id>", "size": 3042.24}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getGrokFileById:
    speakeasy-default-get-grok-file-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  updateGrokFileById:
    speakeasy-default-update-grok-file-by-id:
      parameters:
        path:
          id: "<id>"
      requestBody:
        application/json: {"content": "<value>", "id": "<id>", "size": 7939.02}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  deleteGrokFileById:
    speakeasy-default-delete-grok-file-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  listLookupFile:
    speakeasy-default-list-lookup-file:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createLookupFile:
    speakeasy-default-create-lookup-file:
      requestBody:
        application/json: {"id": "<id>", "mode": "memory"}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  updateLookupFile:
    speakeasy-default-update-lookup-file:
      requestBody:
        text/csv: "<value>"
      responses:
        "200":
          application/json: {"filename": "example.file", "rows": 3973.62, "size": 8104.84}
        "500":
          application/json: {}
  getLookupFileById:
    speakeasy-default-get-lookup-file-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  updateLookupFileById:
    speakeasy-default-update-lookup-file-by-id:
      parameters:
        path:
          id: "<id>"
      requestBody:
        application/json: {"id": "<id>", "mode": "memory"}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  deleteLookupFileById:
    speakeasy-default-delete-lookup-file-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  listParser:
    speakeasy-default-list-parser:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createParser:
    speakeasy-default-create-parser:
      requestBody:
        application/json: {"id": "<id>", "type": "csv"}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getParserById:
    speakeasy-default-get-parser-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  updateParserById:
    speakeasy-default-update-parser-by-id:
      parameters:
        path:
          id: "<id>"
      requestBody:
        application/json: {"id": "<id>", "type": "csv"}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  deleteParserById:
    speakeasy-default-delete-parser-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getProtobufLibraryConfig:
    speakeasy-default-get-protobuf-library-config:
      parameters:
        query:
          onlyWithEncodings: "<value>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getProtobufLibraryConfigById:
    speakeasy-default-get-protobuf-library-config-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getProtobufLibraryConfigEncodingsByIdAndEncId:
    speakeasy-default-get-protobuf-library-config-encodings-by-id-and-enc-id:
      parameters:
        path:
          id: "<id>"
          encid: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getProtobufLibraryConfigEncodingsById:
    speakeasy-default-get-protobuf-library-config-encodings-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  listRegexLibEntry:
    speakeasy-default-list-regex-lib-entry:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createRegexLibEntry:
    speakeasy-default-create-regex-lib-entry:
      requestBody:
        application/json: {"id": "<id>", "regex": "<value>"}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getRegexLibEntryById:
    speakeasy-default-get-regex-lib-entry-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  updateRegexLibEntryById:
    speakeasy-default-update-regex-lib-entry-by-id:
      parameters:
        path:
          id: "<id>"
      requestBody:
        application/json: {"id": "<id>", "regex": "<value>"}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  deleteRegexLibEntryById:
    speakeasy-default-delete-regex-lib-entry-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  listSearchDashboard:
    speakeasy-default-list-search-dashboard:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createSearchDashboard:
    speakeasy-default-create-search-dashboard:
      requestBody:
        application/json: {"created": 4792.84, "createdBy": "<value>", "elements": [{"id": "<id>", "layout": {"h": 106.05, "w": 472.66, "x": 4619.27, "y": 2943.59}, "search": {"type": "values", "values": []}, "type": "chart.horizontalBar"}, {"id": "<id>", "layout": {"h": 1930.21, "w": 1107.88, "x": 6308.92, "y": 2426.59}, "search": {"earliest": 8306.4, "latest": 6427.51, "query": "<value>", "type": "inline"}, "type": "counter.single"}, {"id": "<id>", "layout": {"h": 47.23, "w": 1577.11, "x": 529.47, "y": 9170.69}, "type": "markdown.default", "variant": "markdown"}], "id": "<id>", "modified": 5752.27, "name": "<value>"}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getSearchDashboardById:
    speakeasy-default-get-search-dashboard-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  updateSearchDashboardById:
    speakeasy-default-update-search-dashboard-by-id:
      parameters:
        path:
          id: "<id>"
      requestBody:
        application/json: {"created": 7131.04, "createdBy": "<value>", "elements": [], "id": "<id>", "modified": 370.77, "name": "<value>"}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  deleteSearchDashboardById:
    speakeasy-default-delete-search-dashboard-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  listSearchMacro:
    speakeasy-default-list-search-macro:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createSearchMacro:
    speakeasy-default-create-search-macro:
      requestBody:
        application/json: {"id": "<id>", "replacement": "<value>"}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getSearchMacroById:
    speakeasy-default-get-search-macro-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  updateSearchMacroById:
    speakeasy-default-update-search-macro-by-id:
      parameters:
        path:
          id: "<id>"
      requestBody:
        application/json: {"id": "<id>", "replacement": "<value>"}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  deleteSearchMacroById:
    speakeasy-default-delete-search-macro-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  listSavedQuery:
    speakeasy-default-list-saved-query:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createSavedQuery:
    speakeasy-default-create-saved-query:
      requestBody:
        application/json: {"id": "<id>", "name": "<value>", "query": "<value>"}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getSavedQueryById:
    speakeasy-default-get-saved-query-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  updateSavedQueryById:
    speakeasy-default-update-saved-query-by-id:
      parameters:
        path:
          id: "<id>"
      requestBody:
        application/json: {"id": "<id>", "name": "<value>", "query": "<value>"}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  deleteSavedQueryById:
    speakeasy-default-delete-saved-query-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  listSearchJob:
    speakeasy-default-list-search-job:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createSearchJob:
    speakeasy-default-create-search-job:
      requestBody:
        application/json: {"displayUsername": "<value>", "group": "<value>", "id": "<id>", "query": "<value>", "status": "queued", "timeCreated": 571.34, "timeStarted": 2530.27, "user": "Dawson53"}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getSearchJobById:
    speakeasy-default-get-search-job-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  updateSearchJobById:
    speakeasy-default-update-search-job-by-id:
      parameters:
        path:
          id: "<id>"
      requestBody:
        application/json: {"displayUsername": "<value>", "group": "<value>", "id": "<id>", "query": "<value>", "status": "queued", "timeCreated": 7000.67, "timeStarted": 1814.34, "user": "Gaetano.Wolf62"}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  deleteSearchJobById:
    speakeasy-default-delete-search-job-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createSearchJobDispatchExecutorsById:
    speakeasy-default-create-search-job-dispatch-executors-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getSearchJobLogsById:
    speakeasy-default-get-search-job-logs-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createSearchEventBreakerPreview:
    speakeasy-default-create-search-event-breaker-preview:
      requestBody:
        application/json: {"input": {"rawData": "<value>", "type": "rawData"}}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getSearchHealthcheck:
    speakeasy-default-get-search-healthcheck:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getSearchJobsMetricsById:
    speakeasy-default-get-search-jobs-metrics-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: "<value>"
        "500":
          application/json: {}
  getSearchJobMetrics:
    speakeasy-default-get-search-job-metrics:
      responses:
        "200":
          application/json: "<value>"
        "500":
          application/json: {}
  createSearchPreview:
    speakeasy-default-create-search-preview:
      requestBody:
        application/json: {"events": ["<value>"], "query": "<value>"}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getSearchJobsStagesResultsByIdAndStageId:
    speakeasy-default-get-search-jobs-stages-results-by-id-and-stage-id:
      parameters:
        path:
          id: "<id>"
          stageId: "<id>"
      responses:
        "200":
          application/json: "<value>"
        "500":
          application/json: {}
  getSearchJobsResultsById:
    speakeasy-default-get-search-jobs-results-by-id:
      parameters:
        path:
          id: "<id>"
        query: {}
      responses:
        "200":
          application/json: {"isFinished": false, "job": "Investor Division Consultant", "limit": 312.23, "offset": 5709.25, "persistedEventCount": 4130.71, "totalEventCount": 8856.79}
        "500":
          application/json: {}
  getSearchJobsResultsPollById:
    speakeasy-default-get-search-jobs-results-poll-by-id:
      parameters:
        path:
          id: "<id>"
        query: {}
      responses:
        "200":
          application/json: {"isFinished": false, "job": "Customer Data Consultant", "limit": 2729.84, "offset": 7053.74, "persistedEventCount": 6540.09, "totalEventCount": 7902.98}
        "500":
          application/json: {}
  getDatabaseConnectionConfig:
    speakeasy-default-get-database-connection-config:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createDatabaseConnectionConfig:
    speakeasy-default-create-database-connection-config:
      requestBody:
        application/json: {"authType": "<value>", "databaseType": "mysql", "description": "jump naughty pip fortunate remand apud yuck conservative nor", "id": "<id>"}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getDatabaseConnectionConfigById:
    speakeasy-default-get-database-connection-config-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  updateDatabaseConnectionConfigById:
    speakeasy-default-update-database-connection-config-by-id:
      parameters:
        path:
          id: "<id>"
      requestBody:
        application/json: {"authType": "<value>", "databaseType": "oracle", "description": "orientate without internal", "id": "<id>"}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  deleteDatabaseConnectionConfigById:
    speakeasy-default-delete-database-connection-config-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createLibDatabaseConnectionsTest:
    speakeasy-default-create-lib-database-connections-test:
      requestBody:
        application/json: {"authType": "<value>", "databaseType": "<value>"}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  listEventBreakerRuleset:
    speakeasy-default-list-event-breaker-ruleset:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createEventBreakerRuleset:
    speakeasy-default-create-event-breaker-ruleset:
      requestBody:
        application/json: {"id": "<id>", "lib": "custom", "minRawLength": 256}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getEventBreakerRulesetById:
    speakeasy-default-get-event-breaker-ruleset-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  updateEventBreakerRulesetById:
    speakeasy-default-update-event-breaker-ruleset-by-id:
      parameters:
        path:
          id: "<id>"
      requestBody:
        application/json: {"id": "<id>", "lib": "custom", "minRawLength": 256}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  deleteEventBreakerRulesetById:
    speakeasy-default-delete-event-breaker-ruleset-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getGlobalVariable:
    speakeasy-default-get-global-variable:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createGlobalVariable:
    speakeasy-default-create-global-variable:
      requestBody:
        application/json: {"id": "<id>", "type": "any"}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getGlobalVariableById:
    speakeasy-default-get-global-variable-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  updateGlobalVariableById:
    speakeasy-default-update-global-variable-by-id:
      parameters:
        path:
          id: "<id>"
      requestBody:
        application/json: {"id": "<id>", "type": "any"}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  deleteGlobalVariableById:
    speakeasy-default-delete-global-variable-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getGlobalVariableLibVarsByPack:
    speakeasy-default-get-global-variable-lib-vars-by-pack:
      parameters:
        path:
          pack: "<value>"
        query: {}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createGlobalVariableLibVarsByPack:
    speakeasy-default-create-global-variable-lib-vars-by-pack:
      parameters:
        path:
          pack: "<value>"
      requestBody:
        application/json: {"id": "<id>", "type": "any"}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getGlobalVariableLibVarsByPackAndId:
    speakeasy-default-get-global-variable-lib-vars-by-pack-and-id:
      parameters:
        path:
          id: "<id>"
          pack: "<value>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  updateGlobalVariableLibVarsByPackAndId:
    speakeasy-default-update-global-variable-lib-vars-by-pack-and-id:
      parameters:
        path:
          id: "<id>"
          pack: "<value>"
      requestBody:
        application/json: {"id": "<id>", "type": "any"}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  deleteGlobalVariableLibVarsByPackAndId:
    speakeasy-default-delete-global-variable-lib-vars-by-pack-and-id:
      parameters:
        path:
          id: "<id>"
          pack: "<value>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  listHmacFunction:
    speakeasy-default-list-hmac-function:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createHmacFunction:
    speakeasy-default-create-hmac-function:
      requestBody:
        application/json: {"headerExpression": "<value>", "headerName": "<value>", "id": "<id>", "lib": "custom", "stringBuilders": ["<value>", "<value>"]}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getHmacFunctionById:
    speakeasy-default-get-hmac-function-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  updateHmacFunctionById:
    speakeasy-default-update-hmac-function-by-id:
      parameters:
        path:
          id: "<id>"
      requestBody:
        application/json: {"headerExpression": "<value>", "headerName": "<value>", "id": "<id>", "lib": "cribl", "stringBuilders": ["<value>", "<value>", "<value>"]}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  deleteHmacFunctionById:
    speakeasy-default-delete-hmac-function-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  listInput:
    speakeasy-default-list-input:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createInput:
    speakeasy-default-create-input:
      requestBody:
        application/json: {"disabled": false, "sendToRoutes": true, "pqEnabled": false, "streamtags": [], "host": "0.0.0.0", "port": 5986, "authMethod": "clientCert", "maxActiveReq": 256, "maxRequestsPerSocket": 0, "enableProxyHeader": false, "captureHeaders": false, "keepAliveTimeout": 90, "enableHealthCheck": false, "ipAllowlistRegex": "/.*/", "ipDenylistRegex": "/^$/", "socketTimeout": 0, "allowMachineIdMismatch": false, "subscriptions": [{"subscriptionName": "<value>", "contentFormat": "Raw", "heartbeatInterval": 60, "batchTimeout": 60, "readExistingEvents": false, "sendBookmarks": true, "compress": true, "targets": ["*"], "locale": "en-US", "querySelector": "simple"}, {"subscriptionName": "<value>", "contentFormat": "Raw", "heartbeatInterval": 60, "batchTimeout": 60, "readExistingEvents": false, "sendBookmarks": true, "compress": true, "targets": ["*"], "locale": "en-US", "querySelector": "simple"}]}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getInputById:
    speakeasy-default-get-input-by-id:
      parameters:
        path:
          id: "<id>"
        query:
          workspaceId: "<id>"
          organizationId: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  updateInputById:
    speakeasy-default-update-input-by-id:
      parameters:
        path:
          id: "<id>"
      requestBody:
        application/json: {"id": "<id>", "type": "appscope", "disabled": false, "sendToRoutes": true, "pqEnabled": false, "streamtags": [], "ipWhitelistRegex": "/.*/", "maxActiveCxn": 1000, "socketIdleTimeout": 0, "socketEndingMaxWait": 30, "socketMaxLifespan": 0, "enableProxyHeader": false, "staleChannelFlushMs": 10000, "enableUnixPath": false, "authType": "manual", "unixSocketPath": "$CRIBL_HOME/state/appscope.sock", "authToken": ""}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  deleteInputById:
    speakeasy-default-delete-input-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createInputHecTokenById:
    speakeasy-default-create-input-hec-token-by-id:
      parameters:
        path:
          id: "<id>"
      requestBody:
        application/json: {"token": "<value>"}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  updateInputHecTokenByIdAndToken:
    speakeasy-default-update-input-hec-token-by-id-and-token:
      parameters:
        path:
          id: "<id>"
          token: "<value>"
      requestBody:
        application/json: {}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  listInputStatus:
    speakeasy-default-list-input-status:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getInputStatusById:
    speakeasy-default-get-input-status-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  listOutput:
    speakeasy-default-list-output:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createOutput:
    speakeasy-default-create-output:
      requestBody:
        application/json: {"id": "<id>", "type": "syslog", "systemFields": ["cribl_pipe"], "streamtags": [], "protocol": "tcp", "facility": 1, "severity": 5, "appName": "Cribl", "messageFormat": "rfc3164", "timestampFormat": "syslog", "throttleRatePerSec": "0", "logFailedRequests": false, "loadBalanced": true, "connectionTimeout": 10000, "writeTimeout": 60000, "onBackpressure": "block", "maxRecordSize": 1500, "udpDnsResolvePeriodSec": 0, "pqMaxFileSize": "1 MB", "pqMaxSize": "5GB", "pqPath": "$CRIBL_HOME/state/queues", "pqCompress": "none", "pqOnBackpressure": "block", "pqMode": "error"}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getOutputById:
    speakeasy-default-get-output-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  updateOutputById:
    speakeasy-default-update-output-by-id:
      parameters:
        path:
          id: "<id>"
      requestBody:
        application/json: {"systemFields": ["cribl_pipe"], "streamtags": [], "bucket": "<value>", "awsAuthenticationMethod": "auto", "signatureVersion": "v4", "reuseConnections": true, "rejectUnauthorized": true, "enableAssumeRole": false, "durationSeconds": 3600, "stagePath": "$CRIBL_HOME/state/outputs/staging", "addIdToStagePath": true, "destPath": "", "objectACL": "private", "removeEmptyDirs": true, "format": "json", "baseFileName": "`CriblOut`", "fileNameSuffix": "`.${C.env[\"CRIBL_WORKER_ID\"]}.${__format}${__compression === \"gzip\" ? \".gz\" : \"\"}`", "maxFileSizeMB": 32, "maxOpenFiles": 100, "headerLine": "", "writeHighWaterMark": 64, "onBackpressure": "block", "deadletterEnabled": false, "onDiskFullBackpressure": "block", "maxFileOpenTimeSec": 300, "maxFileIdleTimeSec": 30, "maxConcurrentFileParts": 4, "verifyPermissions": true, "maxClosingFilesToBackpressure": 100, "partitioningFields": [], "compress": "gzip", "compressionLevel": "best_speed", "automaticSchema": false, "parquetVersion": "PARQUET_2_6", "parquetDataPageVersion": "DATA_PAGE_V2", "parquetRowGroupLength": 10000, "parquetPageSize": "1MB", "enableStatistics": true, "enableWritePageIndex": true, "enablePageChecksum": false, "emptyDirCleanupSec": 300, "deadletterPath": "$CRIBL_HOME/state/outputs/dead-letter", "maxRetryNum": 20}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  deleteOutputById:
    speakeasy-default-delete-output-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  deleteOutputPqById:
    speakeasy-default-delete-output-pq-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getOutputPqById:
    speakeasy-default-get-output-pq-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getOutputSamplesById:
    speakeasy-default-get-output-samples-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createOutputTestById:
    speakeasy-default-create-output-test-by-id:
      parameters:
        path:
          id: "<id>"
      requestBody:
        application/json: {"events": [{"_raw": "<value>"}]}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  listOutputStatus:
    speakeasy-default-list-output-status:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getOutputStatusById:
    speakeasy-default-get-output-status-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  listSchema:
    speakeasy-default-list-schema:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createSchema:
    speakeasy-default-create-schema:
      requestBody:
        application/json: {"id": "<id>", "schema": "<value>"}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getSchemaById:
    speakeasy-default-get-schema-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  updateSchemaById:
    speakeasy-default-update-schema-by-id:
      parameters:
        path:
          id: "<id>"
      requestBody:
        application/json: {"id": "<id>", "schema": "<value>"}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  deleteSchemaById:
    speakeasy-default-delete-schema-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  listProfilerItem:
    speakeasy-default-list-profiler-item:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createProfilerItem:
    speakeasy-default-create-profiler-item:
      requestBody:
        application/json: {"id": "<id>"}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getProfilerItemById:
    speakeasy-default-get-profiler-item-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  updateProfilerItemById:
    speakeasy-default-update-profiler-item-by-id:
      parameters:
        path:
          id: "<id>"
      requestBody:
        application/json: {"id": "<id>"}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  deleteProfilerItemById:
    speakeasy-default-delete-profiler-item-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  listRoutes:
    speakeasy-default-list-routes:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getRoutesById:
    speakeasy-default-get-routes-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  updateRoutesById:
    speakeasy-default-update-routes-by-id:
      parameters:
        path:
          id: "<id>"
      requestBody:
        application/json: {"routes": [{"name": "<value>", "filter": "true", "pipeline": "<value>", "enableOutputExpression": false, "final": true}, {"name": "<value>", "filter": "true", "pipeline": "<value>", "enableOutputExpression": false, "final": true}]}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createRoutesAppendById:
    speakeasy-default-create-routes-append-by-id:
      parameters:
        path:
          id: "<id>"
      requestBody:
        application/json: [{"final": true, "id": "<id>", "name": "<value>", "pipeline": "<value>"}, {"final": true, "id": "<id>", "name": "<value>", "pipeline": "<value>"}, {"final": true, "id": "<id>", "name": "<value>", "pipeline": "<value>"}]
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getRoutesByPack:
    speakeasy-default-get-routes-by-pack:
      parameters:
        path:
          pack: "<value>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getRoutesByPackAndId:
    speakeasy-default-get-routes-by-pack-and-id:
      parameters:
        path:
          id: "<id>"
          pack: "<value>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  updateRoutesByPackAndId:
    speakeasy-default-update-routes-by-pack-and-id:
      parameters:
        path:
          id: "<id>"
          pack: "<value>"
      requestBody:
        application/json: {"routes": [{"name": "<value>", "filter": "true", "pipeline": "<value>", "enableOutputExpression": false, "final": true}, {"name": "<value>", "filter": "true", "pipeline": "<value>", "enableOutputExpression": false, "final": true}, {"name": "<value>", "filter": "true", "pipeline": "<value>", "enableOutputExpression": false, "final": true}]}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createRoutesAppendByPackAndId:
    speakeasy-default-create-routes-append-by-pack-and-id:
      parameters:
        path:
          id: "<id>"
          pack: "<value>"
      requestBody:
        application/json: [{"final": false, "id": "<id>", "name": "<value>", "pipeline": "<value>"}, {"final": true, "id": "<id>", "name": "<value>", "pipeline": "<value>"}, {"final": true, "id": "<id>", "name": "<value>", "pipeline": "<value>"}]
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  listLibSchemas:
    speakeasy-default-list-lib-schemas:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createLibSchemas:
    speakeasy-default-create-lib-schemas:
      requestBody:
        application/json: {"id": "<id>", "schema": "<value>"}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getLibSchemasById:
    speakeasy-default-get-lib-schemas-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  updateLibSchemasById:
    speakeasy-default-update-lib-schemas-by-id:
      parameters:
        path:
          id: "<id>"
      requestBody:
        application/json: {"id": "<id>", "schema": "<value>"}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  deleteLibSchemasById:
    speakeasy-default-delete-lib-schemas-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getSchemaLibByPack:
    speakeasy-default-get-schema-lib-by-pack:
      parameters:
        path:
          pack: "<value>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createSchemaLibByPack:
    speakeasy-default-create-schema-lib-by-pack:
      parameters:
        path:
          pack: "<value>"
      requestBody:
        application/json: {"id": "<id>", "schema": "<value>"}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getSchemaLibByPackAndId:
    speakeasy-default-get-schema-lib-by-pack-and-id:
      parameters:
        path:
          id: "<id>"
          pack: "<value>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  updateSchemaLibByPackAndId:
    speakeasy-default-update-schema-lib-by-pack-and-id:
      parameters:
        path:
          id: "<id>"
          pack: "<value>"
      requestBody:
        application/json: {"id": "<id>", "schema": "<value>"}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  deleteSchemaLibByPackAndId:
    speakeasy-default-delete-schema-lib-by-pack-and-id:
      parameters:
        path:
          id: "<id>"
          pack: "<value>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  listRestSecret:
    speakeasy-default-list-rest-secret:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createRestSecret:
    speakeasy-default-create-rest-secret:
      requestBody:
        application/json: {"id": "<id>", "secretType": "credentials"}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getRestSecretById:
    speakeasy-default-get-rest-secret-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  updateRestSecretById:
    speakeasy-default-update-rest-secret-by-id:
      parameters:
        path:
          id: "<id>"
      requestBody:
        application/json: {"id": "<id>", "secretType": "credentials"}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  deleteRestSecretById:
    speakeasy-default-delete-rest-secret-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createEdgeAppscopeProcesses:
    speakeasy-default-create-edge-appscope-processes:
      parameters:
        query:
          pid: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getEdgeAppscopeProcesses:
    speakeasy-default-get-edge-appscope-processes:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  deleteEdgeAppscopeProcessesByPid:
    speakeasy-default-delete-edge-appscope-processes-by-pid:
      parameters:
        path:
          pid: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getEdgeAppscopeProcessesByPid:
    speakeasy-default-get-edge-appscope-processes-by-pid:
      parameters:
        path:
          pid: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  updateEdgeAppscopeProcessesByPid:
    speakeasy-default-update-edge-appscope-processes-by-pid:
      parameters:
        path:
          pid: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getEdgeEventsCollectors:
    speakeasy-default-get-edge-events-collectors:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getEdgeFileinspect:
    speakeasy-default-get-edge-fileinspect:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getEdgeLsByPath:
    speakeasy-default-get-edge-ls-by-path:
      parameters:
        path:
          path: "/net"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createProductsEdgeMapQuery:
    speakeasy-default-create-products-edge-map-query:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getEdgeMetadata:
    speakeasy-default-get-edge-metadata:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createEdgeFileIngest:
    speakeasy-default-create-edge-file-ingest:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getEdgeFileSample:
    speakeasy-default-get-edge-file-sample:
      parameters:
        query:
          path: "/System"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createEdgeKubeLogs:
    speakeasy-default-create-edge-kube-logs:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getEdgeKubeProxy:
    speakeasy-default-get-edge-kube-proxy:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getEdgeContainersById:
    speakeasy-default-get-edge-containers-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getEdgeContainers:
    speakeasy-default-get-edge-containers:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getEdgeLogs:
    speakeasy-default-get-edge-logs:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getEdgeProcessesByPid:
    speakeasy-default-get-edge-processes-by-pid:
      parameters:
        path:
          pid: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getEdgeProcesses:
    speakeasy-default-get-edge-processes:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getEdgeEventsQuery:
    speakeasy-default-get-edge-events-query:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getAuthAuthorizationCodeCallback: {}
  getAuthMetadata:
    speakeasy-default-get-auth-metadata:
      responses:
        "200":
          text/xml: "<value>"
  login:
    speakeasy-default-login:
      requestBody:
        application/json: {"username": "Christelle69", "password": "UVp3HFAKtBXVWPj"}
      responses:
        "200":
          application/json: {"token": "<value>"}
  logout: {}
  createAuthSloCallback:
    speakeasy-default-create-auth-slo-callback:
      requestBody:
        application/x-www-form-urlencoded: {}
  getAuthSloCallback: {}
  getAuthSlo: {}
  createAuthSsoCallback:
    speakeasy-default-create-auth-sso-callback:
      requestBody:
        application/x-www-form-urlencoded: {}
  getAuthSsoCallback: {}
  getAuthSso:
    speakeasy-default-get-auth-sso:
      responses:
        "200":
          application/json: {"name": "<value>"}
  getAuthGroups:
    speakeasy-default-get-auth-groups:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getAuthMultiFactor:
    speakeasy-default-get-auth-multi-factor:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  deleteAuthUsersTokenById:
    speakeasy-default-delete-auth-users-token-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getAuthorizePolicy:
    speakeasy-default-get-authorize-policy:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getAuthorizeRoles:
    speakeasy-default-get-authorize-roles:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getChangelogViewed:
    speakeasy-default-get-changelog-viewed:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  updateChangelogViewed:
    speakeasy-default-update-changelog-viewed:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createSystemDistributedUpgradeCancelByGroup:
    speakeasy-default-create-system-distributed-upgrade-cancel-by-group:
      parameters:
        path:
          group: "<value>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createSystemDistributedUpgradeStageByGroup:
    speakeasy-default-create-system-distributed-upgrade-stage-by-group:
      parameters:
        path:
          group: "<value>"
        query: {}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createSystemDistributedUpgradeByGroup:
    speakeasy-default-create-system-distributed-upgrade-by-group:
      parameters:
        path:
          group: "<value>"
      requestBody:
        application/json: {"upgradePercentage": 1, "workerRetries": 5, "workerRetryDelay": 1000}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getSystemDistributedUpgradeDownloadByFile:
    speakeasy-default-get-system-distributed-upgrade-download-by-file:
      parameters:
        path:
          file: "<value>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  reloadSettings: {}
  triggerRestart: {}
  getSystemSettingsAuth:
    speakeasy-default-get-system-settings-auth:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  updateSystemSettingsAuth:
    speakeasy-default-update-system-settings-auth:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getSystemSettingsConf:
    speakeasy-default-get-system-settings-conf:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  updateSystemSettingsConf:
    speakeasy-default-update-system-settings-conf:
      requestBody:
        application/json: {"api": {"disabled": false, "host": "gracious-petticoat.com", "port": 2303.28, "protocol": "<value>", "ssl": {"certPath": "<value>", "disabled": true, "passphrase": "<value>", "privKeyPath": "<value>"}, "workerRemoteAccess": true}, "backups": {"backupPersistence": "<value>", "backupsDirectory": "<value>"}, "customLogo": {"enabled": true, "logoDescription": "<value>", "logoImage": "<value>"}, "pii": {"enablePiiDetection": false}, "proxy": {"useEnvVars": true}, "rollback": {"rollbackEnabled": true}, "shutdown": {"drainTimeout": 1453.61}, "sni": {"disableSNIRouting": false}, "system": {"intercom": true, "upgrade": "api"}, "tls": {"defaultCipherList": "<value>", "defaultEcdhCurve": "<value>", "maxVersion": "<value>", "minVersion": "<value>", "rejectUnauthorized": true}, "upgradeGroupSettings": {}, "upgradeSettings": {"disableAutomaticUpgrade": true, "enableLegacyEdgeUpgrade": false, "upgradeSource": "<value>"}, "workers": {"count": 1793.87, "memory": 7454.72, "minimum": 4565.28}}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getSystemSettingsSearchLimits:
    speakeasy-default-get-system-settings-search-limits:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getSystemSettings:
    speakeasy-default-get-system-settings:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  updateSystemSettings:
    speakeasy-default-update-system-settings:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getSystemSettingsCribl:
    speakeasy-default-get-system-settings-cribl:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getSystemSettingsUpgrade:
    speakeasy-default-get-system-settings-upgrade:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createSystemSettingsUpgradeByVersion:
    speakeasy-default-create-system-settings-upgrade-by-version:
      parameters:
        path:
          version: "<value>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createSystemSettingsUpgradeFromPackage:
    speakeasy-default-create-system-settings-upgrade-from-package:
      requestBody:
        application/json: {}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createOutputClickHouseDescribeTable:
    speakeasy-default-create-output-click-house-describe-table:
      requestBody:
        application/json: {"asyncInserts": true, "database": "<value>", "flushPeriodSec": 2136.91, "format": "json-each-row", "loadBalanced": true, "mappingType": "automatic", "tableName": "<value>", "url": "https://ill-tune-up.info/"}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getClui:
    speakeasy-default-get-clui:
      parameters:
        query:
          query: "<value>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getSummaryWorkers:
    speakeasy-default-get-summary-workers:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getWorkers:
    speakeasy-default-get-workers:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  updateWorkersRestart:
    speakeasy-default-update-workers-restart:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getConfigBundlesByGroupAndVersion:
    speakeasy-default-get-config-bundles-by-group-and-version:
      parameters:
        path:
          group: "<value>"
          version: "<value>"
      responses:
        "200":
          application/tar+gzip: "0xFDbFcB681f"
  getSummary:
    speakeasy-default-get-summary:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createLibExpression:
    speakeasy-default-create-lib-expression:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  listCondition:
    speakeasy-default-list-condition:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getConditionById:
    speakeasy-default-get-condition-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getHealthInfo:
    speakeasy-default-get-health-info:
      responses:
        "200":
          application/json: {"status": "standby", "startTime": 2125.05}
        "420":
          application/json: {"status": "healthy", "startTime": 5770.07}
  getDiagBundle:
    speakeasy-default-get-diag-bundle:
      responses:
        "200":
          application/tar+gzip: "0x16f6D72617"
  getSystemInfo:
    speakeasy-default-get-system-info:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getSystemDiag:
    speakeasy-default-get-system-diag:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  deleteSystemDiag:
    speakeasy-default-delete-system-diag:
      parameters:
        query:
          path: "/usr/libexec"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createSystemDiagSend:
    speakeasy-default-create-system-diag-send:
      requestBody:
        application/json: {"sendToCribl": false, "renameJs": true, "includeMetrics": true, "includeGit": true, "includeTopTalkers": false, "includeInstallLogs": false}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getJobResultsById:
    speakeasy-default-get-job-results-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/x-ndjson: "0x320aEEB417"
  updateJobsCancelById:
    speakeasy-default-update-jobs-cancel-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createJobs:
    speakeasy-default-create-jobs:
      requestBody:
        application/json: {"type": "executor", "ttl": "4h", "removeFields": [], "resumeOnBoot": false, "streamtags": [], "executor": {"type": "<value>", "storeTaskResults": true}}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getJobs:
    speakeasy-default-get-jobs:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  deleteJobsById:
    speakeasy-default-delete-jobs-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getJobsById:
    speakeasy-default-get-jobs-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  updateJobsKeepById:
    speakeasy-default-update-jobs-keep-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  updateJobsPauseById:
    speakeasy-default-update-jobs-pause-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  updateJobsResumeById:
    speakeasy-default-update-jobs-resume-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getJobsResultsByIdAndGroup:
    speakeasy-default-get-jobs-results-by-id-and-group:
      parameters:
        path:
          id: "<id>"
          group: "<value>"
        query: {}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getJobsErrorsByIdAndGroup:
    speakeasy-default-get-jobs-errors-by-id-and-group:
      parameters:
        path:
          id: "<id>"
          group: "<value>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getJobsErrorsById:
    speakeasy-default-get-jobs-errors-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getSecurityKmsConfig:
    speakeasy-default-get-security-kms-config:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  updateSecurityKmsConfig:
    speakeasy-default-update-security-kms-config:
      requestBody:
        application/json: {"enableHealthCheck": true, "provider": "vault"}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getSecurityKmsHealth:
    speakeasy-default-get-security-kms-health:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  listLicense:
    speakeasy-default-list-license:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createLicense:
    speakeasy-default-create-license:
      requestBody:
        application/json: {"license": "<value>"}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getLicenseById:
    speakeasy-default-get-license-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  deleteLicenseById:
    speakeasy-default-delete-license-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getLicense:
    speakeasy-default-get-license:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  listLoggerConfig:
    speakeasy-default-list-logger-config:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getLoggerConfigById:
    speakeasy-default-get-logger-config-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  updateLoggerConfigById:
    speakeasy-default-update-logger-config-by-id:
      parameters:
        path:
          id: "<id>"
      requestBody:
        application/json: {"channels": [], "id": "<id>", "limitRate": 3458.88, "maxSizeBytes": 6138.31, "redactFields": ["<value>", "<value>", "<value>"], "redactLabel": "<value>"}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  deleteLoggerConfigById:
    speakeasy-default-delete-logger-config-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getSystemJobsLogsByIdAndGroupId:
    speakeasy-default-get-system-jobs-logs-by-id-and-group-id:
      parameters:
        path:
          id: "<id>"
          groupId: "<id>"
        query: {}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getSystemLogsById:
    speakeasy-default-get-system-logs-by-id:
      parameters:
        path:
          id: "<id>"
        query: {}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getSystemLogs:
    speakeasy-default-get-system-logs:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getSystemLogsSearch:
    speakeasy-default-get-system-logs-search:
      parameters:
        query:
          type: "<value>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createPacks:
    speakeasy-default-create-packs:
      requestBody:
        application/json: {"id": "<id>", "description": "whoever inasmuch weird up", "version": "<value>", "source": "<value>", "disabled": true}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getPacks:
    speakeasy-default-get-packs:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  updatePacks:
    speakeasy-default-update-packs:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  deletePacksById:
    speakeasy-default-delete-packs-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  updatePacksById:
    speakeasy-default-update-packs-by-id:
      parameters:
        path:
          id: "<id>"
        query: {}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createPacksClone:
    speakeasy-default-create-packs-clone:
      requestBody:
        application/json: {"dstGroups": ["<value>", "<value>"], "packs": [], "srcGroup": "<value>"}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getPacksExportById:
    speakeasy-default-get-packs-export-by-id:
      parameters:
        path:
          id: "<id>"
        query:
          mode: "merge"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getSystemProcesses:
    speakeasy-default-get-system-processes:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createSystemMetricsEnum:
    speakeasy-default-create-system-metrics-enum:
      requestBody:
        application/json: {}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getSystemMetrics:
    speakeasy-default-get-system-metrics:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createSystemMetricsQuery:
    speakeasy-default-create-system-metrics-query:
      requestBody:
        application/json: {"aggs": {"aggregations": [], "cumulative": true, "flushEventLimit": 6815.29, "flushMemLimit": 4113.04, "hostname": "cool-invite.biz", "metricsMode": false, "sufficientStatsOnly": false, "timeWindowSeconds": 5869.17}}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getUiByKey:
    speakeasy-default-get-ui-by-key:
      parameters:
        path:
          key: "<key>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  updateUiByKey:
    speakeasy-default-update-ui-by-key:
      parameters:
        path:
          key: "<key>"
      requestBody:
        application/json: {"op": "set", "value": "<value>"}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getAiConsent:
    speakeasy-default-get-ai-consent:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createAiConsent:
    speakeasy-default-create-ai-consent:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  listTrustPolicy:
    speakeasy-default-list-trust-policy:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  listFunction:
    speakeasy-default-list-function:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getFunctionById:
    speakeasy-default-get-function-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getFunctionByPack:
    speakeasy-default-get-function-by-pack:
      parameters:
        path:
          pack: "<value>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getFunctionByPackAndId:
    speakeasy-default-get-function-by-pack-and-id:
      parameters:
        path:
          id: "<id>"
          pack: "<value>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  listCollector:
    speakeasy-default-list-collector:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getCollectorById:
    speakeasy-default-get-collector-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  listExecutor:
    speakeasy-default-list-executor:
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getExecutorById:
    speakeasy-default-get-executor-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getGroupsConfigVersionById:
    speakeasy-default-get-groups-config-version-by-id:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  createProductsGroupsByProduct:
    speakeasy-default-create-products-groups-by-product:
      parameters:
        path:
          product: "edge"
      requestBody:
        application/json: {"configVersion": "<value>", "id": "<id>"}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getProductsGroupsByProduct:
    speakeasy-default-get-products-groups-by-product:
      parameters:
        path:
          product: "stream"
        query: {}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  updateGroupsDeployById:
    speakeasy-default-update-groups-deploy-by-id:
      parameters:
        path:
          id: "<id>"
      requestBody:
        application/json: {"version": "<value>"}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
  getGroupsById:
    speakeasy-default-get-groups-by-id:
      parameters:
        path:
          id: "<id>"
        query: {}
      responses:
        "200":
          application/json: {}
        "500":
          application/json: {}
examplesVersion: 1.0.1
generatedTests: {}
