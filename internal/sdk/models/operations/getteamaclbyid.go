// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/speakeasy/terraform-provider-cribl-terraform/internal/sdk/models/shared"
	"net/http"
)

// Type - resource type by which to filter access levels
type Type string

const (
	TypeGroups           Type = "groups"
	TypeDatasets         Type = "datasets"
	TypeDatasetProviders Type = "dataset-providers"
	TypeProjects         Type = "projects"
	TypeDashboards       Type = "dashboards"
	TypeMacros           Type = "macros"
)

func (e Type) ToPointer() *Type {
	return &e
}
func (e *Type) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "groups":
		fallthrough
	case "datasets":
		fallthrough
	case "dataset-providers":
		fallthrough
	case "projects":
		fallthrough
	case "dashboards":
		fallthrough
	case "macros":
		*e = Type(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Type: %v", v)
	}
}

type GetTeamACLByIDRequest struct {
	// Team name
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// resource type by which to filter access levels
	Type *Type `queryParam:"style=form,explode=true,name=type"`
}

func (o *GetTeamACLByIDRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetTeamACLByIDRequest) GetType() *Type {
	if o == nil {
		return nil
	}
	return o.Type
}

// GetTeamACLByIDResponseBody - a list of ResourcePolicy objects
type GetTeamACLByIDResponseBody struct {
	// number of items present in the items array
	Count *int64                  `json:"count,omitempty"`
	Items []shared.ResourcePolicy `json:"items,omitempty"`
}

func (o *GetTeamACLByIDResponseBody) GetCount() *int64 {
	if o == nil {
		return nil
	}
	return o.Count
}

func (o *GetTeamACLByIDResponseBody) GetItems() []shared.ResourcePolicy {
	if o == nil {
		return nil
	}
	return o.Items
}

type GetTeamACLByIDResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// a list of ResourcePolicy objects
	Object *GetTeamACLByIDResponseBody
	// Unexpected error
	Error *shared.Error
}

func (o *GetTeamACLByIDResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetTeamACLByIDResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetTeamACLByIDResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *GetTeamACLByIDResponse) GetObject() *GetTeamACLByIDResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}

func (o *GetTeamACLByIDResponse) GetError() *shared.Error {
	if o == nil {
		return nil
	}
	return o.Error
}
