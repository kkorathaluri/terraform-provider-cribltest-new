// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy/terraform-provider-cribl-terraform/internal/sdk/models/shared"
	"net/http"
)

type GetProtobufLibraryConfigByIDRequest struct {
	// Library Id
	ID string `pathParam:"style=simple,explode=false,name=id"`
}

func (o *GetProtobufLibraryConfigByIDRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

// GetProtobufLibraryConfigByIDResponseBody - a list of ProtobufLibraryConfig objects
type GetProtobufLibraryConfigByIDResponseBody struct {
	// number of items present in the items array
	Count *int64                         `json:"count,omitempty"`
	Items []shared.ProtobufLibraryConfig `json:"items,omitempty"`
}

func (o *GetProtobufLibraryConfigByIDResponseBody) GetCount() *int64 {
	if o == nil {
		return nil
	}
	return o.Count
}

func (o *GetProtobufLibraryConfigByIDResponseBody) GetItems() []shared.ProtobufLibraryConfig {
	if o == nil {
		return nil
	}
	return o.Items
}

type GetProtobufLibraryConfigByIDResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// a list of ProtobufLibraryConfig objects
	Object *GetProtobufLibraryConfigByIDResponseBody
	// Unexpected error
	Error *shared.Error
}

func (o *GetProtobufLibraryConfigByIDResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetProtobufLibraryConfigByIDResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetProtobufLibraryConfigByIDResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *GetProtobufLibraryConfigByIDResponse) GetObject() *GetProtobufLibraryConfigByIDResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}

func (o *GetProtobufLibraryConfigByIDResponse) GetError() *shared.Error {
	if o == nil {
		return nil
	}
	return o.Error
}
