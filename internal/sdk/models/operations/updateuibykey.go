// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy/terraform-provider-cribl-terraform/internal/sdk/models/shared"
	"net/http"
)

type UpdateUIByKeyRequest struct {
	// UI state key
	Key string `pathParam:"style=simple,explode=false,name=key"`
	// UI State Patch object
	UIStatePatch shared.UIStatePatch `request:"mediaType=application/json"`
}

func (o *UpdateUIByKeyRequest) GetKey() string {
	if o == nil {
		return ""
	}
	return o.Key
}

func (o *UpdateUIByKeyRequest) GetUIStatePatch() shared.UIStatePatch {
	if o == nil {
		return shared.UIStatePatch{}
	}
	return o.UIStatePatch
}

// UpdateUIByKeyResponseBody - a list of any objects
type UpdateUIByKeyResponseBody struct {
	// number of items present in the items array
	Count *int64           `json:"count,omitempty"`
	Items []map[string]any `json:"items,omitempty"`
}

func (o *UpdateUIByKeyResponseBody) GetCount() *int64 {
	if o == nil {
		return nil
	}
	return o.Count
}

func (o *UpdateUIByKeyResponseBody) GetItems() []map[string]any {
	if o == nil {
		return nil
	}
	return o.Items
}

type UpdateUIByKeyResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// a list of any objects
	Object *UpdateUIByKeyResponseBody
	// Unexpected error
	Error *shared.Error
}

func (o *UpdateUIByKeyResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *UpdateUIByKeyResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *UpdateUIByKeyResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *UpdateUIByKeyResponse) GetObject() *UpdateUIByKeyResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}

func (o *UpdateUIByKeyResponse) GetError() *shared.Error {
	if o == nil {
		return nil
	}
	return o.Error
}
