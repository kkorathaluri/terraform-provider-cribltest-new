// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy/terraform-provider-cribl-terraform/internal/sdk/models/shared"
	"net/http"
)

type UpdateSavedQueryByIDRequest struct {
	// Unique ID to PATCH
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// SavedQuery object to be updated
	SavedQuery shared.SavedQuery `request:"mediaType=application/json"`
}

func (o *UpdateSavedQueryByIDRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *UpdateSavedQueryByIDRequest) GetSavedQuery() shared.SavedQuery {
	if o == nil {
		return shared.SavedQuery{}
	}
	return o.SavedQuery
}

// UpdateSavedQueryByIDResponseBody - a list of SavedQuery objects
type UpdateSavedQueryByIDResponseBody struct {
	// number of items present in the items array
	Count *int64              `json:"count,omitempty"`
	Items []shared.SavedQuery `json:"items,omitempty"`
}

func (o *UpdateSavedQueryByIDResponseBody) GetCount() *int64 {
	if o == nil {
		return nil
	}
	return o.Count
}

func (o *UpdateSavedQueryByIDResponseBody) GetItems() []shared.SavedQuery {
	if o == nil {
		return nil
	}
	return o.Items
}

type UpdateSavedQueryByIDResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// a list of SavedQuery objects
	Object *UpdateSavedQueryByIDResponseBody
	// Unexpected error
	Error *shared.Error
}

func (o *UpdateSavedQueryByIDResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *UpdateSavedQueryByIDResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *UpdateSavedQueryByIDResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *UpdateSavedQueryByIDResponse) GetObject() *UpdateSavedQueryByIDResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}

func (o *UpdateSavedQueryByIDResponse) GetError() *shared.Error {
	if o == nil {
		return nil
	}
	return o.Error
}
