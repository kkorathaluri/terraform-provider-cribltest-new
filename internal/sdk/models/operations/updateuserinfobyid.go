// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy/terraform-provider-cribl-terraform/internal/sdk/models/shared"
	"net/http"
)

type UpdateUserInfoByIDRequest struct {
	// User Id
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// UserInfo object
	UserInfo shared.UserInfo `request:"mediaType=application/json"`
}

func (o *UpdateUserInfoByIDRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *UpdateUserInfoByIDRequest) GetUserInfo() shared.UserInfo {
	if o == nil {
		return shared.UserInfo{}
	}
	return o.UserInfo
}

// UpdateUserInfoByIDResponseBody - a list of User objects
type UpdateUserInfoByIDResponseBody struct {
	// number of items present in the items array
	Count *int64        `json:"count,omitempty"`
	Items []shared.User `json:"items,omitempty"`
}

func (o *UpdateUserInfoByIDResponseBody) GetCount() *int64 {
	if o == nil {
		return nil
	}
	return o.Count
}

func (o *UpdateUserInfoByIDResponseBody) GetItems() []shared.User {
	if o == nil {
		return nil
	}
	return o.Items
}

type UpdateUserInfoByIDResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// a list of User objects
	Object *UpdateUserInfoByIDResponseBody
	// Unexpected error
	Error *shared.Error
}

func (o *UpdateUserInfoByIDResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *UpdateUserInfoByIDResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *UpdateUserInfoByIDResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *UpdateUserInfoByIDResponse) GetObject() *UpdateUserInfoByIDResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}

func (o *UpdateUserInfoByIDResponse) GetError() *shared.Error {
	if o == nil {
		return nil
	}
	return o.Error
}
