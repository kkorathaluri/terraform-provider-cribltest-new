// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy/terraform-provider-cribl-terraform/internal/sdk/models/shared"
	"net/http"
)

type GetVersionShowRequest struct {
	// Commit hash (default is HEAD)
	Commit *string `queryParam:"style=form,explode=true,name=commit"`
	// Group ID
	Group *string `queryParam:"style=form,explode=true,name=group"`
	// Filename
	Filename *string `queryParam:"style=form,explode=true,name=filename"`
	// Limit maximum lines in the diff
	DiffLineLimit *float64 `queryParam:"style=form,explode=true,name=diffLineLimit"`
}

func (o *GetVersionShowRequest) GetCommit() *string {
	if o == nil {
		return nil
	}
	return o.Commit
}

func (o *GetVersionShowRequest) GetGroup() *string {
	if o == nil {
		return nil
	}
	return o.Group
}

func (o *GetVersionShowRequest) GetFilename() *string {
	if o == nil {
		return nil
	}
	return o.Filename
}

func (o *GetVersionShowRequest) GetDiffLineLimit() *float64 {
	if o == nil {
		return nil
	}
	return o.DiffLineLimit
}

// GetVersionShowResponseBody - a list of any objects
type GetVersionShowResponseBody struct {
	// number of items present in the items array
	Count *int64           `json:"count,omitempty"`
	Items []map[string]any `json:"items,omitempty"`
}

func (o *GetVersionShowResponseBody) GetCount() *int64 {
	if o == nil {
		return nil
	}
	return o.Count
}

func (o *GetVersionShowResponseBody) GetItems() []map[string]any {
	if o == nil {
		return nil
	}
	return o.Items
}

type GetVersionShowResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// a list of any objects
	Object *GetVersionShowResponseBody
	// Unexpected error
	Error *shared.Error
}

func (o *GetVersionShowResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *GetVersionShowResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *GetVersionShowResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *GetVersionShowResponse) GetObject() *GetVersionShowResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}

func (o *GetVersionShowResponse) GetError() *shared.Error {
	if o == nil {
		return nil
	}
	return o.Error
}
