// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/speakeasy/terraform-provider-cribl-terraform/internal/sdk/models/shared"
	"net/http"
)

type DeletePipelineByPackAndIDRequest struct {
	// Unique ID to DELETE for pack
	ID string `pathParam:"style=simple,explode=false,name=id"`
	// pack ID to DELETE
	Pack string `pathParam:"style=simple,explode=false,name=pack"`
	// Group Id
	GroupID string `pathParam:"style=simple,explode=false,name=groupId"`
}

func (o *DeletePipelineByPackAndIDRequest) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *DeletePipelineByPackAndIDRequest) GetPack() string {
	if o == nil {
		return ""
	}
	return o.Pack
}

func (o *DeletePipelineByPackAndIDRequest) GetGroupID() string {
	if o == nil {
		return ""
	}
	return o.GroupID
}

// DeletePipelineByPackAndIDResponseBody - a list of Pipeline objects
type DeletePipelineByPackAndIDResponseBody struct {
	Items []shared.Pipeline `json:"items,omitempty"`
}

func (o *DeletePipelineByPackAndIDResponseBody) GetItems() []shared.Pipeline {
	if o == nil {
		return nil
	}
	return o.Items
}

type DeletePipelineByPackAndIDResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// a list of Pipeline objects
	Object *DeletePipelineByPackAndIDResponseBody
	// Unexpected error
	Error *shared.Error
}

func (o *DeletePipelineByPackAndIDResponse) GetContentType() string {
	if o == nil {
		return ""
	}
	return o.ContentType
}

func (o *DeletePipelineByPackAndIDResponse) GetStatusCode() int {
	if o == nil {
		return 0
	}
	return o.StatusCode
}

func (o *DeletePipelineByPackAndIDResponse) GetRawResponse() *http.Response {
	if o == nil {
		return nil
	}
	return o.RawResponse
}

func (o *DeletePipelineByPackAndIDResponse) GetObject() *DeletePipelineByPackAndIDResponseBody {
	if o == nil {
		return nil
	}
	return o.Object
}

func (o *DeletePipelineByPackAndIDResponse) GetError() *shared.Error {
	if o == nil {
		return nil
	}
	return o.Error
}
