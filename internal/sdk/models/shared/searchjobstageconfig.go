// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"errors"
	"fmt"
	"github.com/speakeasy/terraform-provider-cribl-terraform/internal/sdk/internal/utils"
)

type SearchJobStageConfigEarliestType string

const (
	SearchJobStageConfigEarliestTypeStr    SearchJobStageConfigEarliestType = "str"
	SearchJobStageConfigEarliestTypeNumber SearchJobStageConfigEarliestType = "number"
)

type SearchJobStageConfigEarliest struct {
	Str    *string  `queryParam:"inline"`
	Number *float64 `queryParam:"inline"`

	Type SearchJobStageConfigEarliestType
}

func CreateSearchJobStageConfigEarliestStr(str string) SearchJobStageConfigEarliest {
	typ := SearchJobStageConfigEarliestTypeStr

	return SearchJobStageConfigEarliest{
		Str:  &str,
		Type: typ,
	}
}

func CreateSearchJobStageConfigEarliestNumber(number float64) SearchJobStageConfigEarliest {
	typ := SearchJobStageConfigEarliestTypeNumber

	return SearchJobStageConfigEarliest{
		Number: &number,
		Type:   typ,
	}
}

func (u *SearchJobStageConfigEarliest) UnmarshalJSON(data []byte) error {

	var str string = ""
	if err := utils.UnmarshalJSON(data, &str, "", true, true); err == nil {
		u.Str = &str
		u.Type = SearchJobStageConfigEarliestTypeStr
		return nil
	}

	var number float64 = float64(0)
	if err := utils.UnmarshalJSON(data, &number, "", true, true); err == nil {
		u.Number = &number
		u.Type = SearchJobStageConfigEarliestTypeNumber
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for SearchJobStageConfigEarliest", string(data))
}

func (u SearchJobStageConfigEarliest) MarshalJSON() ([]byte, error) {
	if u.Str != nil {
		return utils.MarshalJSON(u.Str, "", true)
	}

	if u.Number != nil {
		return utils.MarshalJSON(u.Number, "", true)
	}

	return nil, errors.New("could not marshal union type SearchJobStageConfigEarliest: all fields are null")
}

type SearchJobStageConfigLatestType string

const (
	SearchJobStageConfigLatestTypeStr    SearchJobStageConfigLatestType = "str"
	SearchJobStageConfigLatestTypeNumber SearchJobStageConfigLatestType = "number"
)

type SearchJobStageConfigLatest struct {
	Str    *string  `queryParam:"inline"`
	Number *float64 `queryParam:"inline"`

	Type SearchJobStageConfigLatestType
}

func CreateSearchJobStageConfigLatestStr(str string) SearchJobStageConfigLatest {
	typ := SearchJobStageConfigLatestTypeStr

	return SearchJobStageConfigLatest{
		Str:  &str,
		Type: typ,
	}
}

func CreateSearchJobStageConfigLatestNumber(number float64) SearchJobStageConfigLatest {
	typ := SearchJobStageConfigLatestTypeNumber

	return SearchJobStageConfigLatest{
		Number: &number,
		Type:   typ,
	}
}

func (u *SearchJobStageConfigLatest) UnmarshalJSON(data []byte) error {

	var str string = ""
	if err := utils.UnmarshalJSON(data, &str, "", true, true); err == nil {
		u.Str = &str
		u.Type = SearchJobStageConfigLatestTypeStr
		return nil
	}

	var number float64 = float64(0)
	if err := utils.UnmarshalJSON(data, &number, "", true, true); err == nil {
		u.Number = &number
		u.Type = SearchJobStageConfigLatestTypeNumber
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for SearchJobStageConfigLatest", string(data))
}

func (u SearchJobStageConfigLatest) MarshalJSON() ([]byte, error) {
	if u.Str != nil {
		return utils.MarshalJSON(u.Str, "", true)
	}

	if u.Number != nil {
		return utils.MarshalJSON(u.Number, "", true)
	}

	return nil, errors.New("could not marshal union type SearchJobStageConfigLatest: all fields are null")
}

type SearchJobStageConfigStatus string

const (
	SearchJobStageConfigStatusNew       SearchJobStageConfigStatus = "new"
	SearchJobStageConfigStatusFailed    SearchJobStageConfigStatus = "failed"
	SearchJobStageConfigStatusRunning   SearchJobStageConfigStatus = "running"
	SearchJobStageConfigStatusCompleted SearchJobStageConfigStatus = "completed"
	SearchJobStageConfigStatusCanceled  SearchJobStageConfigStatus = "canceled"
	SearchJobStageConfigStatusQueued    SearchJobStageConfigStatus = "queued"
)

func (e SearchJobStageConfigStatus) ToPointer() *SearchJobStageConfigStatus {
	return &e
}
func (e *SearchJobStageConfigStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "new":
		fallthrough
	case "failed":
		fallthrough
	case "running":
		fallthrough
	case "completed":
		fallthrough
	case "canceled":
		fallthrough
	case "queued":
		*e = SearchJobStageConfigStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SearchJobStageConfigStatus: %v", v)
	}
}

type SearchJobStageConfig struct {
	CacheStatusByDatasetID any                           `json:"cacheStatusByDatasetId,omitempty"`
	Dependencies           []StageDependency             `json:"dependencies"`
	Earliest               *SearchJobStageConfigEarliest `json:"earliest,omitempty"`
	ExecutionWarnings      []JobExecutionWarning         `json:"executionWarnings,omitempty"`
	Filter                 string                        `json:"filter"`
	ID                     string                        `json:"id"`
	Latest                 *SearchJobStageConfigLatest   `json:"latest,omitempty"`
	ResolvedDatasetIds     []string                      `json:"resolvedDatasetIds"`
	SearchConfig           SearchConfig                  `json:"searchConfig"`
	Status                 SearchJobStageConfigStatus    `json:"status"`
	SubQueryText           string                        `json:"subQueryText"`
}

func (o *SearchJobStageConfig) GetCacheStatusByDatasetID() any {
	if o == nil {
		return nil
	}
	return o.CacheStatusByDatasetID
}

func (o *SearchJobStageConfig) GetDependencies() []StageDependency {
	if o == nil {
		return []StageDependency{}
	}
	return o.Dependencies
}

func (o *SearchJobStageConfig) GetEarliest() *SearchJobStageConfigEarliest {
	if o == nil {
		return nil
	}
	return o.Earliest
}

func (o *SearchJobStageConfig) GetExecutionWarnings() []JobExecutionWarning {
	if o == nil {
		return nil
	}
	return o.ExecutionWarnings
}

func (o *SearchJobStageConfig) GetFilter() string {
	if o == nil {
		return ""
	}
	return o.Filter
}

func (o *SearchJobStageConfig) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *SearchJobStageConfig) GetLatest() *SearchJobStageConfigLatest {
	if o == nil {
		return nil
	}
	return o.Latest
}

func (o *SearchJobStageConfig) GetResolvedDatasetIds() []string {
	if o == nil {
		return []string{}
	}
	return o.ResolvedDatasetIds
}

func (o *SearchJobStageConfig) GetSearchConfig() SearchConfig {
	if o == nil {
		return SearchConfig{}
	}
	return o.SearchConfig
}

func (o *SearchJobStageConfig) GetStatus() SearchJobStageConfigStatus {
	if o == nil {
		return SearchJobStageConfigStatus("")
	}
	return o.Status
}

func (o *SearchJobStageConfig) GetSubQueryText() string {
	if o == nil {
		return ""
	}
	return o.SubQueryText
}
