// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/speakeasy/terraform-provider-cribl-terraform/internal/sdk/internal/utils"
)

type SendDiagBundle struct {
	// Send diagnostic bundle to Cribl Support
	SendToCribl *bool `default:"false" json:"sendToCribl"`
	// Existing bundle that will be sent to Cribl Support. Max 100MB.
	Path *string `json:"path,omitempty"`
	// Append .txt to JavaScript files
	RenameJs *bool `default:"true" json:"renameJs"`
	// Disable to exclude metrics from the bundle
	IncludeMetrics *bool `default:"true" json:"includeMetrics"`
	// Disable to exclude the git audit from the bundle
	IncludeGit *bool `default:"true" json:"includeGit"`
	// Include data about your 10 highest-volume Sources, Destinations, Pipelines, Routes, and Packs in the diagnostic bundle
	IncludeTopTalkers *bool `default:"false" json:"includeTopTalkers"`
	// Number of jobs, including all tasks that will be included in the bundle
	MaxIncludeJobs *float64 `json:"maxIncludeJobs,omitempty"`
	// Enable to include installation logs in the bundle (Windows only)
	IncludeInstallLogs *bool `default:"false" json:"includeInstallLogs"`
}

func (s SendDiagBundle) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SendDiagBundle) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SendDiagBundle) GetSendToCribl() *bool {
	if o == nil {
		return nil
	}
	return o.SendToCribl
}

func (o *SendDiagBundle) GetPath() *string {
	if o == nil {
		return nil
	}
	return o.Path
}

func (o *SendDiagBundle) GetRenameJs() *bool {
	if o == nil {
		return nil
	}
	return o.RenameJs
}

func (o *SendDiagBundle) GetIncludeMetrics() *bool {
	if o == nil {
		return nil
	}
	return o.IncludeMetrics
}

func (o *SendDiagBundle) GetIncludeGit() *bool {
	if o == nil {
		return nil
	}
	return o.IncludeGit
}

func (o *SendDiagBundle) GetIncludeTopTalkers() *bool {
	if o == nil {
		return nil
	}
	return o.IncludeTopTalkers
}

func (o *SendDiagBundle) GetMaxIncludeJobs() *float64 {
	if o == nil {
		return nil
	}
	return o.MaxIncludeJobs
}

func (o *SendDiagBundle) GetIncludeInstallLogs() *bool {
	if o == nil {
		return nil
	}
	return o.IncludeInstallLogs
}
