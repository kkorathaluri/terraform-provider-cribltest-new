// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
	"github.com/speakeasy/terraform-provider-cribl-terraform/internal/sdk/internal/utils"
	"time"
)

type SandboxAssignmentDTOState string

const (
	SandboxAssignmentDTOStateProvisioning SandboxAssignmentDTOState = "PROVISIONING"
	SandboxAssignmentDTOStateAvailable    SandboxAssignmentDTOState = "AVAILABLE"
	SandboxAssignmentDTOStateAssigning    SandboxAssignmentDTOState = "ASSIGNING"
	SandboxAssignmentDTOStateAssigned     SandboxAssignmentDTOState = "ASSIGNED"
	SandboxAssignmentDTOStateDeleting     SandboxAssignmentDTOState = "DELETING"
)

func (e SandboxAssignmentDTOState) ToPointer() *SandboxAssignmentDTOState {
	return &e
}
func (e *SandboxAssignmentDTOState) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "PROVISIONING":
		fallthrough
	case "AVAILABLE":
		fallthrough
	case "ASSIGNING":
		fallthrough
	case "ASSIGNED":
		fallthrough
	case "DELETING":
		*e = SandboxAssignmentDTOState(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SandboxAssignmentDTOState: %v", v)
	}
}

type SandboxAssignmentDTO struct {
	OrganizationID string                    `json:"organizationId"`
	WorkspaceID    string                    `json:"workspaceId"`
	State          SandboxAssignmentDTOState `json:"state"`
	UserID         *string                   `json:"userId,omitempty"`
	CourseID       *string                   `json:"courseId,omitempty"`
	AssignedAt     *time.Time                `json:"assignedAt,omitempty"`
	ExpiresAt      *time.Time                `json:"expiresAt,omitempty"`
	CreatedAt      time.Time                 `json:"createdAt"`
	UpdatedAt      time.Time                 `json:"updatedAt"`
}

func (s SandboxAssignmentDTO) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(s, "", false)
}

func (s *SandboxAssignmentDTO) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &s, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *SandboxAssignmentDTO) GetOrganizationID() string {
	if o == nil {
		return ""
	}
	return o.OrganizationID
}

func (o *SandboxAssignmentDTO) GetWorkspaceID() string {
	if o == nil {
		return ""
	}
	return o.WorkspaceID
}

func (o *SandboxAssignmentDTO) GetState() SandboxAssignmentDTOState {
	if o == nil {
		return SandboxAssignmentDTOState("")
	}
	return o.State
}

func (o *SandboxAssignmentDTO) GetUserID() *string {
	if o == nil {
		return nil
	}
	return o.UserID
}

func (o *SandboxAssignmentDTO) GetCourseID() *string {
	if o == nil {
		return nil
	}
	return o.CourseID
}

func (o *SandboxAssignmentDTO) GetAssignedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.AssignedAt
}

func (o *SandboxAssignmentDTO) GetExpiresAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.ExpiresAt
}

func (o *SandboxAssignmentDTO) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *SandboxAssignmentDTO) GetUpdatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.UpdatedAt
}
