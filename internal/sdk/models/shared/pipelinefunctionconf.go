// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/speakeasy/terraform-provider-cribl-terraform/internal/sdk/internal/utils"
)

type FunctionSpecificConfigs struct {
}

type PipelineFunctionConf struct {
	// Filter that selects data to be fed through this Function
	Filter *string `default:"true" json:"filter"`
	// Function ID
	ID string `json:"id"`
	// Simple description of this step
	Description *string `json:"description,omitempty"`
	// If true, data will not be pushed through this function
	Disabled *bool `json:"disabled,omitempty"`
	// If enabled, stops the results of this Function from being passed to the downstream Functions
	Final *bool                   `json:"final,omitempty"`
	Conf  FunctionSpecificConfigs `json:"conf"`
	// Group ID
	GroupID *string `json:"groupId,omitempty"`
}

func (p PipelineFunctionConf) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *PipelineFunctionConf) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *PipelineFunctionConf) GetFilter() *string {
	if o == nil {
		return nil
	}
	return o.Filter
}

func (o *PipelineFunctionConf) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *PipelineFunctionConf) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *PipelineFunctionConf) GetDisabled() *bool {
	if o == nil {
		return nil
	}
	return o.Disabled
}

func (o *PipelineFunctionConf) GetFinal() *bool {
	if o == nil {
		return nil
	}
	return o.Final
}

func (o *PipelineFunctionConf) GetConf() FunctionSpecificConfigs {
	if o == nil {
		return FunctionSpecificConfigs{}
	}
	return o.Conf
}

func (o *PipelineFunctionConf) GetGroupID() *string {
	if o == nil {
		return nil
	}
	return o.GroupID
}
