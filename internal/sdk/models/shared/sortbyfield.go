// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type Direction string

const (
	DirectionAscending  Direction = "ascending"
	DirectionDescending Direction = "descending"
)

func (e Direction) ToPointer() *Direction {
	return &e
}
func (e *Direction) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "ascending":
		fallthrough
	case "descending":
		*e = Direction(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Direction: %v", v)
	}
}

type NullPosition string

const (
	NullPositionNullsFirst NullPosition = "nullsFirst"
	NullPositionNullsLast  NullPosition = "nullsLast"
)

func (e NullPosition) ToPointer() *NullPosition {
	return &e
}
func (e *NullPosition) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "nullsFirst":
		fallthrough
	case "nullsLast":
		*e = NullPosition(v)
		return nil
	default:
		return fmt.Errorf("invalid value for NullPosition: %v", v)
	}
}

type SortByField struct {
	Direction    Direction    `json:"direction"`
	FieldName    string       `json:"fieldName"`
	NullPosition NullPosition `json:"nullPosition"`
}

func (o *SortByField) GetDirection() Direction {
	if o == nil {
		return Direction("")
	}
	return o.Direction
}

func (o *SortByField) GetFieldName() string {
	if o == nil {
		return ""
	}
	return o.FieldName
}

func (o *SortByField) GetNullPosition() NullPosition {
	if o == nil {
		return NullPosition("")
	}
	return o.NullPosition
}
