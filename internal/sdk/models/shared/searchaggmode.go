// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SearchAggMode string

const (
	SearchAggModeCoordinated                           SearchAggMode = "Coordinated"
	SearchAggModeCoordinatedSuppressPreview            SearchAggMode = "CoordinatedSuppressPreview"
	SearchAggModeDistributedCoordinated                SearchAggMode = "DistributedCoordinated"
	SearchAggModeDistributedCoordinatedSuppressPreview SearchAggMode = "DistributedCoordinatedSuppressPreview"
	SearchAggModeFederated                             SearchAggMode = "Federated"
)

func (e SearchAggMode) ToPointer() *SearchAggMode {
	return &e
}
func (e *SearchAggMode) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "Coordinated":
		fallthrough
	case "CoordinatedSuppressPreview":
		fallthrough
	case "DistributedCoordinated":
		fallthrough
	case "DistributedCoordinatedSuppressPreview":
		fallthrough
	case "Federated":
		*e = SearchAggMode(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SearchAggMode: %v", v)
	}
}
