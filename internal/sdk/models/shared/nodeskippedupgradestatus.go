// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type NodeSkippedUpgradeStatus int64

const (
	NodeSkippedUpgradeStatusZero  NodeSkippedUpgradeStatus = 0
	NodeSkippedUpgradeStatusOne   NodeSkippedUpgradeStatus = 1
	NodeSkippedUpgradeStatusTwo   NodeSkippedUpgradeStatus = 2
	NodeSkippedUpgradeStatusThree NodeSkippedUpgradeStatus = 3
)

func (e NodeSkippedUpgradeStatus) ToPointer() *NodeSkippedUpgradeStatus {
	return &e
}
func (e *NodeSkippedUpgradeStatus) UnmarshalJSON(data []byte) error {
	var v int64
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case 0:
		fallthrough
	case 1:
		fallthrough
	case 2:
		fallthrough
	case 3:
		*e = NodeSkippedUpgradeStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for NodeSkippedUpgradeStatus: %v", v)
	}
}
