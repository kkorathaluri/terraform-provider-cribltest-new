// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

type SearchJobResults struct {
	IsFinished          bool    `json:"isFinished"`
	Job                 any     `json:"job"`
	Limit               float64 `json:"limit"`
	Offset              float64 `json:"offset"`
	PersistedEventCount float64 `json:"persistedEventCount"`
	TotalEventCount     float64 `json:"totalEventCount"`
}

func (o *SearchJobResults) GetIsFinished() bool {
	if o == nil {
		return false
	}
	return o.IsFinished
}

func (o *SearchJobResults) GetJob() any {
	if o == nil {
		return nil
	}
	return o.Job
}

func (o *SearchJobResults) GetLimit() float64 {
	if o == nil {
		return 0.0
	}
	return o.Limit
}

func (o *SearchJobResults) GetOffset() float64 {
	if o == nil {
		return 0.0
	}
	return o.Offset
}

func (o *SearchJobResults) GetPersistedEventCount() float64 {
	if o == nil {
		return 0.0
	}
	return o.PersistedEventCount
}

func (o *SearchJobResults) GetTotalEventCount() float64 {
	if o == nil {
		return 0.0
	}
	return o.TotalEventCount
}
