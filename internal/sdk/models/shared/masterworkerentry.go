// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type LastMetrics struct {
}

type MasterWorkerEntryType string

const (
	MasterWorkerEntryTypeInfo MasterWorkerEntryType = "info"
	MasterWorkerEntryTypeReq  MasterWorkerEntryType = "req"
	MasterWorkerEntryTypeResp MasterWorkerEntryType = "resp"
)

func (e MasterWorkerEntryType) ToPointer() *MasterWorkerEntryType {
	return &e
}
func (e *MasterWorkerEntryType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "info":
		fallthrough
	case "req":
		fallthrough
	case "resp":
		*e = MasterWorkerEntryType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for MasterWorkerEntryType: %v", v)
	}
}

type Workers struct {
	Count float64 `json:"count"`
}

func (o *Workers) GetCount() float64 {
	if o == nil {
		return 0.0
	}
	return o.Count
}

type MasterWorkerEntry struct {
	Deployable        *bool                  `json:"deployable,omitempty"`
	FirstMsgTime      float64                `json:"firstMsgTime"`
	Group             string                 `json:"group"`
	ID                string                 `json:"id"`
	Info              NodeProvidedInfo       `json:"info"`
	LastMetrics       *LastMetrics           `json:"lastMetrics,omitempty"`
	LastMsgTime       float64                `json:"lastMsgTime"`
	Metadata          *HeartbeatMetadata     `json:"metadata,omitempty"`
	NodeUpgradeStatus *NodeUpgradeStatus     `json:"nodeUpgradeStatus,omitempty"`
	Status            *string                `json:"status,omitempty"`
	Type              *MasterWorkerEntryType `json:"type,omitempty"`
	WorkerProcesses   float64                `json:"workerProcesses"`
	Workers           *Workers               `json:"workers,omitempty"`
}

func (o *MasterWorkerEntry) GetDeployable() *bool {
	if o == nil {
		return nil
	}
	return o.Deployable
}

func (o *MasterWorkerEntry) GetFirstMsgTime() float64 {
	if o == nil {
		return 0.0
	}
	return o.FirstMsgTime
}

func (o *MasterWorkerEntry) GetGroup() string {
	if o == nil {
		return ""
	}
	return o.Group
}

func (o *MasterWorkerEntry) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *MasterWorkerEntry) GetInfo() NodeProvidedInfo {
	if o == nil {
		return NodeProvidedInfo{}
	}
	return o.Info
}

func (o *MasterWorkerEntry) GetLastMetrics() *LastMetrics {
	if o == nil {
		return nil
	}
	return o.LastMetrics
}

func (o *MasterWorkerEntry) GetLastMsgTime() float64 {
	if o == nil {
		return 0.0
	}
	return o.LastMsgTime
}

func (o *MasterWorkerEntry) GetMetadata() *HeartbeatMetadata {
	if o == nil {
		return nil
	}
	return o.Metadata
}

func (o *MasterWorkerEntry) GetNodeUpgradeStatus() *NodeUpgradeStatus {
	if o == nil {
		return nil
	}
	return o.NodeUpgradeStatus
}

func (o *MasterWorkerEntry) GetStatus() *string {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *MasterWorkerEntry) GetType() *MasterWorkerEntryType {
	if o == nil {
		return nil
	}
	return o.Type
}

func (o *MasterWorkerEntry) GetWorkerProcesses() float64 {
	if o == nil {
		return 0.0
	}
	return o.WorkerProcesses
}

func (o *MasterWorkerEntry) GetWorkers() *Workers {
	if o == nil {
		return nil
	}
	return o.Workers
}
