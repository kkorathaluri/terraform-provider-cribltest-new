// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type RbacResource string

const (
	RbacResourceGroups           RbacResource = "groups"
	RbacResourceDatasets         RbacResource = "datasets"
	RbacResourceDatasetProviders RbacResource = "dataset-providers"
	RbacResourceProjects         RbacResource = "projects"
	RbacResourceDashboards       RbacResource = "dashboards"
	RbacResourceMacros           RbacResource = "macros"
)

func (e RbacResource) ToPointer() *RbacResource {
	return &e
}
func (e *RbacResource) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "groups":
		fallthrough
	case "datasets":
		fallthrough
	case "dataset-providers":
		fallthrough
	case "projects":
		fallthrough
	case "dashboards":
		fallthrough
	case "macros":
		*e = RbacResource(v)
		return nil
	default:
		return fmt.Errorf("invalid value for RbacResource: %v", v)
	}
}
