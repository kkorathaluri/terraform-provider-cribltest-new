// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

type RedisCacheLimits struct {
	ClientTrackingMechanism *string  `json:"clientTrackingMechanism,omitempty"`
	EnableServerAssist      *bool    `json:"enableServerAssist,omitempty"`
	KeyTTLSecs              *float64 `json:"keyTTLSecs,omitempty"`
	MaxCacheSize            *float64 `json:"maxCacheSize,omitempty"`
	MaxNumKeys              *float64 `json:"maxNumKeys,omitempty"`
	ServicePeriodSecs       *float64 `json:"servicePeriodSecs,omitempty"`
}

func (o *RedisCacheLimits) GetClientTrackingMechanism() *string {
	if o == nil {
		return nil
	}
	return o.ClientTrackingMechanism
}

func (o *RedisCacheLimits) GetEnableServerAssist() *bool {
	if o == nil {
		return nil
	}
	return o.EnableServerAssist
}

func (o *RedisCacheLimits) GetKeyTTLSecs() *float64 {
	if o == nil {
		return nil
	}
	return o.KeyTTLSecs
}

func (o *RedisCacheLimits) GetMaxCacheSize() *float64 {
	if o == nil {
		return nil
	}
	return o.MaxCacheSize
}

func (o *RedisCacheLimits) GetMaxNumKeys() *float64 {
	if o == nil {
		return nil
	}
	return o.MaxNumKeys
}

func (o *RedisCacheLimits) GetServicePeriodSecs() *float64 {
	if o == nil {
		return nil
	}
	return o.ServicePeriodSecs
}
