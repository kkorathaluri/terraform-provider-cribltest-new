// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type SearchHealthCheckStatusStatus string

const (
	SearchHealthCheckStatusStatusRed   SearchHealthCheckStatusStatus = "red"
	SearchHealthCheckStatusStatusGreen SearchHealthCheckStatusStatus = "green"
)

func (e SearchHealthCheckStatusStatus) ToPointer() *SearchHealthCheckStatusStatus {
	return &e
}
func (e *SearchHealthCheckStatusStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "red":
		fallthrough
	case "green":
		*e = SearchHealthCheckStatusStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for SearchHealthCheckStatusStatus: %v", v)
	}
}

type SearchHealthCheckStatus struct {
	ReportedAt float64                       `json:"reported_at"`
	Status     SearchHealthCheckStatusStatus `json:"status"`
}

func (o *SearchHealthCheckStatus) GetReportedAt() float64 {
	if o == nil {
		return 0.0
	}
	return o.ReportedAt
}

func (o *SearchHealthCheckStatus) GetStatus() SearchHealthCheckStatusStatus {
	if o == nil {
		return SearchHealthCheckStatusStatus("")
	}
	return o.Status
}
