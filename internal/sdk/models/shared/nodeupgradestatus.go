// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

type NodeUpgradeStatus struct {
	Active    *NodeActiveUpgradeStatus  `json:"active,omitempty"`
	Failed    *NodeFailedUpgradeStatus  `json:"failed,omitempty"`
	Skipped   *NodeSkippedUpgradeStatus `json:"skipped,omitempty"`
	State     NodeUpgradeState          `json:"state"`
	Timestamp float64                   `json:"timestamp"`
}

func (o *NodeUpgradeStatus) GetActive() *NodeActiveUpgradeStatus {
	if o == nil {
		return nil
	}
	return o.Active
}

func (o *NodeUpgradeStatus) GetFailed() *NodeFailedUpgradeStatus {
	if o == nil {
		return nil
	}
	return o.Failed
}

func (o *NodeUpgradeStatus) GetSkipped() *NodeSkippedUpgradeStatus {
	if o == nil {
		return nil
	}
	return o.Skipped
}

func (o *NodeUpgradeStatus) GetState() NodeUpgradeState {
	if o == nil {
		return NodeUpgradeState(0)
	}
	return o.State
}

func (o *NodeUpgradeStatus) GetTimestamp() float64 {
	if o == nil {
		return 0.0
	}
	return o.Timestamp
}
