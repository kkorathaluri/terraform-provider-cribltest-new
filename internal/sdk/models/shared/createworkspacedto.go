// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type Region string

const (
	RegionUsWest2      Region = "us-west-2"
	RegionUsEast1      Region = "us-east-1"
	RegionEuCentral1   Region = "eu-central-1"
	RegionEuWest2      Region = "eu-west-2"
	RegionApSoutheast2 Region = "ap-southeast-2"
	RegionCaCentral1   Region = "ca-central-1"
	RegionUsEast2      Region = "us-east-2"
)

func (e Region) ToPointer() *Region {
	return &e
}
func (e *Region) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "us-west-2":
		fallthrough
	case "us-east-1":
		fallthrough
	case "eu-central-1":
		fallthrough
	case "eu-west-2":
		fallthrough
	case "ap-southeast-2":
		fallthrough
	case "ca-central-1":
		fallthrough
	case "us-east-2":
		*e = Region(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Region: %v", v)
	}
}

type CreateWorkspaceDTO struct {
	Alias       *string  `json:"alias,omitempty"`
	Description *string  `json:"description,omitempty"`
	Tags        []string `json:"tags,omitempty"`
	WorkspaceID string   `json:"workspaceId"`
	Region      Region   `json:"region"`
}

func (o *CreateWorkspaceDTO) GetAlias() *string {
	if o == nil {
		return nil
	}
	return o.Alias
}

func (o *CreateWorkspaceDTO) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *CreateWorkspaceDTO) GetTags() []string {
	if o == nil {
		return nil
	}
	return o.Tags
}

func (o *CreateWorkspaceDTO) GetWorkspaceID() string {
	if o == nil {
		return ""
	}
	return o.WorkspaceID
}

func (o *CreateWorkspaceDTO) GetRegion() Region {
	if o == nil {
		return Region("")
	}
	return o.Region
}
