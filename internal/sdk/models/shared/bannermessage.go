// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type BannerType string

const (
	BannerTypeCustom BannerType = "custom"
	BannerTypeSystem BannerType = "system"
)

func (e BannerType) ToPointer() *BannerType {
	return &e
}
func (e *BannerType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "custom":
		fallthrough
	case "system":
		*e = BannerType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for BannerType: %v", v)
	}
}

type BannerMessage struct {
	ID *string `json:"id,omitempty"`
	// Show a banner on top of all pages
	Enabled bool       `json:"enabled"`
	Type    BannerType `json:"type"`
	// Time created
	Created         *float64 `json:"created,omitempty"`
	Theme           string   `json:"theme"`
	InvertFontColor *bool    `json:"invertFontColor,omitempty"`
	// Enter a message to display to all your Organization's users, across all Cribl products. Limited to one line and 100 characters; will be truncated as needed.
	Message string `json:"message"`
	// Optionally, provide a URL to append to the message
	Link *string `json:"link,omitempty"`
	// Optionally, display your link with a short text label instead of the raw URL (100-character limit)
	LinkDisplay  *string  `json:"linkDisplay,omitempty"`
	CustomThemes []string `json:"customThemes,omitempty"`
}

func (o *BannerMessage) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *BannerMessage) GetEnabled() bool {
	if o == nil {
		return false
	}
	return o.Enabled
}

func (o *BannerMessage) GetType() BannerType {
	if o == nil {
		return BannerType("")
	}
	return o.Type
}

func (o *BannerMessage) GetCreated() *float64 {
	if o == nil {
		return nil
	}
	return o.Created
}

func (o *BannerMessage) GetTheme() string {
	if o == nil {
		return ""
	}
	return o.Theme
}

func (o *BannerMessage) GetInvertFontColor() *bool {
	if o == nil {
		return nil
	}
	return o.InvertFontColor
}

func (o *BannerMessage) GetMessage() string {
	if o == nil {
		return ""
	}
	return o.Message
}

func (o *BannerMessage) GetLink() *string {
	if o == nil {
		return nil
	}
	return o.Link
}

func (o *BannerMessage) GetLinkDisplay() *string {
	if o == nil {
		return nil
	}
	return o.LinkDisplay
}

func (o *BannerMessage) GetCustomThemes() []string {
	if o == nil {
		return nil
	}
	return o.CustomThemes
}
