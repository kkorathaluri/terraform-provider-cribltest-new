// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

type Collector struct {
	Conf     map[string]any `json:"__conf"`
	Filename string         `json:"__filename"`
	Disabled bool           `json:"disabled"`
	Group    string         `json:"group"`
	ID       string         `json:"id"`
	InitTime float64        `json:"initTime"`
	LoadTime float64        `json:"loadTime"`
	ModTime  float64        `json:"modTime"`
	Name     string         `json:"name"`
	Uischema map[string]any `json:"uischema"`
	Version  string         `json:"version"`
}

func (o *Collector) GetConf() map[string]any {
	if o == nil {
		return map[string]any{}
	}
	return o.Conf
}

func (o *Collector) GetFilename() string {
	if o == nil {
		return ""
	}
	return o.Filename
}

func (o *Collector) GetDisabled() bool {
	if o == nil {
		return false
	}
	return o.Disabled
}

func (o *Collector) GetGroup() string {
	if o == nil {
		return ""
	}
	return o.Group
}

func (o *Collector) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *Collector) GetInitTime() float64 {
	if o == nil {
		return 0.0
	}
	return o.InitTime
}

func (o *Collector) GetLoadTime() float64 {
	if o == nil {
		return 0.0
	}
	return o.LoadTime
}

func (o *Collector) GetModTime() float64 {
	if o == nil {
		return 0.0
	}
	return o.ModTime
}

func (o *Collector) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *Collector) GetUischema() map[string]any {
	if o == nil {
		return map[string]any{}
	}
	return o.Uischema
}

func (o *Collector) GetVersion() string {
	if o == nil {
		return ""
	}
	return o.Version
}
