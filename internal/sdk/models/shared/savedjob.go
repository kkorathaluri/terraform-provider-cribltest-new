// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"errors"
	"fmt"
	"github.com/speakeasy/terraform-provider-cribl-terraform/internal/sdk/internal/utils"
)

type SavedJobType string

const (
	SavedJobTypeSavedJobCollection      SavedJobType = "SavedJobCollection"
	SavedJobTypeSavedJobExecutor        SavedJobType = "SavedJobExecutor"
	SavedJobTypeSavedJobScheduledSearch SavedJobType = "SavedJobScheduledSearch"
)

type SavedJob struct {
	SavedJobCollection      *SavedJobCollection      `queryParam:"inline"`
	SavedJobExecutor        *SavedJobExecutor        `queryParam:"inline"`
	SavedJobScheduledSearch *SavedJobScheduledSearch `queryParam:"inline"`

	Type SavedJobType
}

func CreateSavedJobSavedJobCollection(savedJobCollection SavedJobCollection) SavedJob {
	typ := SavedJobTypeSavedJobCollection

	return SavedJob{
		SavedJobCollection: &savedJobCollection,
		Type:               typ,
	}
}

func CreateSavedJobSavedJobExecutor(savedJobExecutor SavedJobExecutor) SavedJob {
	typ := SavedJobTypeSavedJobExecutor

	return SavedJob{
		SavedJobExecutor: &savedJobExecutor,
		Type:             typ,
	}
}

func CreateSavedJobSavedJobScheduledSearch(savedJobScheduledSearch SavedJobScheduledSearch) SavedJob {
	typ := SavedJobTypeSavedJobScheduledSearch

	return SavedJob{
		SavedJobScheduledSearch: &savedJobScheduledSearch,
		Type:                    typ,
	}
}

func (u *SavedJob) UnmarshalJSON(data []byte) error {

	var savedJobExecutor SavedJobExecutor = SavedJobExecutor{}
	if err := utils.UnmarshalJSON(data, &savedJobExecutor, "", true, true); err == nil {
		u.SavedJobExecutor = &savedJobExecutor
		u.Type = SavedJobTypeSavedJobExecutor
		return nil
	}

	var savedJobScheduledSearch SavedJobScheduledSearch = SavedJobScheduledSearch{}
	if err := utils.UnmarshalJSON(data, &savedJobScheduledSearch, "", true, true); err == nil {
		u.SavedJobScheduledSearch = &savedJobScheduledSearch
		u.Type = SavedJobTypeSavedJobScheduledSearch
		return nil
	}

	var savedJobCollection SavedJobCollection = SavedJobCollection{}
	if err := utils.UnmarshalJSON(data, &savedJobCollection, "", true, true); err == nil {
		u.SavedJobCollection = &savedJobCollection
		u.Type = SavedJobTypeSavedJobCollection
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for SavedJob", string(data))
}

func (u SavedJob) MarshalJSON() ([]byte, error) {
	if u.SavedJobCollection != nil {
		return utils.MarshalJSON(u.SavedJobCollection, "", true)
	}

	if u.SavedJobExecutor != nil {
		return utils.MarshalJSON(u.SavedJobExecutor, "", true)
	}

	if u.SavedJobScheduledSearch != nil {
		return utils.MarshalJSON(u.SavedJobScheduledSearch, "", true)
	}

	return nil, errors.New("could not marshal union type SavedJob: all fields are null")
}
