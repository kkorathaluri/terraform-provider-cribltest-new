// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type GetSingleInvoiceDTOStatus string

const (
	GetSingleInvoiceDTOStatusDraft     GetSingleInvoiceDTOStatus = "DRAFT"
	GetSingleInvoiceDTOStatusFinalized GetSingleInvoiceDTOStatus = "FINALIZED"
	GetSingleInvoiceDTOStatusVoid      GetSingleInvoiceDTOStatus = "VOID"
)

func (e GetSingleInvoiceDTOStatus) ToPointer() *GetSingleInvoiceDTOStatus {
	return &e
}
func (e *GetSingleInvoiceDTOStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "DRAFT":
		fallthrough
	case "FINALIZED":
		fallthrough
	case "VOID":
		*e = GetSingleInvoiceDTOStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for GetSingleInvoiceDTOStatus: %v", v)
	}
}

type GetSingleInvoiceDTO struct {
	ID           string                    `json:"id"`
	FromDate     string                    `json:"fromDate"`
	ToDate       string                    `json:"toDate"`
	TotalCredits float64                   `json:"totalCredits"`
	Products     []InvoiceProduct          `json:"products"`
	Status       GetSingleInvoiceDTOStatus `json:"status"`
}

func (o *GetSingleInvoiceDTO) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *GetSingleInvoiceDTO) GetFromDate() string {
	if o == nil {
		return ""
	}
	return o.FromDate
}

func (o *GetSingleInvoiceDTO) GetToDate() string {
	if o == nil {
		return ""
	}
	return o.ToDate
}

func (o *GetSingleInvoiceDTO) GetTotalCredits() float64 {
	if o == nil {
		return 0.0
	}
	return o.TotalCredits
}

func (o *GetSingleInvoiceDTO) GetProducts() []InvoiceProduct {
	if o == nil {
		return []InvoiceProduct{}
	}
	return o.Products
}

func (o *GetSingleInvoiceDTO) GetStatus() GetSingleInvoiceDTOStatus {
	if o == nil {
		return GetSingleInvoiceDTOStatus("")
	}
	return o.Status
}
