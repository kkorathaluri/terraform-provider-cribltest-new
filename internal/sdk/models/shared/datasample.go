// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"github.com/speakeasy/terraform-provider-cribl-terraform/internal/sdk/internal/utils"
)

type DataSample struct {
	ID         string `json:"id"`
	SampleName string `json:"sampleName"`
	// Select a pipeline to associate with sample with. Select GLOBAL if not sure. Deprecated.
	PipelineID *string `json:"pipelineId,omitempty"`
	// Brief description of this sample file. Optional.
	Description *string `json:"description,omitempty"`
	// Time to live (TTL) for the sample; reset after each use. Leave empty to never expire.
	TTL *float64 `json:"ttl,omitempty"`
	// One or more tags related to this sample file. Optional.
	Tags                 *string `json:"tags,omitempty"`
	AdditionalProperties any     `additionalProperties:"true" json:"-"`
}

func (d DataSample) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(d, "", false)
}

func (d *DataSample) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &d, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *DataSample) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *DataSample) GetSampleName() string {
	if o == nil {
		return ""
	}
	return o.SampleName
}

func (o *DataSample) GetPipelineID() *string {
	if o == nil {
		return nil
	}
	return o.PipelineID
}

func (o *DataSample) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *DataSample) GetTTL() *float64 {
	if o == nil {
		return nil
	}
	return o.TTL
}

func (o *DataSample) GetTags() *string {
	if o == nil {
		return nil
	}
	return o.Tags
}

func (o *DataSample) GetAdditionalProperties() any {
	if o == nil {
		return nil
	}
	return o.AdditionalProperties
}
