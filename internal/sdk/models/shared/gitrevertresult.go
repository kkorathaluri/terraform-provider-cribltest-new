// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

type GitRevertResultFiles struct {
	Created  []string `json:"created,omitempty"`
	Deleted  []string `json:"deleted,omitempty"`
	Modified []string `json:"modified,omitempty"`
	Renamed  []string `json:"renamed,omitempty"`
}

func (o *GitRevertResultFiles) GetCreated() []string {
	if o == nil {
		return nil
	}
	return o.Created
}

func (o *GitRevertResultFiles) GetDeleted() []string {
	if o == nil {
		return nil
	}
	return o.Deleted
}

func (o *GitRevertResultFiles) GetModified() []string {
	if o == nil {
		return nil
	}
	return o.Modified
}

func (o *GitRevertResultFiles) GetRenamed() []string {
	if o == nil {
		return nil
	}
	return o.Renamed
}

type Audit struct {
	Files GitRevertResultFiles `json:"files"`
	Group string               `json:"group"`
	ID    string               `json:"id"`
}

func (o *Audit) GetFiles() GitRevertResultFiles {
	if o == nil {
		return GitRevertResultFiles{}
	}
	return o.Files
}

func (o *Audit) GetGroup() string {
	if o == nil {
		return ""
	}
	return o.Group
}

func (o *Audit) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

type GitRevertResult struct {
	Audit    Audit `json:"audit"`
	Reverted bool  `json:"reverted"`
}

func (o *GitRevertResult) GetAudit() Audit {
	if o == nil {
		return Audit{}
	}
	return o.Audit
}

func (o *GitRevertResult) GetReverted() bool {
	if o == nil {
		return false
	}
	return o.Reverted
}
