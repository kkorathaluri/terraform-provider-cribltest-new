// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type CriblLakeDatasetFormat string

const (
	CriblLakeDatasetFormatJSON    CriblLakeDatasetFormat = "json"
	CriblLakeDatasetFormatDdss    CriblLakeDatasetFormat = "ddss"
	CriblLakeDatasetFormatParquet CriblLakeDatasetFormat = "parquet"
)

func (e CriblLakeDatasetFormat) ToPointer() *CriblLakeDatasetFormat {
	return &e
}
func (e *CriblLakeDatasetFormat) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "json":
		fallthrough
	case "ddss":
		fallthrough
	case "parquet":
		*e = CriblLakeDatasetFormat(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CriblLakeDatasetFormat: %v", v)
	}
}

type CriblLakeDataset struct {
	AcceleratedFields     []string                 `json:"acceleratedFields,omitempty"`
	BucketName            string                   `json:"bucketName"`
	CacheConnection       *CacheConnection         `json:"cacheConnection,omitempty"`
	DeletionStartedAt     *float64                 `json:"deletionStartedAt,omitempty"`
	Description           *string                  `json:"description,omitempty"`
	Format                *CriblLakeDatasetFormat  `json:"format,omitempty"`
	ID                    string                   `json:"id"`
	RetentionPeriodInDays *float64                 `json:"retentionPeriodInDays,omitempty"`
	SearchConfig          *LakeDatasetSearchConfig `json:"searchConfig,omitempty"`
	ViewName              *string                  `json:"viewName,omitempty"`
}

func (o *CriblLakeDataset) GetAcceleratedFields() []string {
	if o == nil {
		return nil
	}
	return o.AcceleratedFields
}

func (o *CriblLakeDataset) GetBucketName() string {
	if o == nil {
		return ""
	}
	return o.BucketName
}

func (o *CriblLakeDataset) GetCacheConnection() *CacheConnection {
	if o == nil {
		return nil
	}
	return o.CacheConnection
}

func (o *CriblLakeDataset) GetDeletionStartedAt() *float64 {
	if o == nil {
		return nil
	}
	return o.DeletionStartedAt
}

func (o *CriblLakeDataset) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *CriblLakeDataset) GetFormat() *CriblLakeDatasetFormat {
	if o == nil {
		return nil
	}
	return o.Format
}

func (o *CriblLakeDataset) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *CriblLakeDataset) GetRetentionPeriodInDays() *float64 {
	if o == nil {
		return nil
	}
	return o.RetentionPeriodInDays
}

func (o *CriblLakeDataset) GetSearchConfig() *LakeDatasetSearchConfig {
	if o == nil {
		return nil
	}
	return o.SearchConfig
}

func (o *CriblLakeDataset) GetViewName() *string {
	if o == nil {
		return nil
	}
	return o.ViewName
}
