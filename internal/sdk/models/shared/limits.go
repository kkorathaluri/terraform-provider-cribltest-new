// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

type Samples struct {
	MaxSize string `json:"maxSize"`
}

func (o *Samples) GetMaxSize() string {
	if o == nil {
		return ""
	}
	return o.MaxSize
}

type Limits struct {
	CPUProfileTTL               string                    `json:"cpuProfileTTL"`
	EdgeMetricsCustomExpression *string                   `json:"edgeMetricsCustomExpression,omitempty"`
	EdgeMetricsMode             *EdgeHeartbeatMetricsMode `json:"edgeMetricsMode,omitempty"`
	EdgeNodesCount              *float64                  `json:"edgeNodesCount,omitempty"`
	EnableMetricsPersistence    bool                      `json:"enableMetricsPersistence"`
	EventsMetadataSources       []string                  `json:"eventsMetadataSources,omitempty"`
	MaxMetrics                  *float64                  `json:"maxMetrics,omitempty"`
	MaxPQSize                   *string                   `json:"maxPQSize,omitempty"`
	MetricsDirectory            string                    `json:"metricsDirectory"`
	MetricsDropList             []string                  `json:"metricsDropList,omitempty"`
	MetricsFieldsBlacklist      []string                  `json:"metricsFieldsBlacklist"`
	MetricsGCPeriod             string                    `json:"metricsGCPeriod"`
	MetricsMaxCardinality       *float64                  `json:"metricsMaxCardinality,omitempty"`
	MetricsMaxDiskSpace         *string                   `json:"metricsMaxDiskSpace,omitempty"`
	MetricsNeverDropList        []string                  `json:"metricsNeverDropList"`
	MetricsWorkerIDBlacklist    []string                  `json:"metricsWorkerIdBlacklist"`
	MinFreeSpace                string                    `json:"minFreeSpace"`
	Samples                     Samples                   `json:"samples"`
}

func (o *Limits) GetCPUProfileTTL() string {
	if o == nil {
		return ""
	}
	return o.CPUProfileTTL
}

func (o *Limits) GetEdgeMetricsCustomExpression() *string {
	if o == nil {
		return nil
	}
	return o.EdgeMetricsCustomExpression
}

func (o *Limits) GetEdgeMetricsMode() *EdgeHeartbeatMetricsMode {
	if o == nil {
		return nil
	}
	return o.EdgeMetricsMode
}

func (o *Limits) GetEdgeNodesCount() *float64 {
	if o == nil {
		return nil
	}
	return o.EdgeNodesCount
}

func (o *Limits) GetEnableMetricsPersistence() bool {
	if o == nil {
		return false
	}
	return o.EnableMetricsPersistence
}

func (o *Limits) GetEventsMetadataSources() []string {
	if o == nil {
		return nil
	}
	return o.EventsMetadataSources
}

func (o *Limits) GetMaxMetrics() *float64 {
	if o == nil {
		return nil
	}
	return o.MaxMetrics
}

func (o *Limits) GetMaxPQSize() *string {
	if o == nil {
		return nil
	}
	return o.MaxPQSize
}

func (o *Limits) GetMetricsDirectory() string {
	if o == nil {
		return ""
	}
	return o.MetricsDirectory
}

func (o *Limits) GetMetricsDropList() []string {
	if o == nil {
		return nil
	}
	return o.MetricsDropList
}

func (o *Limits) GetMetricsFieldsBlacklist() []string {
	if o == nil {
		return []string{}
	}
	return o.MetricsFieldsBlacklist
}

func (o *Limits) GetMetricsGCPeriod() string {
	if o == nil {
		return ""
	}
	return o.MetricsGCPeriod
}

func (o *Limits) GetMetricsMaxCardinality() *float64 {
	if o == nil {
		return nil
	}
	return o.MetricsMaxCardinality
}

func (o *Limits) GetMetricsMaxDiskSpace() *string {
	if o == nil {
		return nil
	}
	return o.MetricsMaxDiskSpace
}

func (o *Limits) GetMetricsNeverDropList() []string {
	if o == nil {
		return []string{}
	}
	return o.MetricsNeverDropList
}

func (o *Limits) GetMetricsWorkerIDBlacklist() []string {
	if o == nil {
		return []string{}
	}
	return o.MetricsWorkerIDBlacklist
}

func (o *Limits) GetMinFreeSpace() string {
	if o == nil {
		return ""
	}
	return o.MinFreeSpace
}

func (o *Limits) GetSamples() Samples {
	if o == nil {
		return Samples{}
	}
	return o.Samples
}
