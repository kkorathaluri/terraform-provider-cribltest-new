// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package shared

import (
	"encoding/json"
	"fmt"
)

type Mode string

const (
	ModePipe         Mode = "pipe"
	ModeRoute        Mode = "route"
	ModeRouteAndSend Mode = "routeAndSend"
)

func (e Mode) ToPointer() *Mode {
	return &e
}
func (e *Mode) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "pipe":
		fallthrough
	case "route":
		fallthrough
	case "routeAndSend":
		*e = Mode(v)
		return nil
	default:
		return fmt.Errorf("invalid value for Mode: %v", v)
	}
}

type PreviewDataParams struct {
	CPUProfile           *bool            `json:"cpuProfile,omitempty"`
	Dropped              *bool            `json:"dropped,omitempty"`
	EnhanceMetricsOutput *bool            `json:"enhanceMetricsOutput,omitempty"`
	Events               []map[string]any `json:"events,omitempty"`
	InputID              *string          `json:"inputId,omitempty"`
	Level                *float64         `json:"level,omitempty"`
	Memory               *float64         `json:"memory,omitempty"`
	Mode                 Mode             `json:"mode"`
	PipelineID           string           `json:"pipelineId"`
	SampleID             string           `json:"sampleId"`
	SamplePipelineID     *string          `json:"samplePipelineId,omitempty"`
	Timeout              *float64         `json:"timeout,omitempty"`
}

func (o *PreviewDataParams) GetCPUProfile() *bool {
	if o == nil {
		return nil
	}
	return o.CPUProfile
}

func (o *PreviewDataParams) GetDropped() *bool {
	if o == nil {
		return nil
	}
	return o.Dropped
}

func (o *PreviewDataParams) GetEnhanceMetricsOutput() *bool {
	if o == nil {
		return nil
	}
	return o.EnhanceMetricsOutput
}

func (o *PreviewDataParams) GetEvents() []map[string]any {
	if o == nil {
		return nil
	}
	return o.Events
}

func (o *PreviewDataParams) GetInputID() *string {
	if o == nil {
		return nil
	}
	return o.InputID
}

func (o *PreviewDataParams) GetLevel() *float64 {
	if o == nil {
		return nil
	}
	return o.Level
}

func (o *PreviewDataParams) GetMemory() *float64 {
	if o == nil {
		return nil
	}
	return o.Memory
}

func (o *PreviewDataParams) GetMode() Mode {
	if o == nil {
		return Mode("")
	}
	return o.Mode
}

func (o *PreviewDataParams) GetPipelineID() string {
	if o == nil {
		return ""
	}
	return o.PipelineID
}

func (o *PreviewDataParams) GetSampleID() string {
	if o == nil {
		return ""
	}
	return o.SampleID
}

func (o *PreviewDataParams) GetSamplePipelineID() *string {
	if o == nil {
		return nil
	}
	return o.SamplePipelineID
}

func (o *PreviewDataParams) GetTimeout() *float64 {
	if o == nil {
		return nil
	}
	return o.Timeout
}
